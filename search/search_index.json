{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ryujinx","text":""},{"location":"changelog-old/","title":"Changelog old","text":"<p>This is the changelog page for versions before 1.1.x (AppVeyor releases)</p>"},{"location":"changelog-old/#107181-2022-01-21","title":"1.0.7181 - 2022-01-21","text":""},{"location":"changelog-old/#fixed","title":"Fixed:","text":"<ul> <li>Fix deadlock for GPU counter report when 0 draws are done.</li> <li>Fixes a rare bug where reporting a counter for a region containing 0 draws could deadlock the GPU, usually showing an error saying \"Gpu AwaitResult: Error: Query result timed out. Took more than 5000 tries\".</li> <li>This uncommon bug affected games such as Mario Kart 8 Deluxe, Splatoon 2 and Super Mario Odyssey when backend multithreading was set to Auto/On.</li> </ul>"},{"location":"changelog-old/#107180-2022-01-21","title":"1.0.7180 - 2022-01-21","text":""},{"location":"changelog-old/#fixed_1","title":"Fixed:","text":"<ul> <li>Add host CPU memory barriers for DMB/DSB and ordered load/store.</li> <li>Fixes softlocks in Pok\u00e9mon Brilliant Diamond/Shining Pearl and Pok\u00e9mon Mystery Dungeon DX.</li> <li>May fix or reduce softlocks in Pok\u00e9mon Sword/Shield, Xenoblade Chronicles 2 and Yumenikki -Dream Diary-, possibly other games with similar softlocks.</li> </ul>"},{"location":"changelog-old/#107179-2022-01-21","title":"1.0.7179 - 2022-01-21","text":""},{"location":"changelog-old/#changed","title":"Changed:","text":"<ul> <li>Stop using glTransformFeedbackVaryings and use explicit layout on the shader.</li> <li>Reduces code differences between main build and Vulkan branch. No changes in games.</li> </ul>"},{"location":"changelog-old/#107178-2022-01-20","title":"1.0.7178 - 2022-01-20","text":""},{"location":"changelog-old/#added","title":"Added:","text":"<ul> <li>Add capability for BGRA formats.</li> <li>Reduces code differences between main build and Vulkan branch. No changes in games.</li> </ul>"},{"location":"changelog-old/#107177-2022-01-20","title":"1.0.7177 - 2022-01-20","text":""},{"location":"changelog-old/#added_1","title":"Added:","text":"<ul> <li>Implement FCVTNS (Scalar GP).</li> <li>Allows NBA 2K21 to boot.</li> </ul>"},{"location":"changelog-old/#107176-2022-01-18","title":"1.0.7176 - 2022-01-18","text":""},{"location":"changelog-old/#changed_1","title":"Changed:","text":"<ul> <li>Readme overhaul.</li> <li>Updates and cleans up the Readme.md file.</li> </ul>"},{"location":"changelog-old/#107175-2022-01-16","title":"1.0.7175 - 2022-01-16","text":""},{"location":"changelog-old/#fixed_2","title":"Fixed:","text":"<ul> <li>Scale scissor used for clears.</li> <li>Fixes a regression introduced in 1.0.7168 that would cause the screen to flicker in some games with resolution scale other than native, like Luigi's Mansion 3 or Tetris 99.</li> </ul>"},{"location":"changelog-old/#107174-2022-01-16","title":"1.0.7174 - 2022-01-16","text":""},{"location":"changelog-old/#fixed_3","title":"Fixed:","text":"<ul> <li>kernel: Fix deadlock when pinning in interrupt handler.</li> <li>Fixes a deadlock on DoDonPachi Resurrection when starting a new game.</li> <li>May fix similar deadlocks on other games.</li> </ul>"},{"location":"changelog-old/#107173-2022-01-16","title":"1.0.7173 - 2022-01-16","text":""},{"location":"changelog-old/#fixed_4","title":"Fixed:","text":"<ul> <li>Fix return type mismatch on 32-bit titles.</li> <li>Fixes an assert that was caused by the return type not matching the actual return type of the function, due to the address being 32-bits. </li> <li>Only affects debug builds.</li> </ul>"},{"location":"changelog-old/#107172-2022-01-13","title":"1.0.7172 - 2022-01-13","text":""},{"location":"changelog-old/#added_2","title":"Added:","text":"<ul> <li>ssl: Implement SSL connectivity.</li> <li>Adds support for SSL connection using .NET APIs for it.</li> <li>May improve games that connect to non-Nintendo servers.</li> </ul>"},{"location":"changelog-old/#107171-2022-01-12","title":"1.0.7171 - 2022-01-12","text":""},{"location":"changelog-old/#changed_2","title":"Changed:","text":"<ul> <li>bsd: Revamp API and make socket abstract.</li> <li>Cleans up the emulator's sockets code. No known changes to emulator functionality.</li> </ul>"},{"location":"changelog-old/#107170-2022-01-12","title":"1.0.7170 - 2022-01-12","text":""},{"location":"changelog-old/#fixed_5","title":"Fixed:","text":"<ul> <li>sfdnsres: Fix serialization issues.</li> <li>Fixes a crash in Monster Hunter Rise when guest Internet access is enabled.</li> </ul>"},{"location":"changelog-old/#107169-2022-01-12","title":"1.0.7169 - 2022-01-12","text":""},{"location":"changelog-old/#changed_3","title":"Changed:","text":"<ul> <li>Update to LibHac 0.15.0.</li> <li>No changes to emulator functionality.</li> </ul>"},{"location":"changelog-old/#107168-2022-01-11","title":"1.0.7168 - 2022-01-11","text":""},{"location":"changelog-old/#fixed_6","title":"Fixed:","text":"<ul> <li>Fix render target clear when sizes mismatch.</li> <li>Fixes Pathway not entirely clearing the screen.</li> </ul>"},{"location":"changelog-old/#107167-2022-01-11","title":"1.0.7167 - 2022-01-11","text":""},{"location":"changelog-old/#fixed_7","title":"Fixed:","text":"<ul> <li>Fix adjacent 3d texture slices being detected as Incompatible Overlaps.</li> <li>Fixes some regressions introduced in 1.0.7162 which caused 3D texture data to be lost for most slices.</li> <li>Fixes colour grading in Xenoblade Chronicles 2, and probably more games.</li> </ul>"},{"location":"changelog-old/#107166-2022-01-11","title":"1.0.7166 - 2022-01-11","text":""},{"location":"changelog-old/#changed_4","title":"Changed:","text":"<ul> <li>account: Rework LoadIdTokenCache to auto generate a random JWT token.</li> </ul>"},{"location":"changelog-old/#107165-2022-01-11","title":"1.0.7165 - 2022-01-11","text":""},{"location":"changelog-old/#changed_5","title":"Changed:","text":"<ul> <li>sfdnsres: Block communication attempt with NPLN servers.</li> <li>Blocks the emulator from communicating with Monster Hunter Rise servers.</li> </ul>"},{"location":"changelog-old/#107164-2022-01-10","title":"1.0.7164 - 2022-01-10","text":""},{"location":"changelog-old/#added_3","title":"Added:","text":"<ul> <li>Implement IMUL, PCNT and CONT shader instructions, fix FFMA32I and HFMA32I.</li> <li>Required by MelonDS Switch port and some homebrew applications. (MelonDS still needs more changes to work.)</li> <li>Fixes a regression introduced in 1.0.7069.</li> </ul>"},{"location":"changelog-old/#107163-2022-01-10","title":"1.0.7163 - 2022-01-10","text":""},{"location":"changelog-old/#fixed_8","title":"Fixed:","text":"<ul> <li>Fix sampled multisample texture size.</li> <li>Fixes rendering in Okami HD.</li> </ul>"},{"location":"changelog-old/#107162-2022-01-09","title":"1.0.7162 - 2022-01-09","text":""},{"location":"changelog-old/#fixed_9","title":"Fixed:","text":"<ul> <li>Texture Sync, incompatible overlap handling, data flush improvements.</li> <li>Fixes white water and teleportation animation in Breath of the Wild.</li> <li>Fixes rainbow lighting in Splatoon 2 after loading screens.</li> <li>Fixes many rendering/ texture streaming issues in (mostly) UE3/UE4 games, including A Hat in Time, Brothers: A Tale of Two Sons, Darksiders 3, Hellblade: Senua's Sacrifice, Life is Strange: True Colors, possibly more.</li> <li>Fixes texture corruption in The Witcher 3.</li> <li>Fixes Mario Kart 8 Deluxe replay thumbnails being from the previous race or black.</li> </ul>"},{"location":"changelog-old/#107161-2022-01-08","title":"1.0.7161 - 2022-01-08","text":""},{"location":"changelog-old/#fixed_10","title":"Fixed:","text":"<ul> <li>Return error on DNS resolution when guest internet access is disabled.</li> <li>Fixes a regression introduced in 1.0.7137 that made Crash Bandicoot 4 crash early on boot after trying to connect to some server. Note that the game will still crash if guest internet access is enabled.</li> </ul>"},{"location":"changelog-old/#107160-2022-01-08","title":"1.0.7160 - 2022-01-08","text":""},{"location":"changelog-old/#fixed_11","title":"Fixed:","text":"<ul> <li>Add support for render scale to vertex stage.</li> <li>Fixes render scale causing offset bloom (ghost images) in Super Mario Party, Mario Party Superstars and Clubhouse Games.</li> <li>Fixes grid-like artifacts when increasing the resolution on Hyrule Warriors: Age of Calamity.</li> </ul>"},{"location":"changelog-old/#107159-2022-01-04","title":"1.0.7159 - 2022-01-04","text":""},{"location":"changelog-old/#added_4","title":"Added:","text":"<ul> <li>CPU - Implement FCVTMS (Vector).</li> <li>Allows XCOM 2 Collection to boot.</li> </ul>"},{"location":"changelog-old/#107158-2022-01-03","title":"1.0.7158 - 2022-01-03","text":""},{"location":"changelog-old/#fixed_12","title":"Fixed:","text":"<ul> <li>sfdnsres: Implement NSD resolution.</li> <li>Fixes a missing implementation usage of NSD on IResolver when requested on GetAddrInfoRequest and GetHostByNameRequest.</li> </ul>"},{"location":"changelog-old/#107157-2022-01-03","title":"1.0.7157 - 2022-01-03","text":""},{"location":"changelog-old/#fixed_13","title":"Fixed:","text":"<ul> <li>Fix build id case issue for enabled cheats.</li> <li>Fixes an issue where cheats wouldn't work if the cheat file name was lowercase.</li> </ul>"},{"location":"changelog-old/#107156-2022-01-03","title":"1.0.7156 - 2022-01-03","text":""},{"location":"changelog-old/#added_5","title":"Added:","text":"<ul> <li>Implement analog stick range modifier.</li> <li>Adds range modification to the analog sticks of a given controller. Setting it above 1.00 makes it easier for controllers (especially older ones) to reach max stick values.</li> </ul>"},{"location":"changelog-old/#107155-2022-01-03","title":"1.0.7155 - 2022-01-03","text":""},{"location":"changelog-old/#added_6","title":"Added:","text":"<ul> <li>ffmpeg: Add extra checks and error messages.</li> <li>In Linux, these logs will make it more evident that a game is crashing because the necessary ffmpeg packages aren't installed.</li> </ul>"},{"location":"changelog-old/#107154-2022-01-03","title":"1.0.7154 - 2022-01-03","text":""},{"location":"changelog-old/#added_7","title":"Added:","text":"<ul> <li>Add Cheat Manager.</li> <li>Adds a cheat manager which makes it possible to disable and enable installed cheats while a game is running. However, it does not allow you to edit or add cheats, and any new cheats added to the cheat file while a game is running, will not work.</li> <li>Cheat manager can be accessed by right clicking games on the list or from Actions &gt; Manage Cheats during gameplay.</li> </ul>"},{"location":"changelog-old/#107153-2022-01-03","title":"1.0.7153 - 2022-01-03","text":""},{"location":"changelog-old/#added_8","title":"Added:","text":"<ul> <li>misc - Improve DNS blacklist for Nintendo servers.</li> <li>Blacklists more DNS addresses for Nintendo\u2019s servers.</li> </ul>"},{"location":"changelog-old/#107152-2021-12-31","title":"1.0.7152 - 2021-12-31","text":""},{"location":"changelog-old/#fixed_14","title":"Fixed:","text":"<ul> <li>Force crop when presentation cached texture size mismatches.</li> <li>Fixes rendering being shifted up slightly in Hades.</li> <li>Fixes NSO Nintendo 64 game selection being shifted up. (The NSO games still require more changes to run.)</li> <li>Fixes similar issue in Super Mario Sunshine.</li> </ul>"},{"location":"changelog-old/#107151-2021-12-30","title":"1.0.7151 - 2021-12-30","text":""},{"location":"changelog-old/#fixed_15","title":"Fixed:","text":"<ul> <li>Add support for the R4G4 texture format.</li> <li>Fixes black HUD elements in the Nintendo 64 NSO version of Ocarina of Time. (The NSO games still require more changes to run.)</li> </ul>"},{"location":"changelog-old/#107150-2021-12-30","title":"1.0.7150 - 2021-12-30","text":""},{"location":"changelog-old/#fixed_16","title":"Fixed:","text":"<ul> <li>Fix A1B5G5R5 texture format.</li> <li>Fixes graphical glitches in the Nintendo 64 NSO version of Ocarina of Time. May fix similar glitches in other N64 emulated titles. (The NSO games still require more changes to run.)</li> </ul>"},{"location":"changelog-old/#107149-2021-12-30","title":"1.0.7149 - 2021-12-30","text":""},{"location":"changelog-old/#changed_6","title":"Changed:","text":"<ul> <li>friend: Stub IsFriendListCacheAvailable and EnsureFriendListAvailable.</li> <li>Super Bomberman R Online will no longer crash on boot, however it will still get stuck on the loading screen due to other issues.</li> </ul>"},{"location":"changelog-old/#107148-2021-12-30","title":"1.0.7148 - 2021-12-30","text":""},{"location":"changelog-old/#changed_7","title":"Changed:","text":"<ul> <li>am: Stub SetMediaPlaybackStateForApplication.</li> <li>Required by the YouTube app.</li> </ul>"},{"location":"changelog-old/#107147-2021-12-30","title":"1.0.7147 - 2021-12-30","text":""},{"location":"changelog-old/#added_9","title":"Added:","text":"<ul> <li>kernel: Implement thread pinning support.</li> <li>Adds support for 8.x thread pinning changes and implements SynchronizePreemptionState syscall.</li> <li>May fix some softlocks. </li> </ul>"},{"location":"changelog-old/#107146-2021-12-29","title":"1.0.7146 - 2021-12-29","text":""},{"location":"changelog-old/#fixed_17","title":"Fixed:","text":"<ul> <li>Improve SocketOption handling.</li> <li>Fixes some warnings caused by missing options.</li> </ul>"},{"location":"changelog-old/#107145-2021-12-29","title":"1.0.7145 - 2021-12-29","text":""},{"location":"changelog-old/#changed_8","title":"Changed:","text":"<ul> <li>hid: A little cleanup.</li> <li>Small code cleanup. No changes expected in emulator functionality.</li> </ul>"},{"location":"changelog-old/#107144-2021-12-28","title":"1.0.7144 - 2021-12-28","text":""},{"location":"changelog-old/#fixed_18","title":"Fixed:","text":"<ul> <li>Flip scissor box when the YNegate bit is set.</li> <li>Fixes in-game UI in Bloons TD 5.</li> <li>Fixes menus being cut off in the YouTube app.</li> <li>May fix similar issues in games using OpenGL on the Switch.</li> </ul>"},{"location":"changelog-old/#107143-2021-12-28","title":"1.0.7143 - 2021-12-28","text":""},{"location":"changelog-old/#fixed_19","title":"Fixed:","text":"<ul> <li>Fix GetHostByNameRequestWithOptions and GetHostByAddrRequestWithOptions.</li> <li>Allows the Twitch app to boot further, but it still doesn't work as it requires unimplemented SSL functions.</li> </ul>"},{"location":"changelog-old/#107142-2021-12-27","title":"1.0.7142 - 2021-12-27","text":""},{"location":"changelog-old/#fixed_20","title":"Fixed:","text":"<ul> <li>Use minimum stream sample count on SDL2 audio backend.</li> <li>Fixes \"New audio stream setup with a sample count of ...\" log spam followed by massive slowdown in some games, such as Final Fantasy VII, when using the SDL2 audio backend. </li> </ul>"},{"location":"changelog-old/#107141-2021-12-27","title":"1.0.7141 - 2021-12-27","text":""},{"location":"changelog-old/#fixed_21","title":"Fixed:","text":"<ul> <li>Fix wrong title language.</li> <li>Fixes a regression introduced in 1.0.7131 that caused game titles to display in the wrong language (for example, Korean being displayed when British English was selected).</li> </ul>"},{"location":"changelog-old/#107140-2021-12-26","title":"1.0.7140 - 2021-12-26","text":""},{"location":"changelog-old/#fixed_22","title":"Fixed:","text":"<ul> <li>Fix DMA copy fast path line size when xCount &lt; stride.</li> <li>Fixes some random crashes in the Youtube app.</li> <li>Possibly fixes some other games that do DMA copy with linear source textures. </li> </ul>"},{"location":"changelog-old/#107139-2021-12-26","title":"1.0.7139 - 2021-12-26","text":""},{"location":"changelog-old/#fixed_23","title":"Fixed:","text":"<ul> <li>Fix missing default value of audio volume.</li> <li>Volume level default is now set to 100% instead of 0.</li> </ul>"},{"location":"changelog-old/#107138-2021-12-26","title":"1.0.7138 - 2021-12-26","text":""},{"location":"changelog-old/#fixed_24","title":"Fixed:","text":"<ul> <li>Fix I2M texture copies when line length is not a multiple of 4.</li> <li>Fixes some texture corruption on games using OpenGL on the Switch, such as subtitle text in Cat Girl Without Salad. </li> <li>Fixes a similar issue in the YouTube app.</li> </ul>"},{"location":"changelog-old/#107137-2021-12-26","title":"1.0.7137 - 2021-12-26","text":""},{"location":"changelog-old/#fixed_25","title":"Fixed:","text":"<ul> <li>Fix GetAddrInfoWithOptions and some sockets issues.</li> <li>A new \"Enable guest Internet access\" option has been added. When enabled, applications might try to access their servers. (This does NOT include Nintendo Switch Online servers.)</li> <li>Allows the YouTube app to run. Requires \"Enable guest Internet access\".</li> <li>Might improve games with network related issues.</li> </ul>"},{"location":"changelog-old/#107136-2021-12-26","title":"1.0.7136 - 2021-12-26","text":""},{"location":"changelog-old/#fixed_26","title":"Fixed:","text":"<ul> <li>Fix bug causing an audio buffer to be enqueued more than once.</li> <li>Fixes audio in the YouTube app. Potentially fixes games with broken audio.</li> </ul>"},{"location":"changelog-old/#107135-2021-12-23","title":"1.0.7135 - 2021-12-23","text":""},{"location":"changelog-old/#changed_9","title":"Changed:","text":"<ul> <li>Revert \"sdl2: Update to Ryujinx.SDL2-CS 2.0.19\" (1.0.7132).</li> <li>Reverted as it was causing crashes on latest Windows 10 build for some people. </li> </ul>"},{"location":"changelog-old/#107134-2021-12-23","title":"1.0.7134 - 2021-12-23","text":""},{"location":"changelog-old/#changed_10","title":"Changed:","text":"<ul> <li>Remove PortRemoteClosed warning.</li> <li>Removes the warning as the result is not really an error, but a normal result that is returned under normal operation, when a service session is closed. </li> </ul>"},{"location":"changelog-old/#107133-2021-12-23","title":"1.0.7133 - 2021-12-23","text":""},{"location":"changelog-old/#changed_11","title":"Changed:","text":"<ul> <li>misc: Update SPB to 0.0.4-build17.</li> <li>Update to a new SPB version targeting .NET 6.</li> </ul>"},{"location":"changelog-old/#107132-2021-12-23","title":"1.0.7132 - 2021-12-23","text":""},{"location":"changelog-old/#fixed_27","title":"Fixed:","text":"<ul> <li>sdl2: Update to Ryujinx.SDL2-CS 2.0.19.</li> <li>Fixes G-Shark gamepad.</li> <li>Fixes broken motion controls on Linux.</li> </ul>"},{"location":"changelog-old/#107131-2021-12-23","title":"1.0.7131 - 2021-12-23","text":""},{"location":"changelog-old/#fixed_28","title":"Fixed:","text":"<ul> <li>Update to LibHac v0.14.3.</li> <li>Support reading NCAs with sparse partitions. Fixes NSPs with FS entry offsets outside of the total NCA length being unable to boot.</li> <li>Allow deleting read-only files and directories in LocalFileSystem. Fixes Ryujinx saves getting corrupted if backed up using Google Drive.</li> <li>Disable AesXtsFileSystem. Fixes LibHac failing to decrypt some games on launch with AES-XTS keys error, such as Alien: Isolation or Pokk\u00e9n Tournament DX Demo.</li> <li>The IFileSystem interface has been updated for system version 12.0.0. Now it uses the Fs.Path type for paths instead of a Span. <li>LibHac now uses SharedRef and UniqueRef types which are similar to the std::shared_ptr and std::unique_ptr types used in Horizon. These help ensure resources are properly closed. FS IPC interfaces were updated to use these types. <li>Fix loading NCAs that don't have a data partition.</li> <li>Ruined King: A League of Legends Story now goes in game.</li> <li>Hextech Mayhem: A League of Legends Story now goes in game.</li> <li>Fire Emblem: Shadow Dragon and the Blade of Light now goes in game</li> <li>Lost in Random now goes in game.</li> <li>Last Stop now goes in game.</li>"},{"location":"changelog-old/#107130-2021-12-23","title":"1.0.7130 - 2021-12-23","text":""},{"location":"changelog-old/#added_10","title":"Added:","text":"<ul> <li>Add Volume Controls + Mute Toggle (F2).</li> <li>Adds volume controls to the Settings &gt; System page, as well as a volume indicator in the bottom bar.</li> <li>Clicking the volume indicator in the bottom bar or pressing F2 toggles mute. </li> </ul>"},{"location":"changelog-old/#107129-2021-12-19","title":"1.0.7129 - 2021-12-19","text":""},{"location":"changelog-old/#fixed_29","title":"Fixed:","text":"<ul> <li>Fix for texture pool not being updated when it should + buffer texture fixes.</li> <li>Fixes black vertex explosions on Dragon Quest XI S and possibly other UE4 games.</li> <li>Fixes vertex explosions in Minecraft: Bedrock Edition.</li> <li>Fixes black/flickering textures in SnowRunner, Balan Wonderworld Demo, SpongeBob SquarePants: Battle for Bikini Bottom, Ender Lilies and Yoshi's Crafted World (costume menu).</li> <li>Improves rendering slightly in GTA San Andreas (Trilogy).</li> </ul>"},{"location":"changelog-old/#107128-2021-12-19","title":"1.0.7128 - 2021-12-19","text":""},{"location":"changelog-old/#fixed_30","title":"Fixed:","text":"<ul> <li>Add support for releasing a semaphore to DmaClass.</li> <li>Fixes freezes in games that use OpenGL on the Switch (primarily GameMaker ones), such as Undertale, Idol Days, Yokai Watch 1, and Record of Lodoss War: Deedlit in Wonder Labyrinth.</li> </ul>"},{"location":"changelog-old/#107127-2021-12-19","title":"1.0.7127 - 2021-12-19","text":""},{"location":"changelog-old/#added_11","title":"Added:","text":"<ul> <li>Implement CSDB instruction.</li> <li>Allows Monster Rancher 1 &amp; 2 DX to go in-game.</li> </ul>"},{"location":"changelog-old/#107126-2021-12-19","title":"1.0.7126 - 2021-12-19","text":""},{"location":"changelog-old/#changed_12","title":"Changed:","text":"<ul> <li>Use more intense lossless compression.</li> <li>Compresses project images as much as possible while retaining the original quality.</li> </ul>"},{"location":"changelog-old/#107125-2021-12-15","title":"1.0.7125 - 2021-12-15","text":""},{"location":"changelog-old/#changed_13","title":"Changed:","text":"<ul> <li>Remove debug configuration and schema.</li> </ul>"},{"location":"changelog-old/#107124-2021-12-14","title":"1.0.7124 - 2021-12-14","text":""},{"location":"changelog-old/#changed_14","title":"Changed:","text":"<ul> <li>Remove unused empty Ryujinx.Audio.Backends project.</li> </ul>"},{"location":"changelog-old/#107123-2021-12-12","title":"1.0.7123 - 2021-12-12","text":""},{"location":"changelog-old/#changed_15","title":"Changed:","text":"<ul> <li>misc: Sync Config.json default debug config.</li> </ul>"},{"location":"changelog-old/#107122-2021-12-08","title":"1.0.7122 - 2021-12-08","text":""},{"location":"changelog-old/#fixed_31","title":"Fixed:","text":"<ul> <li>Fix SUATOM and other texture shader instructions with RZ dest.</li> <li>No known changes in games.</li> </ul>"},{"location":"changelog-old/#107121-2021-12-08","title":"1.0.7121 - 2021-12-08","text":""},{"location":"changelog-old/#changed_16","title":"Changed:","text":"<ul> <li>Remove usage of Mono.Posix.NETStandard accross all projects.</li> <li>Saves ~1.5MB on releases and removes an external C library.</li> </ul>"},{"location":"changelog-old/#107120-2021-12-08","title":"1.0.7120 - 2021-12-08","text":""},{"location":"changelog-old/#fixed_32","title":"Fixed:","text":"<ul> <li>Move texture anisotropy check to SetInfo.</li> <li>Improves performance in certain games (mainly UE4) when anisotropic filtering is not set to Auto, such as Shin Megami Tensei V.</li> </ul>"},{"location":"changelog-old/#107119-2021-12-08","title":"1.0.7119 - 2021-12-08","text":""},{"location":"changelog-old/#added_12","title":"Added:","text":"<ul> <li>Implement remaining shader double-precision instructions.</li> <li>Implements remaining double instructions: DMNMX, DSET and DSETP.</li> <li>Implements remaining double-precision operations on MUFU instruction: RCP64H and RSQ64H.</li> <li>Fix immediate operands on all double-precision instruction.</li> <li>World War Z uses the DSET/DSETP instruction, however it still crashes upon entering gameplay. No other known changes in games.</li> </ul>"},{"location":"changelog-old/#107118-2021-12-08","title":"1.0.7118 - 2021-12-08","text":""},{"location":"changelog-old/#fixed_33","title":"Fixed:","text":"<ul> <li>misc: Fix alsoft.ini being present on Linux releases.</li> <li>Removes alsoft.ini from future Linux releases, as it's only required in Windows (see changelog for 1.0.6783).</li> </ul>"},{"location":"changelog-old/#107117-2021-12-08","title":"1.0.7117 - 2021-12-08","text":""},{"location":"changelog-old/#added_13","title":"Added:","text":"<ul> <li>Implement UHADD8 instruction.</li> <li>Allows No More Heroes and No More Heroes 2: Desperate Struggle to boot.</li> </ul>"},{"location":"changelog-old/#107116-2021-12-05","title":"1.0.7116 - 2021-12-05","text":""},{"location":"changelog-old/#fixed_34","title":"Fixed:","text":"<ul> <li>Fix FLO.SH shader instruction with a input of 0.</li> <li>No known changes in games.</li> </ul>"},{"location":"changelog-old/#107115-2021-12-04","title":"1.0.7115 - 2021-12-04","text":""},{"location":"changelog-old/#fixed_35","title":"Fixed:","text":"<ul> <li>kernel: Improve GetInfo readability and update to 13.0.0.</li> </ul>"},{"location":"changelog-old/#107114-2021-12-04","title":"1.0.7114 - 2021-12-04","text":""},{"location":"changelog-old/#changed_17","title":"Changed:","text":"<ul> <li>misc: Migrate usage of RuntimeInformation to OperatingSystem.</li> </ul>"},{"location":"changelog-old/#107113-2021-11-30","title":"1.0.7113 - 2021-11-30","text":""},{"location":"changelog-old/#fixed_36","title":"Fixed:","text":"<ul> <li>Fix Amiibo hanging since .NET 6 changes.</li> <li>Fixes a regression introduced in 1.0.7111 where scanning an Amiibo would cause the emulator to lock up.</li> </ul>"},{"location":"changelog-old/#107112-2021-11-29","title":"1.0.7112 - 2021-11-29","text":""},{"location":"changelog-old/#fixed_37","title":"Fixed:","text":"<ul> <li>Don't blow up everything if a DLC file is moved or renamed.</li> <li>Fixes DLC manager crashing the emulator when DLC files have been moved or renamed, removing the need to delete a DLC.json file when this happens.</li> </ul>"},{"location":"changelog-old/#107111-2021-11-28","title":"1.0.7111 - 2021-11-28","text":""},{"location":"changelog-old/#added_14","title":"Added:","text":"<ul> <li>infra: Migrate to .NET 6.</li> <li>Migrates projects and CI to .NET 6.</li> <li>May slightly improve performance in some games.</li> </ul>"},{"location":"changelog-old/#107110-2021-11-28","title":"1.0.7110 - 2021-11-28","text":""},{"location":"changelog-old/#fixed_38","title":"Fixed:","text":"<ul> <li>kernel: Fix sleep timing accuracy.</li> <li>Fixes softlocks and slow timer in Hyrule Warriors: Definitive Edition.</li> <li>Greatly improves loading in Breath of the Wild 1.0.0.</li> <li>Slightly improves performance in some games.</li> </ul>"},{"location":"changelog-old/#107109-2021-11-28","title":"1.0.7109 - 2021-11-28","text":""},{"location":"changelog-old/#added_15","title":"Added:","text":"<ul> <li>kernel: Add support for CFI.</li> <li>No known changes in games.</li> </ul>"},{"location":"changelog-old/#107108-2021-11-24","title":"1.0.7108 - 2021-11-24","text":""},{"location":"changelog-old/#added_16","title":"Added:","text":"<ul> <li>account/ns: Implement 13.0.0+ service calls.</li> <li>Animal Crossing: New Horizons 2.0.0 (and newer) no longer crashes on boot.</li> <li>Dying Light no longer crashes on boot.</li> </ul>"},{"location":"changelog-old/#107107-2021-11-21","title":"1.0.7107 - 2021-11-21","text":""},{"location":"changelog-old/#fixed_39","title":"Fixed:","text":"<ul> <li>Better depth range detection.</li> <li>Improves rendering in Bastion.</li> </ul>"},{"location":"changelog-old/#107106-2021-11-15","title":"1.0.7106 - 2021-11-15","text":""},{"location":"changelog-old/#fixed_40","title":"Fixed:","text":"<ul> <li>Nickname! - Init Amiibos with Profile's name!</li> <li>Amiibo now use the name of the current user profile when the name of the owner is requested, instead of \"No Name\".</li> </ul>"},{"location":"changelog-old/#107105-2021-11-14","title":"1.0.7105 - 2021-11-14","text":""},{"location":"changelog-old/#fixed_41","title":"Fixed:","text":"<ul> <li>Fix shader integer from/to double conversion. </li> <li>Fixes the Invalid reinterpret cast from \"F32\" to \"F64\" exception that would happen on any shader using I2F or F2I instructions to convert between double and integer types.</li> <li>Allows World War Z to boot into menus (the game is still not playable).</li> </ul>"},{"location":"changelog-old/#107104-2021-11-13","title":"1.0.7104 - 2021-11-13","text":""},{"location":"changelog-old/#fixed_42","title":"Fixed:","text":"<ul> <li>Limit Custom Anisotropic Filtering to only fully mipmapped textures.</li> <li>Fixes graphical bugs caused by non-Auto Anisotropic Filtering, affecting games such as Astral Chain or Shin Megami Tensei V.</li> <li>Allows changing Anisotropic Filtering while a game is running.</li> </ul>"},{"location":"changelog-old/#107103-2021-11-10","title":"1.0.7103 - 2021-11-10","text":""},{"location":"changelog-old/#added_17","title":"Added:","text":"<ul> <li>Implement DrawTexture functionality.</li> <li>Steel Assault now renders.</li> <li>Final Fantasy VII now goes in-game.</li> <li>Charge Kid rendering improved slightly.</li> </ul>"},{"location":"changelog-old/#107102-2021-11-10","title":"1.0.7102 - 2021-11-10","text":""},{"location":"changelog-old/#fixed_43","title":"Fixed:","text":"<ul> <li>Fix direct mouse access checkbox label.</li> <li>Corrects the tooltip for direct mouse access.</li> </ul>"},{"location":"changelog-old/#107101-2021-11-08","title":"1.0.7101 - 2021-11-08","text":""},{"location":"changelog-old/#added_18","title":"Added:","text":"<ul> <li>Support shader gl_Color, gl_SecondaryColor and gl_TexCoord built-ins.</li> <li>Fixes black screens on games using OpenGL on the Switch, such as rRootage Reloaded and Dragon Quest III.</li> </ul>"},{"location":"changelog-old/#107100-2021-11-08","title":"1.0.7100 - 2021-11-08","text":""},{"location":"changelog-old/#fixed_44","title":"Fixed:","text":"<ul> <li>Fix bindless/global memory elimination with inverted predicates.</li> <li>Fixes lighting issues on Disaster Report 4, and possibly other games.</li> </ul>"},{"location":"changelog-old/#107099-2021-11-08","title":"1.0.7099 - 2021-11-08","text":""},{"location":"changelog-old/#fixed_45","title":"Fixed:","text":"<ul> <li>Fix InvocationInfo on geometry shader and bindless default integer const.</li> <li>Fixes a regression introduced in 1.0.7078. Worm Jazz is no longer missing graphics.</li> <li>Fixes some shader compilation errors.</li> <li>On AMD and Intel GPUs, fixes some UE4 games that showed a black screen due to a regression that broke geometry shaders.</li> </ul>"},{"location":"changelog-old/#107098-2021-11-04","title":"1.0.7098 - 2021-11-04","text":""},{"location":"changelog-old/#fixed_46","title":"Fixed:","text":"<ul> <li>Ensure syncpoints are released and event handles closed on channel close.</li> <li>Fixes \"Cannot allocate a new syncpoint!\" error.</li> <li>Fixes games that crashed with an \"Out of handles!\" exception, such as Legend of Mana.</li> </ul>"},{"location":"changelog-old/#107097-2021-11-03","title":"1.0.7097 - 2021-11-03","text":""},{"location":"changelog-old/#fixed_47","title":"Fixed:","text":"<ul> <li>Clamp number of mipmap levels to avoid API errors due to invalid textures.</li> <li>Fixes character mods rendering black textures (such as the one for Mario Party Superstars). No known changes on commercial games.</li> </ul>"},{"location":"changelog-old/#107096-2021-11-01","title":"1.0.7096 - 2021-11-01","text":""},{"location":"changelog-old/#fixed_48","title":"Fixed:","text":"<ul> <li>hle: Make Ryujinx.HLE project entirely safe.</li> <li>Followup of the changes in 1.0.7089.</li> </ul>"},{"location":"changelog-old/#107095-2021-11-01","title":"1.0.7095 - 2021-11-01","text":""},{"location":"changelog-old/#fixed_49","title":"Fixed:","text":"<ul> <li>When waiting on CPU, do not return a time out error from EventWait.</li> <li>Fixes timeouts introduced in 1.0.7082.</li> <li>Fixes crashes on Tokyo Mirage Sessions #FE Encore.</li> </ul>"},{"location":"changelog-old/#107094-2021-10-29","title":"1.0.7094 - 2021-10-29","text":""},{"location":"changelog-old/#changed_18","title":"Changed:","text":"<ul> <li>ci: Disable macOS x64 build on Appveyor.</li> <li>Reduces Appveyor build time significantly.</li> <li>The platform will still be built on Github Actions.</li> </ul>"},{"location":"changelog-old/#107093-2021-10-28","title":"1.0.7093 - 2021-10-28","text":""},{"location":"changelog-old/#added_19","title":"Added:","text":"<ul> <li>Add support for fragment shader interlock.</li> <li>Fixes flickering lights in Super Mario Party and Mario Party Superstars.</li> </ul>"},{"location":"changelog-old/#107092-2021-10-28","title":"1.0.7092 - 2021-10-28","text":""},{"location":"changelog-old/#added_20","title":"Added:","text":"<ul> <li>Add support for the brazilian portuguese language code. </li> <li>Brazilian Portuguese can now be selected in the \"System Language\" dropdown.</li> </ul>"},{"location":"changelog-old/#107091-2021-10-24","title":"1.0.7091 - 2021-10-24","text":""},{"location":"changelog-old/#fixed_50","title":"Fixed:","text":"<ul> <li>Kernel: Fix inverted condition on permission check of SetMemoryPermission syscall.</li> </ul>"},{"location":"changelog-old/#107090-2021-10-24","title":"1.0.7090 - 2021-10-24","text":""},{"location":"changelog-old/#fixed_51","title":"Fixed:","text":"<ul> <li>Preserve image types for shader bindless surface instructions (.D variants).</li> <li>Make format unknown for surface atomic if bindless and not sized.</li> </ul>"},{"location":"changelog-old/#107089-2021-10-24","title":"1.0.7089 - 2021-10-24","text":""},{"location":"changelog-old/#fixed_52","title":"Fixed:","text":"<ul> <li>HLE: Improve safety. </li> <li>Makes timezone implementation safe. Improves various parts of the code that were previously unsafe.</li> <li>Add an util function that handles reading an ASCII string in a safe way.</li> </ul>"},{"location":"changelog-old/#107088-2021-10-24","title":"1.0.7088 - 2021-10-24","text":""},{"location":"changelog-old/#fixed_53","title":"Fixed:","text":"<ul> <li>Kernel: Clear pages allocated with SetHeapSize. Previously, all new pages allocated by SetHeapSize were not cleared by the kernel, which could cause weird memory corruption.</li> <li>Add support for custom fill heap and ipc value.</li> </ul>"},{"location":"changelog-old/#107087-2021-10-24","title":"1.0.7087 - 2021-10-24","text":""},{"location":"changelog-old/#fixed_54","title":"Fixed:","text":"<ul> <li>Fixup channel submit IOCTL syncpoint parameters.</li> <li>Fixes the parameters that are passed to the \"submit\" function.</li> <li>No changes expected on games.</li> </ul>"},{"location":"changelog-old/#107086-2021-10-24","title":"1.0.7086 - 2021-10-24","text":""},{"location":"changelog-old/#fixed_55","title":"Fixed:","text":"<ul> <li>misc: Fix IVirtualMemoryManager.Fill ignoring value. This is required for future kernel fixes.</li> <li>No changes to emulator functionality.</li> </ul>"},{"location":"changelog-old/#107085-2021-10-23","title":"1.0.7085 - 2021-10-23","text":""},{"location":"changelog-old/#added_21","title":"Added:","text":"<ul> <li>Kernel: Add resource limit related syscalls.</li> <li>Fix register mapping being wrong for SetResourceLimitLimitValue.</li> <li>Used only by homebrew and system apps.</li> </ul>"},{"location":"changelog-old/#107084-2021-10-23","title":"1.0.7084 - 2021-10-23","text":""},{"location":"changelog-old/#added_22","title":"Added:","text":"<ul> <li>Kernel: Implement SetMemoryPermission syscall.</li> <li>Fix KMemoryPermission not being an unsigned 32 bits type and add the \"DontCare\" bit (used by shared memory, currently unused in Ryujinx).</li> <li>Used only by homebrew and system apps.</li> </ul>"},{"location":"changelog-old/#107083-2021-10-23","title":"1.0.7083 - 2021-10-23","text":""},{"location":"changelog-old/#added_23","title":"Added:","text":"<ul> <li>Kernel: Add missing address space check in SetMemoryAttribute syscall.</li> </ul>"},{"location":"changelog-old/#107082-2021-10-19","title":"1.0.7082 - 2021-10-19","text":""},{"location":"changelog-old/#fixed_56","title":"Fixed:","text":"<ul> <li>Fix race when EventWait is called and a wait is done on the CPU.</li> <li>Fixes the \"Invalid Event at index X\" error being printed in some games.</li> <li>Fixes a crash in Marvel Ultimate Alliance 3, New Pok\u00e9mon Snap (on boot), Persona 5 Scramble when loading the first level, and some games that crashed while playing videos.</li> </ul>"},{"location":"changelog-old/#107081-2021-10-18","title":"1.0.7081 - 2021-10-18","text":""},{"location":"changelog-old/#fixed_57","title":"Fixed:","text":"<ul> <li>Fix shader 8-bit and 16-bit STS/STG.</li> <li>Fixes broken interior lighting in The Witcher 3.</li> </ul>"},{"location":"changelog-old/#107080-2021-10-18","title":"1.0.7080 - 2021-10-18","text":""},{"location":"changelog-old/#added_24","title":"Added:","text":"<ul> <li>Add workaround for Nvidia driver 496.13 shader bug.</li> <li>Fixes flipped upside-down games and a large variety of rendering errors caused by the new drivers.</li> </ul>"},{"location":"changelog-old/#107079-2021-10-18","title":"1.0.7079 - 2021-10-18","text":""},{"location":"changelog-old/#added_25","title":"Added:","text":"<ul> <li>Add an early 'TailMerge' pass.</li> <li>No changes expected on games.</li> </ul>"},{"location":"changelog-old/#107078-2021-10-18","title":"1.0.7078 - 2021-10-18","text":""},{"location":"changelog-old/#fixed_58","title":"Fixed:","text":"<ul> <li>Add initial tessellation shader support.</li> <li>Fixes sand not rendering in Luigi's Mansion 3.</li> </ul>"},{"location":"changelog-old/#107077-2021-10-17","title":"1.0.7077 - 2021-10-17","text":""},{"location":"changelog-old/#fixed_59","title":"Fixed:","text":"<ul> <li>Add missing U8/S8 types from shader I2I instruction.</li> <li>Fixes a regression introduced in 1.0.7069 where in some cases an exception would be thrown when emitting code for a shader.</li> </ul>"},{"location":"changelog-old/#107076-2021-10-17","title":"1.0.7076 - 2021-10-17","text":""},{"location":"changelog-old/#fixed_60","title":"Fixed:","text":"<ul> <li>Extend bindless elimination to work with masked and shifted handles.</li> <li>Combined with the change in 1.0.7073, makes Hades render almost correctly.</li> <li>Improves rendering in The Witcher 3.</li> </ul>"},{"location":"changelog-old/#107075-2021-10-17","title":"1.0.7075 - 2021-10-17","text":""},{"location":"changelog-old/#added_26","title":"Added:","text":"<ul> <li>Implement SHF (funnel shift) shader instruction.</li> <li>Improves rendering on Cotton/Guardian Saturn Tribute games, and potentially other games.</li> </ul>"},{"location":"changelog-old/#107074-2021-10-13","title":"1.0.7074 - 2021-10-13","text":""},{"location":"changelog-old/#fixed_61","title":"Fixed:","text":"<ul> <li>Fixes a regression introduced on version 1.0.7067 that caused some games using the foreground software keyboard applet and the Mii editor to crash.</li> </ul>"},{"location":"changelog-old/#107073-2021-10-12","title":"1.0.7073 - 2021-10-12","text":""},{"location":"changelog-old/#fixed_62","title":"Fixed:","text":"<ul> <li>Fixes an issue of Vulkan (from the guest) draw methods by forcing the state to be dirty when the indexed draw registers are written to.</li> <li>Only affects games using the Vulkan API as other APIs do not use those registers.</li> </ul>"},{"location":"changelog-old/#107072-2021-10-12","title":"1.0.7072 - 2021-10-12","text":""},{"location":"changelog-old/#fixed_63","title":"Fixed:","text":"<ul> <li>Enqueue frame before signalling the frame is ready.</li> <li>Fixes performance lowering after some loading transitions in Link's Awakening and Xenoblade DE.</li> </ul>"},{"location":"changelog-old/#107071-2021-10-12","title":"1.0.7071 - 2021-10-12","text":""},{"location":"changelog-old/#changed_19","title":"Changed:","text":"<ul> <li>Don't force scaling on 2D copy sources since it only needs to scale if the texture already exists and was scaled by rendering or something else. </li> <li>This will also avoid the destination being scaled if the source wasn't. The copy can handle mismatching scales just fine.</li> <li>This prevents scaling artifacts in GMS games, and maybe others (not Super Mario Maker 2, that has another issue).</li> </ul>"},{"location":"changelog-old/#107070-2021-10-12","title":"1.0.7070 - 2021-10-12","text":""},{"location":"changelog-old/#added_27","title":"Added:","text":"<ul> <li>Added Vp8 codec support.</li> <li>Fixes videos in Diablo II, TY The Tasmanian Tiger and probably more games.</li> </ul>"},{"location":"changelog-old/#107069-2021-10-12","title":"1.0.7069 - 2021-10-12","text":""},{"location":"changelog-old/#changed_20","title":"Changed:","text":"<ul> <li>Rewrite shader decoding stage.</li> <li>Changes the way how shader instructions are decoded by using a separate struct per instruction variant. This may be a bit wasteful, but we beleive it's the best way to avoid some errors, and also to avoid special handling on the instruction implementation.</li> <li>Now all the shader instructions are on the table (not all of them are actually implemented, of course), this should facilitate future work when we need to actually implement those instructions.</li> <li>Fixes inexistent fields in one of the double instructions.</li> <li>Fixes SAT using the FTZ bit in one of the half instruction.</li> <li>Fixes wrong bit in TLD.B AOFFI.<ul> <li>Fixes some rendering in Jump Force and probably other games.</li> </ul> </li> </ul>"},{"location":"changelog-old/#107068-2021-10-12","title":"1.0.7068 - 2021-10-12","text":""},{"location":"changelog-old/#added_28","title":"Added:","text":"<ul> <li>Implemented GetConfig of spl service.</li> <li>Fixes startup crash in some homebrews.</li> </ul>"},{"location":"changelog-old/#107067-2021-10-12","title":"1.0.7067 - 2021-10-12","text":""},{"location":"changelog-old/#changed_21","title":"Changed:","text":"<ul> <li>Implemented the inline software keyboard without input pop up dialog in the GUI since a way to display the text is already provided by the games.</li> <li>Supports non-ASCII text, selection, copy and paste, overwrite mode, toggling input (on and off so keyboard players can input text correctly),  the new Calc format used by newer games.</li> <li>Fixes some software keyboard issues in Monster Hunter games and more.</li> </ul>"},{"location":"changelog-old/#107066-2021-10-08","title":"1.0.7066 - 2021-10-08","text":""},{"location":"changelog-old/#changed_22","title":"Changed:","text":"<ul> <li>Optimize the JIT linear scan register allocator.</li> <li>The speed of PPTC compilation is greatly improved, in some cases taking half of the time compared to the previous version.</li> <li>First run or runs with PPTC disabled have also been improved, now taking less time to reach the peak performance.</li> </ul>"},{"location":"changelog-old/#107065-2021-10-07","title":"1.0.7065 - 2021-10-07","text":""},{"location":"changelog-old/#fixed_64","title":"Fixed:","text":"<ul> <li>Implement the VIC X8B8G8R8 output pixel format.</li> <li>Fixes missing videos (black screen) on Metroid Dread title screen, menus, new ability guides, area change loading screens and more.</li> </ul>"},{"location":"changelog-old/#107064-2021-10-07","title":"1.0.7064 - 2021-10-07","text":""},{"location":"changelog-old/#fixed_65","title":"Fixed:","text":"<ul> <li>Reregister flush actions when taking a buffer's modified range list.</li> <li>Fixes a regression introduced in 1.0.7061, where buffer flush would not happen for data written before buffers were joined.</li> </ul>"},{"location":"changelog-old/#107063-2021-10-05","title":"1.0.7063 - 2021-10-05","text":""},{"location":"changelog-old/#changed_23","title":"Changed:","text":"<ul> <li>Enable branch tightening when PPTC is enabled.</li> <li>Slightly better JIT code generation with PPTC enabled.</li> <li>PPTC cache size was reduced by a few KB as a result.</li> </ul>"},{"location":"changelog-old/#107062-2021-10-05","title":"1.0.7062 - 2021-10-05","text":""},{"location":"changelog-old/#fixed_66","title":"Fixed:","text":"<ul> <li>Fixes wrong name size on DisplayInfo structure.</li> <li>Fixes a regression introduced on version 1.0.7041 that caused Dragon Ball Xenoverse 2, and maybe other games to crash on boot.</li> </ul>"},{"location":"changelog-old/#107061-2021-10-04","title":"1.0.7061 - 2021-10-04","text":""},{"location":"changelog-old/#changed_24","title":"Changed:","text":"<ul> <li>Reduces cost for range list creation and inheritance.</li> <li>Fixes potential performance regression introduced on version 1.0.7044.</li> </ul>"},{"location":"changelog-old/#107060-2021-10-04","title":"1.0.7060 - 2021-10-04","text":""},{"location":"changelog-old/#fixed_67","title":"Fixed:","text":"<ul> <li>Allow textures to be used without having a sampler pool set.</li> <li>Improves rendering on Cotton Guardian Force Saturn Tribute.</li> </ul>"},{"location":"changelog-old/#107059-2021-10-04","title":"1.0.7059 - 2021-10-04","text":""},{"location":"changelog-old/#fixed_68","title":"Fixed:","text":"<ul> <li>Fixes a bug introduced on version 1.0.7052 that could cause a memory leak and eventually a crash playing H264 videos.</li> </ul>"},{"location":"changelog-old/#107058-2021-09-28","title":"1.0.7058 - 2021-09-28","text":""},{"location":"changelog-old/#added_29","title":"Added:","text":"<ul> <li>Added the ability to signal a write as \"precise\" on the tracking, which signals a special handler (if present) which can be used to avoid unnecessary flush actions, or maybe even more. For buffers, precise writes specifically do not flush, and instead punch a hole in the modified range list to indicate that the data on GPU has been replaced.</li> <li>Fixed regressions from a previous change (in Mario + Rabbids Kingdom Battle, Rune Factory 4 and more).</li> </ul>"},{"location":"changelog-old/#107057-2021-09-28","title":"1.0.7057 - 2021-09-28","text":""},{"location":"changelog-old/#fixed_69","title":"Fixed:","text":"<ul> <li>Force copy when auto-deleting a texture with dependencies.</li> <li>Fixes broken lighting caused by pausing in SMO's Metro Kingdom. May fix some other infrequent issues.</li> </ul>"},{"location":"changelog-old/#107056-2021-09-28","title":"1.0.7056 - 2021-09-28","text":""},{"location":"changelog-old/#fixed_70","title":"Fixed:","text":"<ul> <li>Only make render target 2D textures layered if needed.</li> <li>Fixed The Legend of Heroes: Zero no Kiseki which is now playable.</li> </ul>"},{"location":"changelog-old/#107055-2021-09-28","title":"1.0.7055 - 2021-09-28","text":""},{"location":"changelog-old/#added_30","title":"Added:","text":"<ul> <li>Added a set of optimizations to the HybridAllocator which increases the throughput of LCQ and usually shaves a couple of seconds from boot time.</li> </ul>"},{"location":"changelog-old/#107054-2021-09-28","title":"1.0.7054 - 2021-09-28","text":""},{"location":"changelog-old/#fixed_71","title":"Fixed:","text":"<ul> <li>Use normal memory store path for DC ZVA as an optimized way to clear memory in homebrew applications.</li> </ul>"},{"location":"changelog-old/#107053-2021-09-28","title":"1.0.7053 - 2021-09-28","text":""},{"location":"changelog-old/#added_31","title":"Added:","text":"<ul> <li>Implemented/Stubbed some clkrst service calls which are needed by some homebrew.</li> </ul>"},{"location":"changelog-old/#107052-2021-09-28","title":"1.0.7052 - 2021-09-28","text":""},{"location":"changelog-old/#fixed_72","title":"Fixed:","text":"<ul> <li>Use separate contexts per channel and decode frames in DTS order.</li> <li>Decoding multiple videos at once no longer causes image corruption.</li> <li>As a result of the hack removal, H264 video playback should be smoother now, without duplicate frames (please note that the game may still decide to duplicate frames or not present anything if the decoding is too slow, YMMV).</li> <li>Some minor issues like a few games flashing a green frame when the video starts have also been fixed.</li> <li>Add missing field_pic_order_in_frame_present_flag flag to the stream PPS. Fixes decoding errors on Layton's Mystery Journey, but the video is still not rendered properly due to VIC Issues.</li> <li>Add new Trim method on NVDEC's SurfaceCache to allow cached frames to be freed. It is called every time a context is destroyed. Cache access now uses a lock to make it thread safe, as Trim may be called from outside the NVDEC thread.<ul> <li>Fixed some videos in Hatsune Miku: Project DIVA Mega Mix and No More Heroes 3.</li> </ul> </li> </ul>"},{"location":"changelog-old/#107051-2021-09-28","title":"1.0.7051 - 2021-09-28","text":""},{"location":"changelog-old/#fixed_73","title":"Fixed:","text":"<ul> <li>Fixed PTC count table relocation patching introduced in a previous change where by 2 different count table entry addresses were used for LCQ functions.</li> </ul>"},{"location":"changelog-old/#107050-2021-09-28","title":"1.0.7050 - 2021-09-28","text":""},{"location":"changelog-old/#added_32","title":"Added:","text":"<ul> <li>Stubbed some irs service calls which are needed to get some games playable or bootable.</li> <li>Night Vision and Spy Alarm are now bootable (but still unplayable due to the lack of the IR data).</li> </ul>"},{"location":"changelog-old/#107049-2021-09-28","title":"1.0.7049 - 2021-09-28","text":""},{"location":"changelog-old/#fixed_74","title":"Fixed:","text":"<ul> <li>Fixed an issue where scales might not be properly updated on games that uses compute.</li> <li>Fixed resolution scale issues on Ni no Kuni 2.</li> </ul>"},{"location":"changelog-old/#107048-2021-09-28","title":"1.0.7048 - 2021-09-28","text":""},{"location":"changelog-old/#fixed_75","title":"Fixed:","text":"<ul> <li>Updated the game compatibility infos in README file.</li> </ul>"},{"location":"changelog-old/#107047-2021-09-19","title":"1.0.7047 - 2021-09-19","text":""},{"location":"changelog-old/#added_33","title":"Added:","text":"<ul> <li>Adds a method to PhysicalMemory that attempts to write all cached resources directly, so that memory tracking can be avoided. The goal of this is both to avoid flushing buffer data, and to avoid raising the sequence number when data is written, which causes buffer and texture handles to be re-checked.</li> <li>Improves performance on Xenoblade 2 and DE, which were flushing buffer data on the GPU thread when trying to write compute data.</li> <li>May improve performance in other games that write SSBOs from compute, and update data in the same/nearby pages often.</li> </ul>"},{"location":"changelog-old/#107046-2021-09-19","title":"1.0.7046 - 2021-09-19","text":""},{"location":"changelog-old/#added_34","title":"Added:","text":"<ul> <li>Implements an augmented interval tree based off of the existing TreeDictionary and uses it for the MultiRangeList. This greatly speeds up texture overlap checks, as they can't use the non-overlapping fast path that buffers and tracking handles can use. Like the tree dictionary, it is based on a red-black tree and is self balancing.</li> <li>Speed up texture/view creation and notifying textures that they have been unmapped, which might reduce stuttering in unreal engine games.</li> </ul>"},{"location":"changelog-old/#107045-2021-09-19","title":"1.0.7045 - 2021-09-19","text":""},{"location":"changelog-old/#added_35","title":"Added:","text":"<ul> <li>Uses new subgroup extension (that AFAIK were introduced for SPIR-V) if the old ARB_shader_ballot extension is not supported. This is required for Vulkan. Additionally, this benefits Intel on OpenGL as they don't support the ARB_shader_ballot extension on the proprietary driver for some reason, but does support the new extensions.</li> <li>Astral Chain and probably some other games works on Intel OpenGL now.</li> </ul>"},{"location":"changelog-old/#107044-2021-09-19","title":"1.0.7044 - 2021-09-19","text":""},{"location":"changelog-old/#added_36","title":"Added:","text":"<ul> <li>Changes the RangeList to cache the Address and EndAddress within the list itself rather than accessing them from the object's properties.</li> <li>Greatly improves performance in Super Mario Odyssey (~1.25x), Xenoblade (required some WIP code for now) and most other GPU limited games.</li> <li>Improvement will generally depend on how many buffers the game binds and how many draws it does.</li> </ul>"},{"location":"changelog-old/#107043-2021-09-19","title":"1.0.7043 - 2021-09-19","text":""},{"location":"changelog-old/#fixed_76","title":"Fixed:","text":"<ul> <li>Set texture/image bindings in place rather than allocating and passing an array.</li> </ul>"},{"location":"changelog-old/#107042-2021-09-19","title":"1.0.7042 - 2021-09-19","text":""},{"location":"changelog-old/#fixed_77","title":"Fixed:","text":"<ul> <li>Amadeus: Fixes regression from 1.7040 on ListAudioDeviceName.</li> </ul>"},{"location":"changelog-old/#107041-2021-09-19","title":"1.0.7041 - 2021-09-19","text":""},{"location":"changelog-old/#fixed_78","title":"Fixed:","text":"<ul> <li>Unified values and accurated implementation of resolutions in vi service.</li> <li>am calls GetDefaultDisplayResolution / GetDefaultDisplayResolutionChangeEvent have more informations on what the service does.</li> <li>vi:u/vi:m/vi:s GetDisplayService are now accurate.<ul> <li>IApplicationDisplay GetRelayService, GetSystemDisplayService, GetManagerDisplayService, GetIndirectDisplayTransactionService, ListDisplays, OpenDisplay, OpenDefaultDisplay, CloseDisplay, GetDisplayResolution are now properly implemented.</li> </ul> </li> <li>Some other calls are cleaned or have extra checks accordingly to RE.</li> <li>Additionnaly, IFriendService have some wrong aligned things, and <code>pm:info</code> service placeholder was missing. </li> </ul>"},{"location":"changelog-old/#107040-2021-09-19","title":"1.0.7040 - 2021-09-19","text":""},{"location":"changelog-old/#added_37","title":"Added:","text":"<ul> <li>Amadeus: Implements all the changes made with REV10 (audio service) on 13.0.0.</li> </ul>"},{"location":"changelog-old/#107039-2021-09-18","title":"1.0.7039 - 2021-09-18","text":""},{"location":"changelog-old/#fixed_79","title":"Fixed:","text":"<ul> <li>Pause/Resume entry in Action menu now is properly disabled after switching to fullscreen mode.</li> <li>An issue with the Pause changes was fixed that caused Ryujinx to not be properly close.</li> </ul>"},{"location":"changelog-old/#107038-2021-09-15","title":"1.0.7038 - 2021-09-15","text":""},{"location":"changelog-old/#fixed_80","title":"Fixed:","text":"<ul> <li>Fixes a regression introduced in 1.0.7034, when you try to extract data from games dump.</li> </ul>"},{"location":"changelog-old/#107037-2021-09-14","title":"1.0.7037 - 2021-09-14","text":""},{"location":"changelog-old/#fixed_81","title":"Fixed:","text":"<ul> <li>FPS monitor now shows instantaneous FPS rather than any form of weighted average.</li> <li>Frametime has been added as a metric with a 2 decimal place precision factor.</li> <li>All performance metrics now update every 750ms rather than 1000ms.</li> </ul>"},{"location":"changelog-old/#107036-2021-09-14","title":"1.0.7036 - 2021-09-14","text":""},{"location":"changelog-old/#fixed_82","title":"Fixed:","text":"<ul> <li>Add Linux Unicorn (for Tests) patch and description.</li> </ul>"},{"location":"changelog-old/#107035-2021-09-14","title":"1.0.7035 - 2021-09-14","text":""},{"location":"changelog-old/#fixed_83","title":"Fixed:","text":"<ul> <li>HOS project cleanup.</li> </ul>"},{"location":"changelog-old/#107034-2021-09-14","title":"1.0.7034 - 2021-09-14","text":""},{"location":"changelog-old/#fixed_84","title":"Fixed:","text":"<ul> <li>Replace FileChooserDialog with FileChooserNative.</li> <li>Fixes a crash when you add a drive as folder.</li> </ul>"},{"location":"changelog-old/#107033-2021-09-13","title":"1.0.7033 - 2021-09-13","text":""},{"location":"changelog-old/#fixed_85","title":"Fixed:","text":"<ul> <li>Refactor PtcInfo.</li> <li>Reduces the coupling of PtcInfo and the backend by moving relocation tracking to the backend. RelocEntrys remains as RelocEntrys through out the pipeline until it actually needs to be written to the PTC streams. Keeping this representation makes inspecting and manipulating relocations after compilations less painful.</li> </ul>"},{"location":"changelog-old/#107032-2021-09-11","title":"1.0.7032 - 2021-09-11","text":""},{"location":"changelog-old/#fixed_86","title":"Fixed:","text":"<ul> <li>Account for negative strides on DMA copy.</li> <li>Math.Abs is used on the stride to calculate the size, to ensure it is positive.</li> <li>If stride is negative, the base offset is adjusted to the real start offset of the copy.</li> <li>Changed the flush call on InlineToMemory to use the GPU memory manager rather than the physical one, to account for non-contiguous memory.</li> <li>Idol Days no longer crashes when trying to open the log or load/save the game, although it does have other issues there that don't seem to be caused by this change.</li> </ul>"},{"location":"changelog-old/#107031-2021-09-11","title":"1.0.7031 - 2021-09-11","text":""},{"location":"changelog-old/#added_38","title":"Added:","text":"<ul> <li>Implements GetVaRegions in nv service.</li> <li>Fixes a crash on Quake which can progress further, now it crashes due to Sockets issues.</li> </ul>"},{"location":"changelog-old/#107030-2021-09-11","title":"1.0.7030 - 2021-09-11","text":""},{"location":"changelog-old/#fixed_87","title":"Fixed:","text":"<ul> <li>Fixes ICommonStateGetter GetDefaultDisplayResolution returned resolution while using Docked Mode.</li> <li>Fixes Tsukihime -A piece of blue glass moon- rendering and probably some other games.</li> </ul>"},{"location":"changelog-old/#107029-2021-09-11","title":"1.0.7029 - 2021-09-11","text":""},{"location":"changelog-old/#added_39","title":"Added:","text":"<ul> <li>Added \"Pause Emulation\" option which could be found at menu \"Actions &gt; Pause Emulation\" or using F5 hotkey.</li> </ul>"},{"location":"changelog-old/#107028-2021-09-11","title":"1.0.7028 - 2021-09-11","text":""},{"location":"changelog-old/#fixed_88","title":"Fixed:","text":"<ul> <li>Lift textures in the AutoDeleteCache for all modifications.</li> <li>Fixes lighting breaking when switching levels in Tony Hawk Pro Skater 1+2 and potentially some more UE4 games.</li> </ul>"},{"location":"changelog-old/#107027-2021-09-11","title":"1.0.7027 - 2021-09-11","text":""},{"location":"changelog-old/#fixed_89","title":"Fixed:","text":"<ul> <li>Fixes single quote key incorrectly mapped in our GTK3 code.</li> </ul>"},{"location":"changelog-old/#107026-2021-09-11","title":"1.0.7026 - 2021-09-11","text":""},{"location":"changelog-old/#fixed_90","title":"Fixed:","text":"<ul> <li>Fixes time played staying at 0 second when \"Stop Emulation\" is pressed.</li> </ul>"},{"location":"changelog-old/#107025-2021-09-11","title":"1.0.7025 - 2021-09-11","text":""},{"location":"changelog-old/#fixed_91","title":"Fixed:","text":"<ul> <li>Remove error dialog when files encountered weren't of a valid type.</li> </ul>"},{"location":"changelog-old/#107024-2021-09-02","title":"1.0.7024 - 2021-09-02","text":""},{"location":"changelog-old/#fixed_92","title":"Fixed:","text":"<ul> <li>Fixes shaders using the TXQ instruction failing to compile if more than 2 dimensions are being read.</li> <li>Fixes some (but not all) lighting issues on Tony Hawk's Pro Skater 1 + 2, and other UE4 games.</li> </ul>"},{"location":"changelog-old/#107023-2021-08-31","title":"1.0.7023 - 2021-08-31","text":""},{"location":"changelog-old/#added_40","title":"Added:","text":"<ul> <li>Implements support for the shader image atomic instructions.</li> <li>Fixes object interaction not animating on Yoshi Crafted World in some levels.</li> <li>Fixes missing lighting on several UE4 games, such as Bravely Default 2, Tony Hawk's Pro Skater 1 + 2, No More Heroes 3, Densha de Go!! and more.</li> <li>Fixes missing facial animations on several UE4 games, such as Bravely Default 2 and Trials of Mana.</li> </ul>"},{"location":"changelog-old/#107022-2021-08-30","title":"1.0.7022 - 2021-08-30","text":""},{"location":"changelog-old/#fixed_93","title":"Fixed:","text":"<ul> <li>Fixes shader shuffle up instruction, when the source thread ID is out of range.</li> <li>Fixes vertex explosions on Marvel Ultimate Alliance 3.</li> </ul>"},{"location":"changelog-old/#107021-2021-08-29","title":"1.0.7021 - 2021-08-29","text":""},{"location":"changelog-old/#fixed_94","title":"Fixed:","text":"<ul> <li>Improves handling of multi-draw with indirect count on HLE macros, for cases where the start draw is non-zero.</li> <li>No visible changes expected, as no game is known to hit this case so far.</li> </ul>"},{"location":"changelog-old/#107020-2021-08-29","title":"1.0.7020 - 2021-08-29","text":""},{"location":"changelog-old/#fixed_95","title":"Fixed:","text":"<ul> <li>Fixes a bug that would cause textures that do not overlap, but is assumed to overlap because gaps on the memory region where the data is located is not taken into account, to be removed from the cache, causing data loss.</li> <li>Fixes \"white screen\" issue on several Unreal Engine 4 games, including Yoshi Crafted World, Disaster Report 4, No More Heroes 3, JUMP FORCE Deluxe Edition and more.</li> <li>Some instances of glowing objects were also fixed.</li> <li>Note that this does not fix all texture issues with those games, but they are greatly improved now.</li> </ul>"},{"location":"changelog-old/#107019-2021-08-29","title":"1.0.7019 - 2021-08-29","text":""},{"location":"changelog-old/#fixed_96","title":"Fixed:","text":"<ul> <li>Fixes a case where threads would not wait until the GPU written data is flushed if more than one thread was trying to access it at the same time.</li> <li>Fixes a regression introduced on version 1.0.7016 that caused Catherine Full Body to crash randomly with guest memory corruption.</li> </ul>"},{"location":"changelog-old/#107018-2021-08-27","title":"1.0.7018 - 2021-08-27","text":""},{"location":"changelog-old/#changed_25","title":"Changed:","text":"<ul> <li>Avoid redundant texture scale updates.</li> <li>Minor performance improvements on some games, most notably Xenoblade Chronicles: Definitive Edition.</li> </ul>"},{"location":"changelog-old/#107017-2021-08-26","title":"1.0.7017 - 2021-08-26","text":""},{"location":"changelog-old/#added_41","title":"Added:","text":"<ul> <li>Added support for attribute indexing, required by Donkey Kong Country Tropical Freeze, and a few other games.</li> <li>This improves the rendering on some Donkey Kong Country Tropical Freeze levels.</li> </ul>"},{"location":"changelog-old/#107016-2021-08-26","title":"1.0.7016 - 2021-08-26","text":""},{"location":"changelog-old/#added_42","title":"Added:","text":"<ul> <li>The Graphic Abstraction Layer is now multithreaded.</li> <li>Allows more finer controls over vendor drivers.<ul> <li>Allows to disable NVIDIA threaded optimization and remove stuttering related to it.</li> </ul> </li> <li>Allows multithreaded shader compilation at runtime and reduce stuttering when multiple shaders can be build at the same time.</li> <li>This can be enabled or disabled via an option in the settings called \"Backend Threading\". The default option is \"Auto\", which always means on right now, but could change for some vendors or backends.</li> <li>Consult the pull request for more details.</li> </ul>"},{"location":"changelog-old/#107015-2021-08-26","title":"1.0.7015 - 2021-08-26","text":""},{"location":"changelog-old/#added_43","title":"Added:","text":"<ul> <li>Implement MSR instruction for A32.</li> <li>Pocket Rumble is now playable.</li> </ul>"},{"location":"changelog-old/#107014-2021-08-26","title":"1.0.7014 - 2021-08-26","text":""},{"location":"changelog-old/#added_44","title":"Added:","text":"<ul> <li>Added support for HLE macros allowing to improve macro efficiency.</li> <li>For now, the only HLE macro function implemented is MultiDrawElementsIndirectCount, used by Monster Hunter Rise.</li> </ul>"},{"location":"changelog-old/#107013-2021-08-26","title":"1.0.7013 - 2021-08-26","text":""},{"location":"changelog-old/#fixed_97","title":"Fixed:","text":"<ul> <li>Remove missing unicorn files included in the Tests project.</li> <li>Fixes build warning.</li> </ul>"},{"location":"changelog-old/#107012-2021-08-26","title":"1.0.7012 - 2021-08-26","text":""},{"location":"changelog-old/#fixed_98","title":"Fixed:","text":"<ul> <li>Updates to the 0.13.3 bugfix release of LibHac and removes the workaround introduced in PR #2576.</li> <li>Fixes regression: SD card saves will now be placed in /Nintendo/save instead of /save/Nintendo.</li> </ul>"},{"location":"changelog-old/#107011-2021-08-26","title":"1.0.7011 - 2021-08-26","text":""},{"location":"changelog-old/#changed_26","title":"Changed:","text":"<ul> <li>Added fallbacks for all Audio backends.</li> <li>SDL2 is now the default audio backend, then OpenAL, then SoundIO. </li> </ul>"},{"location":"changelog-old/#107010-2021-08-26","title":"1.0.7010 - 2021-08-26","text":""},{"location":"changelog-old/#fixed_99","title":"Fixed:","text":"<ul> <li>Swap BGR565 components by changing the format.</li> <li>Fixes regression on some homebrew using a BGR565 framebuffer that stopped rendering.</li> </ul>"},{"location":"changelog-old/#107009-2021-08-26","title":"1.0.7009 - 2021-08-26","text":""},{"location":"changelog-old/#fixed_100","title":"Fixed:","text":"<ul> <li>Update to Ryujinx.SDL2-CS 2.0.17 (Fix runtime issues on Gentoo)</li> </ul>"},{"location":"changelog-old/#107008-2021-08-20","title":"1.0.7008 - 2021-08-20","text":""},{"location":"changelog-old/#fixed_101","title":"Fixed:","text":"<ul> <li>Adds a workaround for a Libhac issue where an exception is thrown when trying to delete an inexistent folder recursively.</li> </ul>"},{"location":"changelog-old/#107007-2021-08-20","title":"1.0.7007 - 2021-08-20","text":""},{"location":"changelog-old/#fixed_102","title":"Fixed:","text":"<ul> <li>Fixes spelling on some UI dialogs.</li> </ul>"},{"location":"changelog-old/#107006-2021-08-20","title":"1.0.7006 - 2021-08-20","text":""},{"location":"changelog-old/#fixed_103","title":"Fixed:","text":"<ul> <li>Allows swapping R and B components on BGR565 and BGRA5551 texture formats.</li> <li>Fixes swapped red/blue issue on Pokk\u00e9n Tournament DX.</li> <li>Fixes swapped red/blue issue on Super Smash Bros Ultimate, on the stages with large monitor screens, such as Pok\u00e9mon Stadium and the Boxing Ring.</li> </ul>"},{"location":"changelog-old/#107005-2021-08-20","title":"1.0.7005 - 2021-08-20","text":""},{"location":"changelog-old/#fixed_104","title":"Fixed:","text":"<ul> <li>Changes disabled vertex attribute value to (0, 0, 0, 1).</li> <li>Fixes a regression in Super Mario Odyssey that caused some plants in the Wooded Kingdom to render black.</li> </ul>"},{"location":"changelog-old/#107004-2021-08-20","title":"1.0.7004 - 2021-08-20","text":""},{"location":"changelog-old/#changed_27","title":"Changed:","text":"<ul> <li>Removes overlapping textures from the texture cache, if the overlapping texture is not view compatible with the existing one, and its data has been modified.</li> <li>Greatly reduces memory usage in Xenoblade Chronicles: Definitive Edition and Xenoblade Chronicles 2, in areas with high usage (like Gormott).</li> <li>Fixes crashes and performance issues caused by the system running out of memory.</li> </ul>"},{"location":"changelog-old/#107003-2021-08-20","title":"1.0.7003 - 2021-08-20","text":""},{"location":"changelog-old/#fixed_105","title":"Fixed:","text":"<ul> <li>Fixes errors from reading the SD card when encryption keys have changed.</li> <li>This caused an error when launching Super Smash Bros. Ultimate with an old SD card save directory.</li> </ul>"},{"location":"changelog-old/#107002-2021-08-20","title":"1.0.7002 - 2021-08-20","text":""},{"location":"changelog-old/#fixed_106","title":"Fixed:","text":"<ul> <li>Fixes wrong base level calculation when copying data to slices of 3D textures.</li> <li>Fixes 3D texture data not being properly updated in some rare cases.</li> <li>The bug was observed on Super Mario Odyssey. Other games using 3D textures might be affected too.</li> </ul>"},{"location":"changelog-old/#107001-2021-08-20","title":"1.0.7001 - 2021-08-20","text":""},{"location":"changelog-old/#fixed_107","title":"Fixed:","text":"<ul> <li>Fixes an assert that was happening on debug builds since version 1.0.7000, due to an optimization creating a constant operand with the wrong type.</li> <li>Should not have any visible effect on games as the bug did not cause wrong code generation.</li> </ul>"},{"location":"changelog-old/#107000-2021-08-17","title":"1.0.7000 - 2021-08-17","text":""},{"location":"changelog-old/#changed_28","title":"Changed:","text":"<ul> <li>Optimizes JIT memory allocations by using an arena allocator, along with other optimizations.</li> <li>Greatly improves PPTC compilation speeds, reducing the total duration by around 20%-60% depending on the game.</li> <li>Lowers memory usage when rebuilding PPTC.</li> <li>Reduces stutters and time taken to reach peak performance with PPTC disabled and on the first run (before PPTC is built).</li> <li>Fixes a bug that could cause incorrect code to be generated in some rare cases, where a shift value was overwritten with an incorrect value.</li> </ul>"},{"location":"changelog-old/#106999-2021-08-17","title":"1.0.6999 - 2021-08-17","text":""},{"location":"changelog-old/#fixed_108","title":"Fixed:","text":"<ul> <li>Fixes a crash that could happen when mounting save data if the keys or SD seed changed.</li> </ul>"},{"location":"changelog-old/#106998-2021-08-17","title":"1.0.6998 - 2021-08-17","text":""},{"location":"changelog-old/#fixed_109","title":"Fixed:","text":"<ul> <li>Allows transform feedback data to be flushed when accessed from CPU.</li> <li>Fixes some vertex explosions on SNK Heroines: Tag Team Frenzy.</li> </ul>"},{"location":"changelog-old/#106997-2021-08-12","title":"1.0.6997 - 2021-08-12","text":""},{"location":"changelog-old/#changed_29","title":"Changed:","text":"<ul> <li>Updates the LibHac dependency to version 0.13.1. This improves the accuracy of the emulator file system implementation, and solve some file system and save related issues on games. See below for a more detailed list of changes.</li> <li>Refactor <code>FsSrv</code> to match the official refactoring done in FS.</li> <li>Change how the <code>Horizon</code> and <code>HorizonClient</code> classes are handled. Each client created represents a different process with its own process ID and client state.</li> <li>Add FS access control to handle permissions for FS service method calls.</li> <li>Add FS program registry to keep track of the program ID, location and permissions of each process.</li> <li>Add FS program index map info manager to track the program IDs and indexes of multi-application programs.</li> <li>Add all FS IPC interfaces.</li> <li>Rewrite <code>Fs.Fsa</code> code to be more accurate.</li> <li>Rewrite a lot of <code>FsSrv</code> code to be more accurate.</li> <li>Extend directory save data to store <code>SaveDataExtraData</code></li> <li>Extend directory save data to lock the save directory to allow only one accessor at a time.</li> <li>Improve waiting and retrying when encountering access issues in <code>LocalFileSystem</code> and <code>DirectorySaveDataFileSystem</code>.</li> <li>More <code>IFileSystemProxy</code> methods should work now.</li> <li>Probably a bunch more stuff.</li> </ul>"},{"location":"changelog-old/#106996-2021-08-12","title":"1.0.6996 - 2021-08-12","text":""},{"location":"changelog-old/#changed_30","title":"Changed","text":"<ul> <li>Improves error message when the prod.keys file is present, but the keys are outdated.</li> <li>Now the \"Ryujinx was unable to parse the provided firmware. This is usually caused by outdated keys.\" message is presented if the keys are outdated when installing a new firmware.</li> </ul>"},{"location":"changelog-old/#106995-2021-08-12","title":"1.0.6995 - 2021-08-12","text":""},{"location":"changelog-old/#fixed_110","title":"Fixed","text":"<ul> <li>Fixes a regression that could cause the same compute shader to be compiled over and over again when shader cache was enabled, causing a large performance drop in some games.</li> <li>Fixes performance regression in Hyrule Warriors: Ages of Calamity, and probably other games that uses compute shaders.</li> </ul>"},{"location":"changelog-old/#106994-2021-08-11","title":"1.0.6994 - 2021-08-11","text":""},{"location":"changelog-old/#fixed_111","title":"Fixed","text":"<ul> <li>Reverts changes from version 1.0.6987.</li> <li>Fixes regression on The Legend of Zelda: Breath of the Wild (flickering trees) and Monster Hunter Stories 2: Wings of Ruin (invisible huts), probably more.</li> </ul>"},{"location":"changelog-old/#106993-2021-08-11","title":"1.0.6993 - 2021-08-11","text":""},{"location":"changelog-old/#fixed_112","title":"Fixed","text":"<ul> <li>Initialize render scales to 1 on the OpenGL backend.</li> <li>Fixes a regression introduced on 1.0.6989 where some games would have a solid colour instead of the correct texture due to the scale value being 0.</li> </ul>"},{"location":"changelog-old/#106992-2021-08-11","title":"1.0.6992 - 2021-08-11","text":""},{"location":"changelog-old/#fixed_113","title":"Fixed","text":"<ul> <li>Unify GpuAccessorBase and TextureDescriptorCapableGpuAccessor.</li> <li>Fixes regression introduced in 1.0.6990 that was causing shader TDR.</li> </ul>"},{"location":"changelog-old/#106991-2021-08-11","title":"1.0.6991 - 2021-08-11","text":""},{"location":"changelog-old/#fixed_114","title":"Fixed","text":"<ul> <li>Workaround for cubemap view data upload bug on Intel.</li> <li>Fixes eyes rendering of Hatsune Miku.</li> </ul>"},{"location":"changelog-old/#106990-2021-08-11","title":"1.0.6990 - 2021-08-11","text":""},{"location":"changelog-old/#fixed_115","title":"Fixed","text":"<ul> <li>Fixes another bug on Intel where gl_FrontFacing returns incorrect values (it seems to be flipped?), the solution here is casting the bool to float and then bitcasting to integer and checking if its non-zero.</li> <li>Fixes rendering of mario mustache on Super Mario Odyssey on Intel (affects both Vulkan and OpenGL).</li> <li>Added 2 new functions to the IGpuAccessor interface, used to check if the host has the vector indexing bug (present on AMD) and the front facing bug (present on Intel).</li> <li>LDC now uses vector indexing of the form data[offset &gt;&gt; 2][offset &amp; 3] on NVIDIA and Intel, which produces better codegen (and makes shaders easier to read).</li> <li>Functions that just returns a host capability on GpuAcessor and CachedGpuAccessor were moved to a common base class to avoid duplication and bugs. In fact, one of them (the one to check the texture shadow LOD capability) was missing from the CachedGpuAccessor, which likely means those shaders were broken on shader cache rebuild on the vendors/drivers that does not support the extension (as the default interface implementation returns true). Now this is fixed.</li> </ul>"},{"location":"changelog-old/#106989-2021-08-11","title":"1.0.6989 - 2021-08-11","text":""},{"location":"changelog-old/#changed_31","title":"Changed","text":"<ul> <li>Use \"Undesired\" scale mode for certain textures rather than blacklisting.</li> <li>Games that reuse depth stencil between a lot of unrelated draws to textures of different sizes will no longer blacklist from scaling forever. (Bayonetta 2)</li> <li>Textures that are detected as being atlas-like or dof-like will not be locked out of scaling forever - if a depth stencil target is bound when drawing, they can gain res scale. This might result in more 3D UI elements seeing resolution scale. (Xenoblade DE menus, though they're still heavily antialiased)</li> <li>Some other games that randomly blacklist to 1x, or don't scale at all may now work.</li> <li>The approach for blur/dof texture detection has been updated to take into account width alignment, as it can greatly alter the aspect ratio. This fixes small textures failing to detect, which would have cascaded across mipmap texture views and forced textures to scale.</li> <li>Render target scale is now only sent to the backend when its value has changed, rather than each time the scales are evaluated.</li> <li>Scissor and Viewport are only recalculated when the value changes too.</li> </ul>"},{"location":"changelog-old/#106988-2021-08-11","title":"1.0.6988 - 2021-08-11","text":""},{"location":"changelog-old/#fixed_116","title":"Fixed","text":"<ul> <li>Make sure attributes used on subsequent shader stages are initialized.</li> <li>Fixes Shadows not working on Zelda Link's awakening (Intel and AMD).</li> <li>Fixes Hatsune Miku eyes being black (Intel and AMD).</li> <li>Fixes Shader failing to compile on Yo-kai Watch 4 (all vendors, no visible effect though?).</li> <li>Probably more...</li> </ul>"},{"location":"changelog-old/#106987-2021-08-11","title":"1.0.6987 - 2021-08-11","text":""},{"location":"changelog-old/#changed_32","title":"Changed","text":"<ul> <li>Improving the speed of vertex buffer updates in some specific cases, where the vertex buffer size is very large. This calculates the vertex buffer size from the max index on the index buffer when the game provided size is too large (above a given threshold), and when the index buffer is small enough.</li> <li>This improves the speed of Super Mario Galaxy, however it appears that this game had a performance regression after range tracking, so the speed seems mostly back to what it was before that. The menu transition however is faster than what it was even before range tracking.</li> </ul>"},{"location":"changelog-old/#106986-2021-08-11","title":"1.0.6986 - 2021-08-11","text":""},{"location":"changelog-old/#fixed_117","title":"Fixed","text":"<ul> <li>Do not dirty memory tracking region handles if they are partially unmapped.</li> <li>Fixes crash when loading a save on Dragon Quest XI S.</li> </ul>"},{"location":"changelog-old/#106985-2021-08-11","title":"1.0.6985 - 2021-08-11","text":""},{"location":"changelog-old/#changed_33","title":"Changed","text":"<ul> <li>Replace BGRA and scale uniforms with a uniform block (required for Vulkan).</li> </ul>"},{"location":"changelog-old/#106984-2021-08-11","title":"1.0.6984 - 2021-08-11","text":""},{"location":"changelog-old/#changed_34","title":"Changed","text":"<ul> <li>Improves ServiceNotImplementedException by removing the need to pass in whether the command is a Tipc command or a Hipc command to the exception constructor.</li> </ul>"},{"location":"changelog-old/#106983-2021-08-11","title":"1.0.6983 - 2021-08-11","text":""},{"location":"changelog-old/#added_45","title":"Added","text":"<ul> <li>Use a new approach for shader BRX targets:</li> <li>Fixes several graphical glitches on Hatsune Miku Project DIVA MEGA 39's.</li> <li>Fixes Bowwow being a white glowing ball on Zelda's Link Awakening.</li> <li>Fixes reflection bug on Cadence of Hyrule.</li> <li>And more...</li> </ul>"},{"location":"changelog-old/#106982-2021-08-04","title":"1.0.6982 - 2021-08-04","text":""},{"location":"changelog-old/#added_46","title":"Added","text":"<ul> <li>Implement (non-HD) vibrations support:</li> <li>Implement vibration calls of hid service accurately to reverse engineering.</li> <li>You can enable/disable rumble in the controller settings window.</li> <li>HD rumble values are converted to non-HD vibration values, you can choose the multipliers for rumble in the controller settings window.</li> <li>Tested working controller are DualSense (PS5), Xbox One, Xbox 360, ProController but working on probably more controllers. Users reports rumble doesn't work on real JoyCons, this will be fixed later if confirmed.</li> </ul>"},{"location":"changelog-old/#106981-2021-08-04","title":"1.0.6981 - 2021-08-04","text":""},{"location":"changelog-old/#fixed_118","title":"Fixed:","text":"<ul> <li>Fixes a regression introduced in #2411:</li> <li>Alt key no longer focuses the menu bar. That functionality wasn't really relevant to the original intent of #2411, and the main purpose of the PR remains usable. Focus on Alt is something will might fix later.</li> <li>This reworks the entire flow of how the \"Show UI\" hotkey works. Note that it is specifically a \"Show UI\" hotkey, and hiding the UI still has to be done via the Actions menu, as we don't want users to trigger it by accident:</li> <li>The key is now configurable.</li> <li>The key now defaults to F4. Several annoyances was found with Alt, as it's part of the language-switching combination and also getting in the way of taking a (regular, non-Ryujinx) screenshot. Something that's not commonly used made more sense. Of course, due to the previous point above, users are welcome to switch it back to Alt if they are so inclined.</li> <li>Fixing a problem with the implementation of the KeyboardHotkeyState enum which would cause it to break were we to add any more hotkeys.</li> </ul>"},{"location":"changelog-old/#106980-2021-08-04","title":"1.0.6980 - 2021-08-04","text":""},{"location":"changelog-old/#fixes","title":"Fixes:","text":"<ul> <li>XInput devices provides axis data with square ranges (ie +-32767). Moving the sticks to diagonal ends means that it will have the max range values for both axes. This causes fast motion of player characters in games that do not clamp their input.</li> <li>This fixes it by clamping the input to a circle. Fixes The Legend of Zelda: Skyward Sword HD when Link sprinting without using up stamina when the controller sticks are at diagonals.</li> </ul>"},{"location":"changelog-old/#106979-2021-08-04","title":"1.0.6979 - 2021-08-04","text":""},{"location":"changelog-old/#fixes_1","title":"Fixes:","text":"<ul> <li>Makes more copies respect non-contiguous GPU virtual memory regions, instead of assuming it is contiguous. After this, the main thing missing will be support for non-contiguous buffers, which will be more complicated, and will be done on a separate PR.</li> <li>This also fixes a bug that noticed on I2M, where the copy would be incorrect for block linear textures, if destination X was not a multiple of 16. This was fixed by aligning the start of the vector copy, which should start and end of a multiple of 16. We are not aware of any games that uses it with a X value that is not a multiple of 16 though (it is usually 0), so maybe nothing was affected by this bug.</li> </ul>"},{"location":"changelog-old/#106978-2021-08-04","title":"1.0.6978 - 2021-08-04","text":""},{"location":"changelog-old/#added_47","title":"Added:","text":"<ul> <li>Improving reporting for cheats and updating the cheat instructions to match Atmosphere's implementation. Those are:</li> <li>A warning is now issued when the cheat tries to write to code region instead of requiring log analysis in debug mode.</li> <li>The cheat names are now printed in the log for better error detection and support.</li> <li>Implemented new addressing modes Alias and Aslr.</li> <li>Implemented else instruction for conditionals.</li> <li>Also, with \"PPTC with ExeFS Patching\" merged, it is now safe to enable cheats to write to code regions (with the aforementioned warning). This is a preparation for the upcoming full support, but does not mean that all cheats will work (some of them may start working).</li> </ul>"},{"location":"changelog-old/#106977-2021-08-04","title":"1.0.6977 - 2021-08-04","text":""},{"location":"changelog-old/#fixed_119","title":"Fixed:","text":"<ul> <li>Fixes some audio related issues that caused the emulator to hang or crash at exit, by making audio backend disposal thread safe.</li> <li>Fixes deadlock (causing the emulator to not respond) at exit with the OpenAL backend.</li> <li>Fixes crash at exit with the SDL2 backend due to a double free.</li> <li>Fixes a crash at exit (only when the emulator window was closed) caused by a NRE on window disposal.</li> </ul>"},{"location":"changelog-old/#106976-2021-07-24","title":"1.0.6976 - 2021-07-24","text":""},{"location":"changelog-old/#added_48","title":"Added:","text":"<ul> <li>Implement an option to hide status and menu bar</li> <li>The option can be found in the Actions menu. You can press alt to make them appears again.</li> </ul>"},{"location":"changelog-old/#106975-2021-07-24","title":"1.0.6975 - 2021-07-24","text":""},{"location":"changelog-old/#fixed_120","title":"Fixed","text":"<ul> <li>Fixes a bug where the right JoyCon is not retrieved from Cemuhook and that the right JoyCon motion shared memory is cleared after update.</li> <li>This should allow right JoyCon to work in The Legend of Zelda: Skyward Sword HD.</li> </ul>"},{"location":"changelog-old/#106974-2021-07-19","title":"1.0.6974 - 2021-07-19","text":""},{"location":"changelog-old/#changed_35","title":"Changed:","text":"<ul> <li>Further optimizes texture and buffer flush, by reducing the amount of data copies required.</li> <li>Texture layout conversion methods can now write to guest memory directly, in some cases.</li> <li>Methods to get data from GPU now returns the span of the range if a persistent buffer is being used, instead of allocating and doing a copy.</li> <li>Improves the performance on The Legend of Zelda: Skyward Sword, Pok\u00e9mon Sword/Shield, and likely other games that does texture flushes every frame.</li> </ul>"},{"location":"changelog-old/#106973-2021-07-18","title":"1.0.6973 - 2021-07-18","text":""},{"location":"changelog-old/#changed_36","title":"Changed:","text":"<ul> <li>Fixes a performance regression introduced on version 1.0.6970, by switching to the old flush method on affected drivers.</li> <li>Only Linux AMD drivers and the Intel Windows and Linux drivers are affected, NVIDIA is not affected at all.</li> <li>For the affected drivers, The Legend of Zelda: Skyward Sword HD and the other affected games are as fast as they were before.</li> </ul>"},{"location":"changelog-old/#106972-2021-07-18","title":"1.0.6972 - 2021-07-18","text":""},{"location":"changelog-old/#changed_37","title":"Changed:","text":"<ul> <li>Improves drastically the code generation of the audren's DSP.</li> <li>This may reduce CPU usage on the audio processing side and result in a better CPU time allocation.</li> </ul>"},{"location":"changelog-old/#106971-2021-07-18","title":"1.0.6971 - 2021-07-18","text":""},{"location":"changelog-old/#changed_38","title":"Changed:","text":"<ul> <li>Improves shader tools command line by adding support for target language and API.</li> <li>No direct user changes.</li> </ul>"},{"location":"changelog-old/#106970-2021-07-16","title":"1.0.6970 - 2021-07-16","text":""},{"location":"changelog-old/#changed_39","title":"Changed:","text":"<ul> <li>Improves performance of buffer and texture flushes by using a different approach.</li> <li>Greatly improves performance of The Legend of Zelda: Skyward Sword HD.</li> <li>Pok\u00e9mon Sword/Shield is also improved, however it is still slower than the LDN 2.3 build.</li> <li>Xenoblade Chronicles 2 is sligthly improved.</li> <li>Any other game that does a lot of flushes per frame should be faster aswell.</li> </ul>"},{"location":"changelog-old/#106969-2021-07-14","title":"1.0.6969 - 2021-07-14","text":""},{"location":"changelog-old/#fixed_121","title":"Fixed:","text":"<ul> <li>Fixes a bug where data on textures copied using the DMA engine could be lost.</li> <li>Fixes texture corruption (usually visible as black portraits or garbled sprites) on Legend of Mana. Other games might be affected too.</li> </ul>"},{"location":"changelog-old/#106968-2021-07-14","title":"1.0.6968 - 2021-07-14","text":""},{"location":"changelog-old/#fixed_122","title":"Fixed:","text":"<ul> <li>Allows draws and compute dispatch without a texture pool and sampler pool being set.</li> <li>Fixes regression on Tales of Vesperia, where the game would crash at boot.</li> <li>An error will be logged if the game attempts to draw with texture or image access without having the pools set.</li> </ul>"},{"location":"changelog-old/#106967-2021-07-14","title":"1.0.6967 - 2021-07-14","text":""},{"location":"changelog-old/#fixed_123","title":"Fixed:","text":"<ul> <li>Fixes a bug where the transfer memory handle was not being closed on nvservices, resulting in a handle leak and failure to create a transfer memory at the same region on the guest.</li> </ul>"},{"location":"changelog-old/#106966-2021-07-13","title":"1.0.6966 - 2021-07-13","text":""},{"location":"changelog-old/#changed_40","title":"Changed:","text":"<ul> <li>Revert LibHac update</li> <li>There have been multiple reports of save being destroyed. The issue is being investigated and the update will be rolled again once fixed.</li> </ul>"},{"location":"changelog-old/#106965-2021-07-13","title":"1.0.6965 - 2021-07-13","text":""},{"location":"changelog-old/#fixed_124","title":"Fixed:","text":"<ul> <li>Fixes build error of the headless project caused by changes on version 1.0.6964.</li> </ul>"},{"location":"changelog-old/#106964-2021-07-13","title":"1.0.6964 - 2021-07-13","text":""},{"location":"changelog-old/#changed_41","title":"Changed:","text":"<ul> <li>Updates the LibHac dependency to version 0.13.1. This improves the accuracy of the emulator file system implementation, and solve some file system and save related issues on games. See below for a more detailed list of changes.</li> <li>Refactor <code>FsSrv</code> to match the official refactoring done in FS.</li> <li>Change how the <code>Horizon</code> and <code>HorizonClient</code> classes are handled. Each client created represents a different process with its own process ID and client state.</li> <li>Add FS access control to handle permissions for FS service method calls.</li> <li>Add FS program registry to keep track of the program ID, location and permissions of each process.</li> <li>Add FS program index map info manager to track the program IDs and indexes of multi-application programs.</li> <li>Add all FS IPC interfaces.</li> <li>Rewrite <code>Fs.Fsa</code> code to be more accurate.</li> <li>Rewrite a lot of <code>FsSrv</code> code to be more accurate.</li> <li>Extend directory save data to store <code>SaveDataExtraData</code></li> <li>Extend directory save data to lock the save directory to allow only one accessor at a time.</li> <li>Improve waiting and retrying when encountering access issues in <code>LocalFileSystem</code> and <code>DirectorySaveDataFileSystem</code>.</li> <li>More <code>IFileSystemProxy</code> methods should work now.</li> <li>Probably a bunch more stuff.</li> </ul>"},{"location":"changelog-old/#106963-2021-07-12","title":"1.0.6963 - 2021-07-12","text":""},{"location":"changelog-old/#changed_42","title":"Changed:","text":"<ul> <li>Optimizes the GPU Inline-to-Memory engine transfer operations.</li> <li>Might reduce stutters and improve performance a little on games using the OpenGL API on the Switch.</li> </ul>"},{"location":"changelog-old/#106962-2021-07-12","title":"1.0.6962 - 2021-07-12","text":""},{"location":"changelog-old/#fixed_125","title":"Fixed:","text":"<ul> <li>Fixes a regression introduced on version 1.0.6957 that caused shaders using rectangle textures to fail to build in some cases.</li> <li>The Touryst now renders properly once again.</li> </ul>"},{"location":"changelog-old/#106961-2021-07-11","title":"1.0.6961 - 2021-07-11","text":""},{"location":"changelog-old/#changed_43","title":"Changed:","text":"<ul> <li>Refactor GPU 3D engine to more closely match the hardware, in addition to fixing bugs.</li> <li>Now all the 3D engine state is per-channel, rather than shared. This completes the work started with the initial GPU channel support.</li> <li>New state modification tracking and host state update method, cleaner and more efficient than the old one.</li> <li>Optimized <code>DeviceState</code> register read and write functions.</li> <li>Proper channel state initialization using the same values as the official OS, instead of guessed values.</li> <li>Fixes a bug where the host state was not being updated on changes to the <code>YNegate</code> register.<ul> <li>Fixes upside down rendering on Cat Girl Without Salad: Amuse Bouche, Dragon Quest Builders, 20XX, Asterix &amp; Obelix XXL2, BLADE ARCUS Rebellion from Shining, and many more.</li> <li>Fixes black screen on Game Tengoku CruisinMix Special (happens when you start a new game). The title can now be considered playable with minor transparency issues.</li> </ul> </li> <li>Implement missing <code>PrimitiveTypeOverrideEnable</code> register (thanks to ByLaws for testing).<ul> <li>Fixes Turok 2 menus rendering.</li> </ul> </li> </ul>"},{"location":"changelog-old/#106960-2021-07-11","title":"1.0.6960 - 2021-07-11","text":""},{"location":"changelog-old/#fixed_126","title":"Fixed:","text":"<ul> <li>Fixes a bug on the kernel virtual memory allocation function, where an address outside of the requested range could be returned.</li> <li>Fixes crashes on Disaster Report 4, Garfield Kart Furious Racing, and likely more games that crashes/aborts early in the boot process.</li> </ul>"},{"location":"changelog-old/#106959-2021-07-10","title":"1.0.6959 - 2021-07-10","text":""},{"location":"changelog-old/#added_49","title":"Added:","text":"<ul> <li>Implements CreateApplicationAndRequestToStart of am service.</li> <li>Allow games to restart by themselves if needed. You can now change the Super Smash Bros. Ultimate language in game (Note: Restart doesn't work with OpenAL audio backend due to another issue).</li> </ul>"},{"location":"changelog-old/#106958-2021-07-10","title":"1.0.6958 - 2021-07-10","text":""},{"location":"changelog-old/#fixed_127","title":"Fixed:","text":"<ul> <li>Fixes some misc bugs in writable region write-back.</li> <li>No changes expected on games.</li> </ul>"},{"location":"changelog-old/#106957-2021-07-08","title":"1.0.6957 - 2021-07-08","text":""},{"location":"changelog-old/#fixed_128","title":"Fixed:","text":"<ul> <li>Fixes resolution scaling when <code>textureSize</code> is used with a scaled texture on a compute or pixel shader.</li> <li>Fixes glitches caused by resolution scaling on Monster Hunter Stories 2: Wings of Ruin (visible in battles and a few other places), Monster Hunter Rise (character selection screen on the demo, and a few other places on the full game), and likely more games.</li> <li>Note: Monster Hunter Rise is still not properly scaled in-game, using a resolution mod is still recommended for the best results.</li> </ul>"},{"location":"changelog-old/#106956-2021-07-07","title":"1.0.6956 - 2021-07-07","text":""},{"location":"changelog-old/#fixed_129","title":"Fixed:","text":"<ul> <li>Fixes a regression introduced on version 1.0.6894 (POWER update) that caused some games to crash with a invalid memory region exception.</li> <li>Wonder Boy: The Dragon's Trap, FINAL FANTASY X/X-2 HD Remaster and more are once again playable.</li> </ul>"},{"location":"changelog-old/#106955-2021-07-07","title":"1.0.6955 - 2021-07-07","text":""},{"location":"changelog-old/#changed_44","title":"Changed:","text":"<ul> <li>Refactored GPU 2D, DMA, I2M and Compute engines emulation code to more closely match real hardware, with state structures now being auto-generated from official headers.</li> <li>No changes expected on games.</li> </ul>"},{"location":"changelog-old/#106954-2021-07-06","title":"1.0.6954 - 2021-07-06","text":""},{"location":"changelog-old/#added_50","title":"Added:","text":"<ul> <li>A new front-end has been added to Ryujinx: Ryujinx.Headless.SDL2.</li> <li>This is a minimalist variant of the emulator without a GUI that can be started and configured via command line.</li> <li>This is available on a separated release zip. (see ryujinx-headless-sdl2-{version} variants on Appveyor)</li> <li>This doesn't have any updater.</li> <li>For more information on the options available run it with <code>--help</code>.</li> </ul>"},{"location":"changelog-old/#106953-2021-07-06","title":"1.0.6953 - 2021-07-06","text":""},{"location":"changelog-old/#added_51","title":"Added:","text":"<ul> <li>Allows the target language and API to be passed to the translator. Will be used by the Vulkan and SPIR-V backend in the future.</li> </ul>"},{"location":"changelog-old/#106952-2021-07-06","title":"1.0.6952 - 2021-07-06","text":""},{"location":"changelog-old/#added_52","title":"Added:","text":"<ul> <li>Adds a portable screenshot folder to save images when portable mode is enabled. Also adds a few error checks.</li> </ul>"},{"location":"changelog-old/#106951-2021-07-06","title":"1.0.6951 - 2021-07-06","text":""},{"location":"changelog-old/#fixed_130","title":"Fixed:","text":"<ul> <li>Fixes an issue in GetShrinkedGamepadName which crash the controller window if the controller name is equal to the limited length.</li> </ul>"},{"location":"changelog-old/#106950-2021-07-06","title":"1.0.6950 - 2021-07-06","text":""},{"location":"changelog-old/#fixed_131","title":"Fixed:","text":"<ul> <li>Fixes nifm service where IsDynamicDnsEnabled isn't supported on Linux.</li> </ul>"},{"location":"changelog-old/#106949-2021-07-06","title":"1.0.6949 - 2021-07-06","text":""},{"location":"changelog-old/#fixed_132","title":"Fixed:","text":"<ul> <li>Fixes some inconsistencies introduced in aoc service (1.0.6942).</li> <li>Fixes booting issues of Fire Emblem Three House, Super Robot Wars, Diablo 3 and more games.</li> </ul>"},{"location":"changelog-old/#106948-2021-07-06","title":"1.0.6948 - 2021-07-06","text":""},{"location":"changelog-old/#fixed_133","title":"Fixed:","text":"<ul> <li>Start a game with -f argument doesn't tick \"Start Games in Fullscreen Mode\" anymore.</li> </ul>"},{"location":"changelog-old/#106947-2021-07-06","title":"1.0.6947 - 2021-07-06","text":""},{"location":"changelog-old/#added_53","title":"Added:","text":"<ul> <li>Implement 12.0.0 hwopus service calls InitializeEx and GetWorkBufferSizeEx.</li> <li>Games built with 12.0.0+ SDK and using hwopus service are now bootable/playable.</li> </ul>"},{"location":"changelog-old/#106946-2021-07-03","title":"1.0.6946 - 2021-07-03","text":""},{"location":"changelog-old/#fixed_134","title":"Fixed:","text":"<ul> <li>Honour copy dependencies when switching render target.</li> <li>Fixes UI not being rendered on the Mii Editor (only AMD and Intel Windows drivers are affected).</li> <li>Fixes dialog boxes and menus not rendering on New Pok\u00e9mon Snap (only AMD and Intel Windows drivers are affected).</li> </ul>"},{"location":"changelog-old/#106945-2021-06-29","title":"1.0.6945 - 2021-06-29","text":""},{"location":"changelog-old/#fixed_135","title":"Fixed:","text":"<ul> <li>Fixes a wrong check introduced in 1.0.6942.</li> <li>Pok\u00e9mon Sword / Shield (and probably other games) can now use DLCs again.</li> </ul>"},{"location":"changelog-old/#106944-2021-06-29","title":"1.0.6944 - 2021-06-29","text":""},{"location":"changelog-old/#fixed_136","title":"Fixed:","text":"<ul> <li>Fixes IPC sessions not being disposed at emulation end.</li> <li>This fix possible leaks (memory, opened files, ect) at emulation end.</li> </ul>"},{"location":"changelog-old/#106943-2021-06-29","title":"1.0.6943 - 2021-06-29","text":""},{"location":"changelog-old/#added_54","title":"Added:","text":"<ul> <li>Initial support for separate GPU address spaces was added.</li> <li>Super Smash Bros Ultimate story mode is now playable.</li> </ul>"},{"location":"changelog-old/#106942-2021-06-29","title":"1.0.6942 - 2021-06-29","text":""},{"location":"changelog-old/#changed_45","title":"Changed:","text":"<ul> <li>Cleanup AOC service and implement some stub calls in AM service.</li> <li>Tony Hawk\u2019s Pro Skater 1+2 is now bootable.</li> </ul>"},{"location":"changelog-old/#106941-2021-06-28","title":"1.0.6941 - 2021-06-28","text":""},{"location":"changelog-old/#added_55","title":"Added:","text":"<ul> <li>Support for taking screenshot was added.</li> <li>You can take screenshot by pressing F8.</li> <li>Screenshots are saved in your pictures folder in the \"Ryujinx\" subdirectory.</li> <li>This support resolution scaling. (example: if you configured a 8K resolution your screenshot will be 8K)</li> </ul>"},{"location":"changelog-old/#106940-2021-06-28","title":"1.0.6940 - 2021-06-28","text":""},{"location":"changelog-old/#added_56","title":"Added:","text":"<ul> <li>Support for running the Mii Editor applet was added.</li> <li>Requires installed firmware 4.0.0+.</li> <li>Mii Editor applet must be launched outside of a game.</li> </ul>"},{"location":"changelog-old/#106939-2021-06-25","title":"1.0.6939 - 2021-06-25","text":""},{"location":"changelog-old/#changed_46","title":"Changed:","text":"<ul> <li>Implements custom (greater than 1) line width support, along with line smoothing support.</li> <li>Fixes incorrect line thickness on the grid that shows on Mario Golf: Super Rush.</li> </ul>"},{"location":"changelog-old/#106938-2021-06-25","title":"1.0.6938 - 2021-06-25","text":""},{"location":"changelog-old/#fixed_137","title":"Fixed:","text":"<ul> <li>Fixes unwritten shader output values, which was previously using a value of 0 instead of 1.</li> <li>Fixes missing/invisible geometry on Monster Hunter Stories 2: Wings of Ruin (Trial Version).</li> </ul>"},{"location":"changelog-old/#106937-2021-06-24","title":"1.0.6937 - 2021-06-24","text":""},{"location":"changelog-old/#fixed_138","title":"Fixed:","text":"<ul> <li>Fixes some shader compilation failures on shaders using texture depth compare with a LOD parameter and 2D or Cube array textures. Those shaders requires an extension, which is now enabled. On GPUs where the extension is not supported, the LOD parameter is removed.</li> <li>Fixes lighting issues on Mario Golf Super Rush.</li> </ul>"},{"location":"changelog-old/#106936-2021-06-24","title":"1.0.6936 - 2021-06-24","text":""},{"location":"changelog-old/#fixed_139","title":"Fixed:","text":"<ul> <li>Stubs GetAlbumFileList0AafeAruidDeprecated and GetAlbumFileList3AaeAruid in caps service.</li> <li>World of Light in Super Smash Bros. Ultimate is now playable.</li> </ul>"},{"location":"changelog-old/#106935-2021-06-23","title":"1.0.6935 - 2021-06-23","text":""},{"location":"changelog-old/#changed_47","title":"Changed:","text":"<ul> <li>Improves game searching when you start typing something while browsing the game list. You can now searching by TitleID and keyword (For example, allows to type \"odyssey\" and find Super Mario Odyssey).</li> </ul>"},{"location":"changelog-old/#106934-2021-06-23","title":"1.0.6934 - 2021-06-23","text":""},{"location":"changelog-old/#changed_48","title":"Changed:","text":"<ul> <li>Implements direct mouse support, similar to the direct keyboard support. This enables games and homebrew that support USB mouse to have that option enabled.</li> <li>Touchscreen is disabled when direct mouse is enabled. Also, the real cursor is hidden while inside the client area (GTK seems to reset the mouse cursor state often, so you will see the mouse pop in once in a short while).</li> </ul>"},{"location":"changelog-old/#106933-2021-06-23","title":"1.0.6933 - 2021-06-23","text":""},{"location":"changelog-old/#changed_49","title":"Changed:","text":"<ul> <li>Implementing supports for multiple GPU channels, enabling games to have separate GPU state. This is usually used when videos are played, as some games creates a separate channel for that. Before this change, a single channel was used for everything, which resulted in crashes as the state ended being corrupted.</li> <li>Fixes rendering of Doukoku Shoshite..., Skullgirls 2<sup>nd</sup> Encore, COTTOn Reboot!, Dragonball Xenoverse 2 and more.</li> </ul>"},{"location":"changelog-old/#106932-2021-06-23","title":"1.0.6932 - 2021-06-23","text":""},{"location":"changelog-old/#changed_50","title":"Changed:","text":"<ul> <li>This greatly speeds up games that constantly resize buffers, and removes stuttering on games that resize large buffers occasionally.</li> <li>Large improvement on Super Mario 3D All-Stars. Slowdown now is just due to the creation of the OGL buffer resources. (#1663 needed for best performance)</li> <li>Improvement to Hyrule Warriors: AoC, and UE4 games. These games still stutter in general due to texture creation/loading.</li> <li>Small improvement to other games, potential 1-frame stutters avoided.</li> <li>ForceSynchronizeMemory, which was added with POWER, is no longer needed. Some tests have been added for the MultiRegionHandle.</li> </ul>"},{"location":"changelog-old/#106931-2021-06-23","title":"1.0.6931 - 2021-06-23","text":""},{"location":"changelog-old/#changed_51","title":"Changed:","text":"<ul> <li>Implements GetDeviceNickName and SetDeviceNickName in settings service.</li> <li>Animal Crossing Island Transfer Tool is now bootable.</li> </ul>"},{"location":"changelog-old/#106930-2021-06-23","title":"1.0.6930 - 2021-06-23","text":""},{"location":"changelog-old/#changed_52","title":"Changed:","text":"<ul> <li>Implements CreateUserInterface/CreateSystemInterface and stubs Initialize/IsNfcEnabled in nfc service.</li> <li>Implements CreateDebugInterface, CreateSystemInterface and GetRegisterInfo2 in nfp service.</li> <li>Fixes a wrong size in RegisterInfo struct.</li> </ul>"},{"location":"changelog-old/#106929-2021-06-23","title":"1.0.6929 - 2021-06-23","text":""},{"location":"changelog-old/#changed_53","title":"Changed:","text":"<ul> <li>Enables the single file publish feature at the project level to embed the managed dependencies on the executable, and remove some unused dependencies/files.</li> </ul>"},{"location":"changelog-old/#106928-2021-06-23","title":"1.0.6928 - 2021-06-23","text":""},{"location":"changelog-old/#fixed_140","title":"Fixed:","text":"<ul> <li>Fixes wrong TouchPoint Attribute in the hid shared memory and wrong main window focus value.</li> <li>Fixes Fullscreen hotkey which needed minimize the window one time before.</li> <li>Fixes Touch input in Mini Metro, Umineko no Naku Koro ni Saku and probably more games.</li> </ul>"},{"location":"changelog-old/#106927-2021-06-23","title":"1.0.6927 - 2021-06-23","text":""},{"location":"changelog-old/#fixed_141","title":"Fixed:","text":"<ul> <li>The component order of the instruction is the inverse of the vector returned by textureQueryLod.</li> <li>Fixes blurry graphics on Mario + Rabbids Kingdom Battle, caused by the shader sampling from the wrong texture level (due to the incorrect LOD value).</li> </ul>"},{"location":"changelog-old/#106926-2021-06-23","title":"1.0.6926 - 2021-06-23","text":""},{"location":"changelog-old/#changed_54","title":"Changed:","text":"<ul> <li>Implement VORN (register) Arm32 instruction.</li> <li>MushihimeSama is now bootable.</li> </ul>"},{"location":"changelog-old/#106925-2021-06-23","title":"1.0.6925 - 2021-06-23","text":""},{"location":"changelog-old/#fixed_142","title":"Fixed:","text":"<ul> <li>Fixes an issue preventing some outputs from being passed to the pixel shader when geometry shader passthrough is enabled. </li> <li>Fixes missing graphics on Game Builder Garage, Nintendo Labo Toy-Con 04: VR Kit and possibly other games. (Note: Does not fix missing apple bug on Game Builder Garage.)</li> </ul>"},{"location":"changelog-old/#106924-2021-06-23","title":"1.0.6924 - 2021-06-23","text":""},{"location":"changelog-old/#changed_55","title":"Changed:","text":"<ul> <li>Implement GetPlayerLedPattern, SetNpadJoyHoldType, GetNpadJoyHoldType, IsVibrationDeviceMounted (Needed by Super Mario Odyssey) in hid service.</li> <li>Implement GetLastActiveNpad, GetNpadSystemExtStyle, GetAppletFooterUiType and stub ApplyNpadSystemCommonPolicy in hid:sys service.</li> </ul>"},{"location":"changelog-old/#106923-2021-06-23","title":"1.0.6923 - 2021-06-23","text":""},{"location":"changelog-old/#changed_56","title":"Changed:","text":"<ul> <li>Unbind input keys in the controller window by middle-clicking while an input is selected.</li> </ul>"},{"location":"changelog-old/#106922-2021-06-22","title":"1.0.6922 - 2021-06-22","text":""},{"location":"changelog-old/#fixed_143","title":"Fixed","text":"<ul> <li>Implement SaveSystemReport and SaveSystemReportWithUser in prepo services.</li> </ul>"},{"location":"changelog-old/#106921-2021-06-22","title":"1.0.6921 - 2021-06-22","text":""},{"location":"changelog-old/#fixed_144","title":"Fixed","text":"<ul> <li>Implement GetSharedFontInOrderOfPriorityForSystem in pl service.</li> </ul>"},{"location":"changelog-old/#106920-2021-06-22","title":"1.0.6920 - 2021-06-22","text":""},{"location":"changelog-old/#fixed_145","title":"Fixed","text":"<ul> <li>Fixes multiple inconsistencies in mii services.</li> </ul>"},{"location":"changelog-old/#106919-2021-06-23","title":"1.0.6919 - 2021-06-23","text":""},{"location":"changelog-old/#changed_57","title":"Changed:","text":"<ul> <li>Kernel: Implement SVC MapTransferMemory and UnmapTransferMemory.</li> </ul>"},{"location":"changelog-old/#106918-2021-06-22","title":"1.0.6918 - 2021-06-22","text":""},{"location":"changelog-old/#fixed_146","title":"Fixed","text":"<ul> <li>Remove size checks for IPC buffer type 0x21/0x22.</li> <li>Fixes a bsd service issue with homebrews and some games included Knockout City.</li> </ul>"},{"location":"changelog-old/#106917-2021-06-21","title":"1.0.6917 - 2021-06-21","text":""},{"location":"changelog-old/#fixed_147","title":"Fixed","text":"<ul> <li>Fix a bug that caused one of the account service functions to return an invalid user id if more than one user profile was configured on the emulator.</li> <li>Fixes a softlock on Shantae Half-Genie Hero title screen if more than one user profile was present. Might fix similar user profile related issues on other games.</li> </ul>"},{"location":"changelog-old/#106916-2021-06-21","title":"1.0.6916 - 2021-06-21","text":""},{"location":"changelog-old/#changed_58","title":"Changed","text":"<ul> <li>Implement all known AppletMessage values. The new values are not used right now, but might be in the future.</li> <li>No expected changes.</li> </ul>"},{"location":"changelog-old/#106915-2021-06-20","title":"1.0.6915 - 2021-06-20","text":""},{"location":"changelog-old/#fixed_148","title":"Fixed","text":"<ul> <li>When the (separate) sampler bindless handle comes from the offset 0 of the constant buffer, it was being ignored which caused the wrong sampler to be used. This correct the bug by adding 1 to the offset on the shader translator, and then subtracting 1 on the GPU emulator to ensure that it is never 0 if a separate bindless sampler is used.</li> <li>Fixes rendering issues in Final Fantasy XII The Zodiac Age.</li> </ul>"},{"location":"changelog-old/#106914-2021-06-19","title":"1.0.6914 - 2021-06-19","text":""},{"location":"changelog-old/#changed_59","title":"Changed","text":"<ul> <li>Stub hid service call: IsFirmwareUpdateAvailableForSixAxisSensor needed by Game Builder Garage (Ignore missing services isn't required anymore).</li> <li>Stub irs service call: CheckFirmwareVersion needed by Nintendo Labo Toy-Con 03: Vehicle Kit.</li> </ul>"},{"location":"changelog-old/#106913-2021-06-16","title":"1.0.6913 - 2021-06-16","text":""},{"location":"changelog-old/#changed_60","title":"Changed","text":"<ul> <li>Loading the default controller profile once again sets the controller type to Pro Controller. When Miria released, the function was changed to load Joycon Pair; this update reverts that change.</li> </ul>"},{"location":"changelog-old/#106912-2021-06-14","title":"1.0.6912 - 2021-06-14","text":""},{"location":"changelog-old/#changed_61","title":"Changed","text":"<ul> <li>Shader decoding is now ended when reaching a block that starts with an infinite loop.</li> <li>Fixes Dark Devotion hanging on boot at a plain white screen. The game now renders graphics, though they are unfortunately upside down.</li> </ul>"},{"location":"changelog-old/#106911-2021-06-14","title":"1.0.6911 - 2021-06-14","text":""},{"location":"changelog-old/#changed_62","title":"Changed","text":"<ul> <li>Moved touchscreen updates to the input project. Code refactoring only; no changes in emulator behavior.</li> </ul>"},{"location":"changelog-old/#106910-2021-06-10","title":"1.0.6910 - 2021-06-10","text":""},{"location":"changelog-old/#changed_63","title":"Changed","text":"<ul> <li>Increased the height of the settings window in the main GUI. Now all options are able to be viewed &amp; modified without any scrolling.</li> </ul>"},{"location":"changelog-old/#106909-2021-06-09","title":"1.0.6909 - 2021-06-09","text":""},{"location":"changelog-old/#fixed_149","title":"Fixed","text":"<ul> <li>Fixed a sampler leak on exit by making TextureBindingsManager disposable and calling the dispose method in the TextureManager.</li> </ul>"},{"location":"changelog-old/#106908-2021-06-09","title":"1.0.6908 - 2021-06-09","text":""},{"location":"changelog-old/#fixed_150","title":"Fixed","text":"<ul> <li>The GPU subchannel state is no longer cleared on BindChannel.</li> <li>Fixes a long-standing regression introduced by the addition of GPU syncpoints (PR 980) that was causing a crash on New Super Lucky's Tale.</li> </ul>"},{"location":"changelog-old/#106907-2021-06-09","title":"1.0.6907 - 2021-06-09","text":""},{"location":"changelog-old/#changed_64","title":"Changed","text":"<ul> <li>Added support for bindless textures with separate constant buffers for texture and sampler.</li> <li>Fixes Final Fantasy XII black screen on boot. The game is now playable though not 100% perfect.</li> </ul>"},{"location":"changelog-old/#106906-2021-06-02","title":"1.0.6906 - 2021-06-02","text":""},{"location":"changelog-old/#changed_65","title":"Changed","text":"<ul> <li>Updated README.MD with latest motion/audio/SDL2 information as well as current game compatibility statistics.</li> </ul>"},{"location":"changelog-old/#106905-2021-06-02","title":"1.0.6905 - 2021-06-02","text":""},{"location":"changelog-old/#fixed_151","title":"Fixed","text":"<ul> <li>Fixed a shader bug with mixed PBK and SSY addresses on the stack.</li> <li>Fixes pink sky on Dead or Alive Xtreme 3.</li> </ul>"},{"location":"changelog-old/#106904-2021-06-02","title":"1.0.6904 - 2021-06-02","text":""},{"location":"changelog-old/#fixed_152","title":"Fixed","text":"<ul> <li>Resolved a bug involving texture blit off-by-one errors that caused the destination textures to have a black border.</li> <li>Fixes overly bright lighting on Fast RMX.</li> <li>Fixes incorrect Mii character face rendering on Mario Kart 8 Deluxe.</li> <li>Fixes a blue or transparent bar appearing at the top of the screen in Kirby Star Allies with resolution scaling enabled.</li> </ul>"},{"location":"changelog-old/#106903-2021-06-02","title":"1.0.6903 - 2021-06-02","text":""},{"location":"changelog-old/#changed_66","title":"Changed","text":"<p>Oops! Looks like quite a few of you are still using Dinput controllers.  - Reverted the specific change that fixed the rare emulator hang on launch issue for now while we look into alternative fixes.   - Fixes Dinput controllers not being recognized by the emulator.</p>"},{"location":"changelog-old/#106902-2021-06-02","title":"1.0.6902 - 2021-06-02","text":""},{"location":"changelog-old/#changed_67","title":"Changed","text":"<ul> <li>Updated SDL2-CS.</li> <li>Fixes motion controls not working in Linux.</li> <li>Fixes a rare situation where the emulator could hang on launch for an undetermined period of time.</li> </ul>"},{"location":"changelog-old/#106901-2021-06-02","title":"1.0.6901 - 2021-06-02","text":""},{"location":"changelog-old/#changed_68","title":"Changed","text":"<ul> <li>Now uses quads on OpenGL hosts when supported.</li> <li>Improves OpenGL performance in Xenoblade Chronicles DE/2, Fast RMX, and potentially other games.</li> </ul>"},{"location":"changelog-old/#106900-2021-06-01","title":"1.0.6900 - 2021-06-01","text":""},{"location":"changelog-old/#changed_69","title":"Changed","text":"<ul> <li>Changed the clear alpha channel to be applied on the bound framebuffer instead of clearing the alpha channel by its handle.</li> <li>Fixes the infamous \"black screen\" bug occurring on AMD GPUs since driver 21.4.1.</li> </ul>"},{"location":"changelog-old/#106899-2021-05-31","title":"1.0.6899 - 2021-05-31","text":""},{"location":"changelog-old/#fixed_153","title":"Fixed","text":"<ul> <li>Fixed a bug in the shader translator where it would try to normalize image load/store colors.</li> <li>Resolves a crash while loading a race in MotoGP 21. This title now reaches full gameplay but still suffers from graphical corruption.</li> </ul>"},{"location":"changelog-old/#106898-2021-05-30","title":"1.0.6898 - 2021-05-30","text":""},{"location":"changelog-old/#fixed_154","title":"Fixed","text":"<ul> <li>Fixed a logging regression where an incorrect function name would be included in the trace if the function had its name stripped.</li> </ul>"},{"location":"changelog-old/#106897-2021-05-30","title":"1.0.6897 - 2021-05-30","text":""},{"location":"changelog-old/#fixed_155","title":"Fixed","text":"<ul> <li>Fixed an inverted low/high mask value on GetThreadCoreMask32 syscall.</li> <li>Allows Game Tengoku CruisinMix Special to boot further.</li> </ul>"},{"location":"changelog-old/#106896-2021-05-29","title":"1.0.6896 - 2021-05-29","text":""},{"location":"changelog-old/#changed_70","title":"Changed","text":"<ul> <li>Implemented a multi-level function table.</li> <li>Greatly improves performance in ACA NEOGEO, SEGA AGES, Arcade Archives, and some NES/SNES Online games. FPS increases of up to 65% were observed during testing. Note that this will really only impact those whose systems were unable to reach the game's intended FPS before, as disabling vsync in these games will unfavorably alter the game speed if FPS rises past what was intended by the game developer.</li> <li>Improves overall JIT performance to a small degree, with minor reductions in boot time and increases in game frame rates (~5% on average where improvements are observed).</li> <li>May improve performance in games that previously had inexplicably low frame rates.</li> </ul>"},{"location":"changelog-old/#106895-2021-05-25","title":"1.0.6895 - 2021-05-25","text":""},{"location":"changelog-old/#changed_71","title":"Changed","text":"<ul> <li>Implemented all changes made in audren REV9 on 12.0.0.</li> </ul>"},{"location":"changelog-old/#106894-2021-05-24","title":"1.0.6894 - 2021-05-24","text":""},{"location":"changelog-old/#changed_72","title":"Changed","text":"<ul> <li>POWER Update: implemented a new host mapped memory manager for major performance improvements across the board. Fastest option is now set by default.</li> <li>Increases FPS by significant margins in most games/scenarios (except where emulated GPU-limited).</li> <li>Reduces PPTC compilation times by roughly half.</li> <li>Reduces boot time of most games by 30-50%.</li> <li>Reduces size of JIT cache.<ul> <li>Resolves \"JIT Cache Exhausted\" crashes.</li> </ul> </li> <li>Resolves \"AcquireSemaphore\" crashes on all Ryzen CPUs known to exhibit the issue.</li> <li>Resolves slow character movement speed in the monastery in Fire Emblem: Three Houses.</li> <li>Noticeably improves/shortens \"spool-up\" period when first playing a game (note: does not negate the need to compile shaders).</li> </ul>"},{"location":"changelog-old/#106893-2021-05-24","title":"1.0.6893 - 2021-05-24","text":""},{"location":"changelog-old/#changed_73","title":"Changed","text":"<ul> <li>Improved accuracy of reciprocal step ARM CPU instructions.</li> <li>Fixes a bug where character clothing would be incorrectly warped in Rune Factory 5.</li> </ul>"},{"location":"changelog-old/#106892-2021-05-24","title":"1.0.6892 - 2021-05-24","text":""},{"location":"changelog-old/#fixed_156","title":"Fixed","text":"<ul> <li>Fixed incorrect default value for constant vertex attributes.</li> <li>Improves rendering in some SD GUNDAM G GENERATION CROSS RAYS games.</li> <li>Fixed dumping of shaders containing bindless texture references.</li> <li>Fixes a regression introduced in 1.0.6802 (PR 2145). This is a developer feature, no expected changes to emulator behavior.</li> </ul>"},{"location":"changelog-old/#106891-2021-05-24","title":"1.0.6891 - 2021-05-24","text":""},{"location":"changelog-old/#changed_74","title":"Changed","text":"<ul> <li>Improved texture selection by comparing the aligned size of the largest mip level when considering sampler resize.</li> <li>Fixes graphical errors and crashes in various Unity games that use render-to-texture.</li> <li>Fixes an internal CLR error in Rune Factory 5.</li> <li>Potentially improves infrequent graphical errors and crashes in Mario Kart 8 Deluxe.</li> </ul>"},{"location":"changelog-old/#106890-2021-05-21","title":"1.0.6890 - 2021-05-21","text":""},{"location":"changelog-old/#changed_75","title":"Changed","text":"<ul> <li>Changed to a new approach for out of bounds blit.</li> <li>Fixes invalid memory region crashes on Rune Factory 5 and Shantae.</li> </ul>"},{"location":"changelog-old/#106889-2021-05-21","title":"1.0.6889 - 2021-05-21","text":""},{"location":"changelog-old/#added_57","title":"Added","text":"<ul> <li>Implemented another Depth32F texture variant.</li> <li>Along with the previous merge and the one following, greatly improves rendering on Yo-kai Watch 1.</li> </ul>"},{"location":"changelog-old/#106888-2021-05-21","title":"1.0.6888 - 2021-05-21","text":""},{"location":"changelog-old/#fixed_157","title":"Fixed","text":"<ul> <li>Fixed non-independent blend state entries being missing from the state table.</li> <li>Fixes broken blend on some OpenGL games such as Code of Princess EX.</li> </ul>"},{"location":"changelog-old/#106887-2021-05-20","title":"1.0.6887 - 2021-05-20","text":""},{"location":"changelog-old/#changed_76","title":"Changed","text":"<ul> <li>Extended information printed when the guest crashes or breaks execution. This may be useful for troubleshooting purposes.</li> </ul>"},{"location":"changelog-old/#106886-2021-05-20","title":"1.0.6886 - 2021-05-20","text":""},{"location":"changelog-old/#added_58","title":"Added","text":"<ul> <li>Implemented a new keyboard backend to the Ryujinx.Input.SDL2 project. This is currently unused.</li> </ul>"},{"location":"changelog-old/#106885-2021-05-20","title":"1.0.6885 - 2021-05-20","text":""},{"location":"changelog-old/#fixed_158","title":"Fixed","text":"<ul> <li>Fixed a regression that had broken resolution scaling in the Hyrule Warriors/Fire Emblem Warriors series of games.</li> </ul>"},{"location":"changelog-old/#106884-2021-05-20","title":"1.0.6884 - 2021-05-20","text":""},{"location":"changelog-old/#fixed_159","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.6878 (PR 2290) where buffer and texture information from one vertex shader was not propagated to the other after they were merged.</li> </ul>"},{"location":"changelog-old/#106883-2021-05-20","title":"1.0.6883 - 2021-05-20","text":""},{"location":"changelog-old/#fixed_160","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.6878 (PR 2290) where the constant buffer array size would be incorrect on games that use non-constant constant buffer slots.</li> </ul>"},{"location":"changelog-old/#106882-2021-05-20","title":"1.0.6882 - 2021-05-20","text":""},{"location":"changelog-old/#added_59","title":"Added","text":"<ul> <li>Adds a dynamic query in Linux to locate the installation of the ffmpeg root path.</li> <li>Fixes nvdec-related crashes on Linux distros that do not use /libs as the ffmpeg root path.</li> <li>Advises the user to install ffmpeg if it is not found.</li> </ul>"},{"location":"changelog-old/#106881-2021-05-20","title":"1.0.6881 - 2021-05-20","text":""},{"location":"changelog-old/#changed_77","title":"Changed","text":"<ul> <li>Assigned _backgroundContext before starting its working thread.</li> <li>Fixes a random chance for an embedded game to crash on launch.</li> </ul>"},{"location":"changelog-old/#106880-2021-05-20","title":"1.0.6880 - 2021-05-20","text":""},{"location":"changelog-old/#changed_78","title":"Changed","text":"<ul> <li>Minor optimization to CPU emulation code.</li> </ul>"},{"location":"changelog-old/#106879-2021-05-20","title":"1.0.6879 - 2021-05-20","text":""},{"location":"changelog-old/#added_60","title":"Added","text":"<ul> <li>Added VIC/ORR Vd.T, #imm fast paths.</li> </ul>"},{"location":"changelog-old/#106878-2021-05-19","title":"1.0.6878 - 2021-05-19","text":""},{"location":"changelog-old/#changed_79","title":"Changed","text":"<ul> <li>Refactored shader resource description creation and moved it out of the GLSL backend to the translator. No expected changes to emulator behavior.</li> </ul>"},{"location":"changelog-old/#106877-2021-05-19","title":"1.0.6877 - 2021-05-19","text":""},{"location":"changelog-old/#changed_80","title":"Changed","text":"<ul> <li>Shader recompilation/rebuilding triggered at boot-time (such as in the case of a driver upgrade of shader code change) is now multi-threaded.</li> <li>Reduces boot-time shader recompilation time by up to 75%.</li> </ul>"},{"location":"changelog-old/#106876-2021-05-19","title":"1.0.6876 - 2021-05-19","text":""},{"location":"changelog-old/#fixed_161","title":"Fixed","text":"<ul> <li>Fixed an issue with bindless textures when CbufSlot is not equal to the current TextureBufferIndex.</li> <li>Fixes random chance of screen color flickering in Super Mario Party.</li> </ul>"},{"location":"changelog-old/#106875-2021-05-16","title":"1.0.6875 - 2021-05-16","text":""},{"location":"changelog-old/#changed_81","title":"Changed","text":"<ul> <li>LocalVariable is now allowed to be assigned more than once.</li> <li>Allows flow controls such as loops and if-elses with LocalVariables participating in phi nodes.</li> </ul>"},{"location":"changelog-old/#106874-2021-05-16","title":"1.0.6874 - 2021-05-16","text":""},{"location":"changelog-old/#changed_82","title":"Changed","text":"<ul> <li>Moved the Windows Intel/AMD view format workaround out of the backend and replaced it with copy dependencies.</li> <li>Significantly improves FPS on Intel iGPUs and AMD GPUs in Windows. Please test share your results!</li> </ul>"},{"location":"changelog-old/#106873-2021-05-16","title":"1.0.6873 - 2021-05-16","text":""},{"location":"changelog-old/#changed_83","title":"Changed","text":"<ul> <li>Decoupled the Ryujinx configuration instance from all Ryujinx subprojects and moved directly to the Ryujinx project. No expected changes in emulator behavior.</li> </ul>"},{"location":"changelog-old/#106872-2021-05-14","title":"1.0.6872 - 2021-05-14","text":"<p>No changes.</p>"},{"location":"changelog-old/#106871-2021-05-13","title":"1.0.6871 - 2021-05-13","text":""},{"location":"changelog-old/#changed_84","title":"Changed","text":"<ul> <li>Miscellaneous x86 code generation optimizations.</li> <li>Has potential to increase performance, but there are no known examples of improved games currently.</li> </ul>"},{"location":"changelog-old/#106870-2021-05-13","title":"1.0.6870 - 2021-05-13","text":""},{"location":"changelog-old/#changed_85","title":"Changed","text":"<ul> <li>Implemented support for PPTC to stay enabled during runtime even if exeFS mods are activated.</li> </ul>"},{"location":"changelog-old/#106869-2021-05-11","title":"1.0.6869 - 2021-05-11","text":""},{"location":"changelog-old/#fixed_162","title":"Fixed","text":"<ul> <li>Fixed a race condition in SM initialization that could occur in rare situations when booting a game, causing it to crash.</li> </ul>"},{"location":"changelog-old/#106868-2021-05-11","title":"1.0.6868 - 2021-05-11","text":""},{"location":"changelog-old/#fixed_163","title":"Fixed","text":"<ul> <li>Fixed a specific core migration bug on the scheduler that could occur during context switching.</li> <li>There are no currently known triggers for this bug; as such, there are no expected changes to emulator behavior.</li> </ul>"},{"location":"changelog-old/#106867-2021-05-08","title":"1.0.6867 - 2021-05-08","text":""},{"location":"changelog-old/#fixed_164","title":"Fixed","text":"<ul> <li>Fixed a minor bug in GTK3 keyboard mapping.</li> </ul>"},{"location":"changelog-old/#106866-2021-05-07","title":"1.0.6866 - 2021-05-07","text":""},{"location":"changelog-old/#fixed_165","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.6860 (PR 2260) that caused embedded games (in game collections such as Psikyo Shooting Stars Bravo) to display a single color in the entire window instead of the intended graphics.</li> </ul>"},{"location":"changelog-old/#106865-2021-05-07","title":"1.0.6865 - 2021-05-07","text":""},{"location":"changelog-old/#fixed_166","title":"Fixed","text":"<ul> <li>Fixed the default value for GraphicsConfig.MaxAnisotropy. No expected changes in emulator operation.</li> </ul>"},{"location":"changelog-old/#106864-2021-05-05","title":"1.0.6864 - 2021-05-05","text":""},{"location":"changelog-old/#changed_86","title":"Changed","text":"<ul> <li>Corrected a couple of issues regarding SM instances and TIPC.</li> <li>SM was previously instanced once and reused on all sessions. This could cause inconsistency on the service initialization. </li> <li>TIPC replies now match what is generated on original hardware.</li> </ul>"},{"location":"changelog-old/#106863-2021-05-05","title":"1.0.6863 - 2021-05-05","text":""},{"location":"changelog-old/#added_61","title":"Added","text":"<ul> <li>Implemented SDL2 audio backend.</li> <li>Resolves most audout-related audio quality issues that occur with either OpenAL or SoundIO.</li> <li>Considered safe to be used as the primary audio backend, but is not yet set as default; setting SDL2 as the default audio backend will happen in the future. Please test this new audio backend and report your results! Options &gt; Settings &gt; System tab &gt; Audio Backend dropdown.</li> </ul>"},{"location":"changelog-old/#106862-2021-05-05","title":"1.0.6862 - 2021-05-05","text":""},{"location":"changelog-old/#changed_87","title":"Changed","text":"<ul> <li>Redirected ffmpeg-related log output to mitigate unnecessary console/log activity.</li> </ul>"},{"location":"changelog-old/#106861-2021-05-05","title":"1.0.6861 - 2021-05-05","text":""},{"location":"changelog-old/#changed_88","title":"Changed","text":"<ul> <li>Cleaned up the nsd service and implemented/stubbed some associated service calls.</li> <li>GetSettingName is removed because of a bad previous implementation (doesn't seem to be used by any games).</li> <li>SetChangeEnvironmentIdentifierDisabled, WriteSaveDataToFsForTest, DeleteSaveDataOfFsForTest, and IsChangeEnvironmentIdentifierDisabled are stubbed.</li> <li>GetApplicationServerEnvironmentType is implemented.</li> </ul>"},{"location":"changelog-old/#106860-2021-05-03","title":"1.0.6860 - 2021-05-03","text":""},{"location":"changelog-old/#added_62","title":"Added","text":"<ul> <li>Implemented a base for a possible future Vulkan integration with the current GTK3 UI.</li> </ul>"},{"location":"changelog-old/#106859-2021-05-03","title":"1.0.6859 - 2021-05-03","text":""},{"location":"changelog-old/#fixed_167","title":"Fixed","text":"<ul> <li>Fixed an issue that caused Linux to be unable to use FFmpeg since 1.0.6857.</li> </ul>"},{"location":"changelog-old/#106858-2021-05-02","title":"1.0.6858 - 2021-05-02","text":""},{"location":"changelog-old/#changed_89","title":"Changed","text":"<ul> <li>Cleaned Discord Precense</li> <li>Removed hardcoded title list and special icons for them.</li> <li>Added a buttton to https://ryujinx.org/</li> <li>Updated to latest version.</li> </ul>"},{"location":"changelog-old/#106857-2021-05-02","title":"1.0.6857 - 2021-05-02","text":""},{"location":"changelog-old/#changed_90","title":"Changed","text":"<ul> <li>Updated to FFmpeg 4.4.0 </li> </ul>"},{"location":"changelog-old/#106856-2021-05-02","title":"1.0.6856 - 2021-05-02","text":""},{"location":"changelog-old/#changed_91","title":"Changed","text":"<ul> <li>Rewrited HID shared memory management</li> <li>This have no impacts on inputs.</li> </ul>"},{"location":"changelog-old/#106855-2021-05-01","title":"1.0.6855 - 2021-05-01","text":""},{"location":"changelog-old/#fixed_168","title":"Fixed","text":"<ul> <li>Fixed a bug that caused buffer memory modified shaders to not be flushed in certain cases.</li> <li>Fixes a bug in New Pok\u00e9mon Snap causing photos to not be identified.</li> <li>Fixes a regression in Monster Hunter Rise where insects were invisible.</li> </ul>"},{"location":"changelog-old/#106854-2021-04-30","title":"1.0.6854 - 2021-04-30","text":""},{"location":"changelog-old/#changed_92","title":"Changed","text":"<ul> <li>Changed logger to include certain values that were previously only written in the console.</li> </ul>"},{"location":"changelog-old/#106853-2021-04-30","title":"1.0.6853 - 2021-04-30","text":""},{"location":"changelog-old/#changed_93","title":"Changed","text":"<ul> <li>Increased the Amiibo internal scan delay from 50ms to 125ms.</li> <li>Fixes Amiibo scanning in Hyrule Warriors: Age of Calamity and Fire Emblem: Three Houses.</li> </ul>"},{"location":"changelog-old/#106852-2021-04-26","title":"1.0.6852 - 2021-04-26","text":""},{"location":"changelog-old/#fixed_169","title":"Fixed","text":"<ul> <li>Fixed a bug in GetClockSnapshot that was causing the steady clock timepoint to fail to be written.</li> <li>Resolves a soft-lock occurring in early splash screens on Shantae. The game is now playable.</li> </ul>"},{"location":"changelog-old/#106851-2021-04-26","title":"1.0.6851 - 2021-04-26","text":""},{"location":"changelog-old/#fixed_170","title":"Fixed","text":"<ul> <li>Fixed unsolicited input (buttons pressing themselves/analog directions without user input) in all games known to exhibit the issue, including Mega Man 11, Crash Bandicoot 4, Black Legend, Balan Wonderworld, ADVERSE, Effie, and many other UE4 games.</li> </ul>"},{"location":"changelog-old/#106850-2021-04-24","title":"1.0.6850 - 2021-04-24","text":""},{"location":"changelog-old/#fixed_171","title":"Fixed","text":"<ul> <li>Fixed a typo in NpadIdType (changed uint to int).</li> <li>Resolved a regression causing a crash on launch in Bayonetta 2 and possibly other games with similar HID calls.</li> </ul>"},{"location":"changelog-old/#106849-2021-04-24","title":"1.0.6849 - 2021-04-24","text":""},{"location":"changelog-old/#fixed_172","title":"Fixed","text":"<ul> <li>Fixed IsRegionInUse check on NV memory allocator. This was a non-fatal error calling the AllocSpace ioctl on a few games.</li> </ul>"},{"location":"changelog-old/#106848-2021-04-24","title":"1.0.6848 - 2021-04-24","text":""},{"location":"changelog-old/#fixed_173","title":"Fixed","text":"<ul> <li>Cleaned up various incorrect types in code from 2018 across the Ryujinx.HLE project.</li> </ul>"},{"location":"changelog-old/#106847-2021-04-23","title":"1.0.6847 - 2021-04-23","text":""},{"location":"changelog-old/#added_63","title":"Added","text":"<ul> <li>Implemented custom user profile emulation.</li> <li>Simply click on Options &gt; Manage User Profiles.</li> <li>Profiles cannot be edited/managed while a game is running.</li> <li>The \"RyuPlayer\" profile is the default user which cannot be deleted, as it contains all of the original save files for your games. However, the name and picture can be changed.</li> <li>WARNING: Save data is specific to each user profile so if you delete a profile, the save data under that profile is also deleted!!</li> </ul> <p>(For a more in-depth explanation of how the feature works, see the original PR description here: https://github.com/ryujinx-mirror/ryujinx/pull/2227)</p>"},{"location":"changelog-old/#106846-2021-04-22","title":"1.0.6846 - 2021-04-22","text":""},{"location":"changelog-old/#changed_94","title":"Changed","text":"<ul> <li>Cleaned up the mm:u services, replacing previously unknown values with those that are now known.</li> </ul>"},{"location":"changelog-old/#106845-2021-04-20","title":"1.0.6845 - 2021-04-20","text":""},{"location":"changelog-old/#changed_95","title":"Changed","text":"<ul> <li>Keyboard input is no longer queried if a controller is not set/selected.</li> <li>Fixes a possible crash if raw keyboard input a.k.a. Direct Keyboard Access is enabled.</li> </ul>"},{"location":"changelog-old/#106844-2021-04-20","title":"1.0.6844 - 2021-04-20","text":""},{"location":"changelog-old/#changed_96","title":"Changed","text":"<ul> <li>Changed clip distances to only be enabled if they are actually written to on the vertex shader.</li> <li>Fixes flashing triangles, seemingly occurring only on Intel iGPUs, on games that use custom clip distances (most first party games). See before &amp; after screenshots below of Animal Crossing: New Horizons on an Intel iGPU: Before: https://i.imgur.com/KegGaAw.png After: https://i.imgur.com/mwZP4w5.png Try out your favorite first party games on Intel iGPUs and please report to us the new results!</li> </ul>"},{"location":"changelog-old/#106843-2021-04-18","title":"1.0.6843 - 2021-04-18","text":""},{"location":"changelog-old/#changed_97","title":"Changed","text":"<ul> <li>Miscellaneous CPU emulation optimization.</li> </ul>"},{"location":"changelog-old/#106842-2021-04-18","title":"1.0.6842 - 2021-04-18","text":""},{"location":"changelog-old/#fixed_174","title":"Fixed","text":"<ul> <li>Added a missing parentheses around low pass z computation, affecting low pass base gain on delay effect in mono.</li> <li>Fixes incorrect audio volume changes when going indoors in FEZ.</li> </ul>"},{"location":"changelog-old/#106841-2021-04-18","title":"1.0.6841 - 2021-04-18","text":""},{"location":"changelog-old/#changed_98","title":"Changed","text":"<ul> <li>Improved shader global memory to storage optimization pass.</li> <li>Reduced code size.<ul> <li>May improve compile times as a result.</li> </ul> </li> <li>Improved code execution speed (probably only matters for integrated/mobile GPUs).</li> <li>Reduced the number of bindings used (mitigates out of bindings compilation error on drivers with a low limit, like Intel iGPUs that only support 16 max).</li> <li>Better buffer management (no need to sync/write track unused buffers).</li> </ul>"},{"location":"changelog-old/#106840-2021-04-17","title":"1.0.6840 - 2021-04-17","text":""},{"location":"changelog-old/#changed_99","title":"Changed","text":"<ul> <li>Divdided up Intel HwCapabilities identification into IntelWindows and IntelUnix as the respective drivers present significant differences, and certain specific processing or workarounds should only be applied to one but not the other.</li> </ul>"},{"location":"changelog-old/#106839-2021-04-17","title":"1.0.6839 - 2021-04-17","text":""},{"location":"changelog-old/#changed_100","title":"Changed","text":"<ul> <li>Modified audren to handle out of bounds read on empty delay lines.</li> <li>Fixes a crash on launch occurring on FEZ. The game now boots properly.</li> </ul>"},{"location":"changelog-old/#106838-2021-04-17","title":"1.0.6838 - 2021-04-17","text":""},{"location":"changelog-old/#fixed_175","title":"Fixed","text":"<ul> <li>Fixed a bug in the Intel view copy workaround to take the texture target from the storage rather than the view, when using the storage handle for the copy.</li> </ul>"},{"location":"changelog-old/#106837-2021-04-17","title":"1.0.6837 - 2021-04-17","text":""},{"location":"changelog-old/#fixed_176","title":"Fixed","text":"<ul> <li>Fixed a controller applet related softlock occurring in Mario Kart 8 Deluxe while navigating multiplayer menus.</li> </ul>"},{"location":"changelog-old/#106836-2021-04-15","title":"1.0.6836 - 2021-04-15","text":""},{"location":"changelog-old/#changed_101","title":"Changed","text":"<ul> <li>Subtracted haptic and sensor initialization from the SDL2 implementation as they are not needed.</li> <li>Fixes an issue that could occur in certain Windows 10 environments with group policy set in a way that prevented the emulator from launching.</li> </ul>"},{"location":"changelog-old/#106835-2021-04-14","title":"1.0.6835 - 2021-04-14","text":""},{"location":"changelog-old/#added_64","title":"Added","text":"<ul> <li>Stubbed IApplicationFunctions ExtendSaveData</li> <li>Fixes a missing service crash in Minecraft (cartridge/retail version).</li> </ul>"},{"location":"changelog-old/#106834-2021-04-14","title":"1.0.6834 - 2021-04-14","text":""},{"location":"changelog-old/#changed_102","title":"Changed","text":"<ul> <li>Fixed a regression introduced on 1.0.6826 (PR 2186) regarding the IManage Resolve/ResolveEx calls.</li> <li>Fixes crashes in The Savior's Gang, 1971 Project Helios, Chess Ultra, and NBA 2K Playgrounds 2.</li> <li>Stubbed ISslContext GetConnectionCount.</li> <li>Resolves missing service crashes in Monopoly, Legendary Fishing, and Quiplash 2.</li> </ul>"},{"location":"changelog-old/#106833-2021-04-14","title":"1.0.6833 - 2021-04-14","text":""},{"location":"changelog-old/#changed_103","title":"Changed","text":"<ul> <li>Miria has arrived! As a preparation for the upcoming new UI and for Vulkan, this update removes OpenTK 3 dependency entirely.</li> <li>Switched to OpenTK 4 for OpenAL implementation and mark OpenAL implementation as obsolete.</li> <li>Switched to OpenTK 4 for the Ryujinx.Graphics.OpenGL project.</li> <li>The emulator now uses SPB for context creation and manipulations instead of OpenTK 3.</li> <li>Currently only WGL and GLX backend are supported. (no regressions compared to old implementation)</li> <li>Switched to SDL2 for controller input.</li> <li>Controllers can now be hot-plugged without any constraints. No need to click any \"refresh\" buttons.</li> <li>Motion controls now work on supported controllers without the need of external tools. (Legacy Cemuhook integration is still present if desired.)</li> <li>DS4, DS5, Pro Controller and Single Joycons are natively supported. (Joycon pairs are not yet natively supported and outside the scope of this PR; Cemuhook integration can be used for joycon pairs in the meantime.)</li> <li>Rumble API is exposed while still not in use for now (outside the scope of this PR).</li> <li>Switched to GTK3 for keyboard input.</li> <li>Individual keyboard support was removed (meaning there is no list of keyboards to choose from anymore; only \"All Keyboards\" is shown as an option).</li> </ul>"},{"location":"changelog-old/#106832-2021-04-13","title":"1.0.6832 - 2021-04-13","text":""},{"location":"changelog-old/#changed_104","title":"Changed","text":"<ul> <li>Applied lossless image compression to various image resources within the GUI, saving a whopping 69KB.</li> </ul>"},{"location":"changelog-old/#106831-2021-04-13","title":"1.0.6831 - 2021-04-13","text":""},{"location":"changelog-old/#added_65","title":"Added","text":"<ul> <li>Added initial support for 12.x IPC system.</li> <li>Also adds support for the new SM commands ids available on TIPC.</li> </ul>"},{"location":"changelog-old/#106830-2021-04-13","title":"1.0.6830 - 2021-04-13","text":""},{"location":"changelog-old/#changed_105","title":"Changed","text":"<ul> <li>Added several new items to logging, for troubleshooting and log analysis purposes.</li> <li>Now logs hotkey and UI menu item changes while a game is running.</li> </ul>"},{"location":"changelog-old/#106829-2021-04-12","title":"1.0.6829 - 2021-04-12","text":""},{"location":"changelog-old/#changed_106","title":"Changed","text":"<ul> <li>Miscellaneous PPTC optimizations to handle games with large exeFS.</li> <li>PPTC can now handle any size of JitCache;</li> <li>Allows to avoid memory peaks due to the resizing of the internal MemoryStream array (and its possible waste), its allocation in the LOH region of the heap; and allows to reduce the size of the .cache file if many translation invalidations are involved (LowCq -&gt; HighCq over several runs).</li> <li>Added an outer header structure and added the hashes for both this new structure and the existing \"inner\" header structure;</li> <li>Hashes are now handled on a per-section basis and no longer for the entire uncompressed stream.</li> <li>In games with a large exeFS, this \"resolves System.IO.IOException: Stream was too long.\" and \"Insufficient memory to continue the execution of the program.\" error messages. Does not resolve \"JIT Cache exhausted\" error. This will be resolved in a future PR.</li> </ul>"},{"location":"changelog-old/#106828-2021-04-12","title":"1.0.6828 - 2021-04-12","text":""},{"location":"changelog-old/#added_66","title":"Added","text":"<ul> <li>Added an AccountManager class (based on AccountUtils class).</li> <li>Adds a \"default profile values\" which were the old hardcoded ones.</li> <li>The image profile is moved to the Account service folder.</li> <li>The hardcoded UserId for the savedata is now using the AccountManager last opened one.</li> <li>The DeviceId in Mii service is changed to the right value (checked by REd sys:set call).</li> <li>Miscellaneous cleanup.</li> <li>Lays some groundwork to be able to move forward with implementing Custom User Profiles.</li> </ul>"},{"location":"changelog-old/#106827-2021-04-12","title":"1.0.6827 - 2021-04-12","text":""},{"location":"changelog-old/#fixed_177","title":"Fixed","text":"<ul> <li>Fixed sub-image copies on Intel iGPUs in OpenGL.</li> <li>Resolves some glaring graphical bugs in games, on recent Intel iGPUs (those that support Open GL4.5 or higher), including Mario Kart 8 Deluxe and Captain Toad: Treasure Tracker.</li> <li>These changes only apply to Intel iGPUs.</li> </ul>"},{"location":"changelog-old/#106826-2021-04-12","title":"1.0.6826 - 2021-04-12","text":""},{"location":"changelog-old/#added_67","title":"Added","text":"<ul> <li>Implemented GetCurrentNetworkProfile and stubbed several ssl services.</li> <li>nifm IGeneralService GetCurrentNetworkProfile is implemented (fixes #643) and now blocked games boot further.</li> <li>nifm GetLocalInterface() helper and DnsSetting struct have been fixed to return the right values.</li> <li>ssl ISslService have been cleaned up.</li> <li>ssl ISslContext have been cleaned up, CreateConnection and ImportClientPki have been stubbed (fixes #1289).</li> <li>ssl ISslConnection is partially stubbed, which make some games playable, see the attached screenshots.</li> <li>nsd IManager Resolve and ResolveEx have been fixed using the right buffer type.</li> <li>Fixes missing service crashes for over 20 tested games. These can now proceed further in the boot process, and many are now playable.</li> </ul>"},{"location":"changelog-old/#106825-2021-04-12","title":"1.0.6825 - 2021-04-12","text":""},{"location":"changelog-old/#fixed_178","title":"Fixed","text":"<ul> <li>Fixed a bug in SurfaceFlinger when closing a layer, and refactored selection of the current layer being rendered.</li> <li>Star Wars: Republic Command and Shadow Gangs now proceed further in the boot process.</li> </ul>"},{"location":"changelog-old/#106824-2021-04-08","title":"1.0.6824 - 2021-04-08","text":""},{"location":"changelog-old/#changed_107","title":"Changed","text":"<ul> <li>Auto-updating has been once again enabled in portable mode configurations.</li> <li>NOTE: if you are currently using portable mode, please download this update manually from the link above or from https://ryujinx.org/download</li> </ul>"},{"location":"changelog-old/#106823-2021-04-07","title":"1.0.6823 - 2021-04-07","text":""},{"location":"changelog-old/#fixed_179","title":"Fixed","text":"<ul> <li>Fixed PermissionLevel names within the FriendService.</li> </ul>"},{"location":"changelog-old/#106822-2021-04-07","title":"1.0.6822 - 2021-04-07","text":""},{"location":"changelog-old/#fixed_180","title":"Fixed","text":"<ul> <li>Fixed a bug with the CRC32 intrinsic where the JIT was not forcing a copy when a constant value is used as an input.</li> <li>Resolves an issue where the emulator could crash while rebuilding PPTC during a boot of Monster Hunter Rise.</li> </ul>"},{"location":"changelog-old/#106821-2021-04-07","title":"1.0.6821 - 2021-04-07","text":""},{"location":"changelog-old/#added_68","title":"Added","text":"<ul> <li>Added an option to manually trigger Github actions.</li> </ul>"},{"location":"changelog-old/#106820-2021-04-07","title":"1.0.6820 - 2021-04-07","text":""},{"location":"changelog-old/#changed_108","title":"Changed","text":"<ul> <li>Added a temporary fix for Windows nuget issues/fix git hashes for PRs.</li> </ul>"},{"location":"changelog-old/#106819-2021-04-04","title":"1.0.6819 - 2021-04-04","text":""},{"location":"changelog-old/#added_69","title":"Added","text":"<ul> <li>Exposes an option on the UI to increase the amount of the emulated Switch memory from 4GB to 6GB.</li> <li>Since there are no known retail Switch consoles with 6GB of RAM, this option has been placed under the Hacks section next to the \"Ignore Missing Services\" option.</li> </ul>"},{"location":"changelog-old/#106818-2021-04-03","title":"1.0.6818 - 2021-04-03","text":""},{"location":"changelog-old/#changed_109","title":"Changed","text":"<ul> <li>Debug builds posted by github-actions on pull requests are now hidden.</li> </ul>"},{"location":"changelog-old/#106817-2021-04-02","title":"1.0.6817 - 2021-04-02","text":""},{"location":"changelog-old/#changed_110","title":"Changed","text":"<ul> <li>No longer force flush commands on sync creation for NVIDIA GPUs as they don't seem to need it.</li> <li>Fixes a minor performance regression in Monster Hunter Rise and possibly other games.</li> </ul>"},{"location":"changelog-old/#106816-2021-04-02","title":"1.0.6816 - 2021-04-02","text":""},{"location":"changelog-old/#changed_111","title":"Changed","text":"<ul> <li>Miscellaneous code optimizations to improve StoreToContext emission.</li> <li>Reduces register pressure, code size and compile time a little bit.</li> </ul>"},{"location":"changelog-old/#106815-2021-04-02","title":"1.0.6815 - 2021-04-02","text":""},{"location":"changelog-old/#changed_112","title":"Changed","text":"<ul> <li>Updated README.MD to reflect new OpenGL requirements, game compatibility statistics, and mods/cheats support.</li> </ul>"},{"location":"changelog-old/#106814-2021-04-02","title":"1.0.6814 - 2021-04-02","text":""},{"location":"changelog-old/#changed_113","title":"Changed","text":"<ul> <li>Miscellaneous code optimizations to reduce allocation during SSA construction.</li> </ul>"},{"location":"changelog-old/#106813-2021-04-02","title":"1.0.6813 - 2021-04-02","text":""},{"location":"changelog-old/#changed_114","title":"Changed","text":"<ul> <li>Changed the Pro Controller image used in the controller setup UI for improved button clarity.</li> </ul>"},{"location":"changelog-old/#106812-2021-04-02","title":"1.0.6812 - 2021-04-02","text":""},{"location":"changelog-old/#changed_115","title":"Changed","text":"<ul> <li>Changed behavior of render targets in use to prevent them from falling out of the auto delete cache. This bug was discovered while developing Vulkan (would cause a crash if a freed texture was used).</li> <li>Cleaned up some ordering of related code for better readability.</li> </ul>"},{"location":"changelog-old/#106811-2021-04-02","title":"1.0.6811 - 2021-04-02","text":""},{"location":"changelog-old/#fixed_181","title":"Fixed","text":"<ul> <li>Updated the Tamper Machine module with the following fixes:</li> <li>Fixed a crash that could occur while applying runtime mods/cheats to an unpacked game.</li> <li>Fixed an inconsistency in sleep timings and adjusted the duration to more closely match Atmosphere's.</li> </ul>"},{"location":"changelog-old/#106810-2021-04-02","title":"1.0.6810 - 2021-04-02","text":""},{"location":"changelog-old/#added_70","title":"Added","text":"<ul> <li>Implemented shader HelperThreadNV/gl_HelperInvocation.</li> <li>Fixes flickering textures on Monster Hunter Rise.</li> <li>OpenGL requirements for the emulator have been raised to OpenGL 4.5 minimum (previously 4.4).</li> </ul>"},{"location":"changelog-old/#106809-2021-03-29","title":"1.0.6809 - 2021-03-29","text":""},{"location":"changelog-old/#changed_116","title":"Changed","text":"<ul> <li>Command flushes are now forced after creating a syncpoint.</li> <li>Alleviates \"sync object timeout\" errors on AMD and Intel GPUs.</li> </ul>"},{"location":"changelog-old/#106808-2021-03-29","title":"1.0.6808 - 2021-03-29","text":""},{"location":"changelog-old/#changed_117","title":"Changed","text":"<ul> <li>Modified the DNS blacklist to be case-insensitive.</li> </ul>"},{"location":"changelog-old/#106807-2021-03-29","title":"1.0.6807 - 2021-03-29","text":""},{"location":"changelog-old/#changed_118","title":"Changed","text":"<ul> <li>Optimized PrintRoSectionInfo code.</li> <li>Reduces game load time by a small amount. May not be noticeable in many cases.</li> </ul>"},{"location":"changelog-old/#106806-2021-03-27","title":"1.0.6806 - 2021-03-27","text":""},{"location":"changelog-old/#added_71","title":"Added","text":"<ul> <li>Stub ILibraryAppletAccessor RequestExit in AM service. </li> <li>Fix a softlock in Monster Hunter Rise when you press \"Private Policy\" at the beginning.</li> <li>Fix a softlock in Monster Hunter Generations Ultimate after a multiplayer session.</li> </ul>"},{"location":"changelog-old/#106805-2021-03-27","title":"1.0.6805 - 2021-03-27","text":""},{"location":"changelog-old/#fixed_182","title":"Fixed","text":"<ul> <li>Fix ZN flags set for shader instructions using RZ.CC destination.</li> <li>Fixed a bug on pixel shaders with calls where it would set the output pixel values before every return.</li> </ul>"},{"location":"changelog-old/#106804-2021-03-27","title":"1.0.6804 - 2021-03-27","text":""},{"location":"changelog-old/#changed_119","title":"Changed","text":"<ul> <li>Added credit to AmiiboAPI in the emulator's About window as well as in the README.MD file.</li> <li>Fixed an incorrect warning code in an am service. </li> </ul>"},{"location":"changelog-old/#106803-2021-03-27","title":"1.0.6803 - 2021-03-27","text":""},{"location":"changelog-old/#added_72","title":"Added","text":"<ul> <li>Implemented the TamperMachine module, which fully supports runtime mods &amp; all Atmosphere style cheats (except game pause/resume).</li> <li>The standalone Cheat Engine software is no longer needed.</li> <li>Cheats use the same folder as mods.</li> <li>See https://github.com/ryujinx-mirror/ryujinx/pull/1928 for usage details and links to cheat repos.</li> </ul>"},{"location":"changelog-old/#106802-2021-03-26","title":"1.0.6802 - 2021-03-26","text":""},{"location":"changelog-old/#changed_120","title":"Changed","text":"<ul> <li>Moved the bindless check stopgap from translation to decode phase, and disables cache-related processing early.</li> <li>Fixes Monster Hunter Rise 1.1.1's issue with Ryujinx's shader cache. You may now enable it while using this version of the game.</li> </ul>"},{"location":"changelog-old/#106801-2021-03-25","title":"1.0.6801 - 2021-03-25","text":""},{"location":"changelog-old/#added_73","title":"Added","text":"<ul> <li>Implemented SaveScreenShot calls:</li> <li>caps:u IAlbumApplicationService (32) SetShimLibraryVersion</li> <li>caps:c IAlbumControlService (33) SetShimLibraryVersion</li> <li>caps:su IScreenShotApplicationService (32) SetShimLibraryVersion</li> <li>caps:su IScreenShotApplicationService (203/205/210) SaveScreenShotEx0/SaveScreenShotEx1/SaveScreenShotEx2</li> <li>Enabled in-game screenshot functionality in Animal Crossing: New Horizons, and Monster Hunter Rise, using ImageSharp to save the raw screenshot data to a JPG file.</li> <li>There is currently a bug in Monster Hunter Rise that requires spamming the 'A' button in order for the screenshot function to work the first time. This is being worked on and will hopefully be fixed soon!</li> <li>To retrieve screenshots:<ol> <li>Click on File &gt; Open Ryujinx Folder.</li> <li>Drill down to the sdcard -&gt; Nintendo -&gt; Album folder.</li> <li>Screenshots will be saved in dated subfolders e.g. %AppData%\\Ryujinx\\sdcard\\Nintendo\\Album\\2021\\03\\26\\2021032601020300-0123456789ABCDEF0123456789ABCDEF.jpg</li> </ol> </li> </ul>"},{"location":"changelog-old/#106800-2021-03-25","title":"1.0.6800 - 2021-03-25","text":""},{"location":"changelog-old/#added_74","title":"Added","text":"<ul> <li>Implemented CPU instructions: Sqdmulh_Ve &amp; Sqrdmulh_Ve Inst.s with tests.</li> <li>Fixes missing opcode crash on Monster Hunter Rise.</li> </ul>"},{"location":"changelog-old/#106799-2021-03-25","title":"1.0.6799 - 2021-03-25","text":""},{"location":"changelog-old/#added_75","title":"Added","text":"<ul> <li>Implemented SetRequestExitToLibraryAppletAtExecuteNextProgramEnabled and added a placeholder for the ectx services.</li> <li>Fixes a missing service crash on CARRION, The Witch and The 66 Mushrooms, Pixel Game Maker Series Werewolf Princess Kaguya, Monster Hunter Rise v1.1.1, and any other/future game created with Nintendo SDK 11.x.</li> </ul>"},{"location":"changelog-old/#106798-2021-03-24","title":"1.0.6798 - 2021-03-24","text":""},{"location":"changelog-old/#changed_121","title":"Changed","text":"<ul> <li>Cleaned up sfdnsres service implementation and added several related services:</li> <li>Implemented GetAddrInfoRequest. Partially implemented GetHostByNameRequestWithOptions, GetHostByAddrRequestWithOptions and GetAddrInfoRequestWithOptions.<ul> <li>Fixes missing service crashes on over 100 tested games. Many games that could not boot before are now playable; some cannot go in-game if designed to rely on a connection to the internet (which is blocked).</li> </ul> </li> <li>Added a DNS blacklist to prevent games from reaching Nintendo online services.</li> <li>Reduces code differences between master and the LDN build.</li> </ul>"},{"location":"changelog-old/#106797-2021-03-22","title":"1.0.6797 - 2021-03-22","text":""},{"location":"changelog-old/#changed_122","title":"Changed","text":"<ul> <li>Optimized the operation of &amp; code for the GUI progress reporting (PPTC &amp; Shader Cache loading bars).</li> <li>Fixes an issue that could cause a string of GTK-related code warnings to pop-up in the console upon opening the emulator.</li> </ul>"},{"location":"changelog-old/#106795106796-2021-03-20","title":"1.0.6795/1.0.6796 - 2021-03-20","text":""},{"location":"changelog-old/#changed_123","title":"Changed","text":"<ul> <li>Adjusted some CI build configurations.</li> </ul>"},{"location":"changelog-old/#106794-2021-03-19","title":"1.0.6794 - 2021-03-19","text":""},{"location":"changelog-old/#changed_124","title":"Changed","text":"<ul> <li>The shader cache now detects and avoids caching shaders that use bindless textures.</li> <li>Prevents corruption of the shader cache that could cause a crash on launch in games that have bindless textures (mostly Unreal Engine 4 games).</li> <li>This is a temporary stopgap solution to resolve shader cache issues until proper bindless support is implemented.</li> </ul>"},{"location":"changelog-old/#106793-2021-03-18","title":"1.0.6793 - 2021-03-18","text":""},{"location":"changelog-old/#fixed_183","title":"Fixed","text":"<ul> <li>Improved linear texture compatibility rules.</li> <li>Resolves an issue where small or width-aligned (rather than byte aligned) textures would fail to create a view of existing data. Creates a copy dependency, as size change may be risky. View layout compatibility is now determined by the stride shifted by the level, rather than a stride caculated from the level's width. Linear textures are considered copy compatible when they have matching stride.<ul> <li>Fixes missing lens flare in Mario Kart 8 Deluxe and Splatoon 2.</li> <li>Fixes an issue causing Cross Code to boot to a black screen.</li> </ul> </li> </ul>"},{"location":"changelog-old/#106792-2021-03-18","title":"1.0.6792 - 2021-03-18","text":""},{"location":"changelog-old/#changed_125","title":"Changed","text":"<ul> <li>Removed the IIpcService.cs interface references as it is no longer needed or used.</li> </ul>"},{"location":"changelog-old/#106791-2021-03-18","title":"1.0.6791 - 2021-03-18","text":""},{"location":"changelog-old/#added_76","title":"Added","text":"<ul> <li>Added more items to standard logs for troubleshooting purposes.</li> <li>Now logs Docked/Handheld state/toggling, selected audio backend, and Vsync status/toggling.</li> </ul>"},{"location":"changelog-old/#106790-2021-03-18","title":"1.0.6790 - 2021-03-18","text":""},{"location":"changelog-old/#added_77","title":"Added","text":"<ul> <li>Implemented ApplicationErrorArg to the Error Applet.</li> <li>This was already implemented in the LDN build and as such has already undergone sufficient testing.</li> <li>Reduces code differences between the LDN build and master.</li> </ul>"},{"location":"changelog-old/#106789-2021-03-18","title":"1.0.6789 - 2021-03-18","text":""},{"location":"changelog-old/#changed_126","title":"Changed","text":"<ul> <li>Reworded some pop-up dialog boxes for better clarity of the messages to the end user. No emulator functionality changes.</li> </ul>"},{"location":"changelog-old/#106788-2021-03-18","title":"1.0.6788 - 2021-03-18","text":""},{"location":"changelog-old/#added_78","title":"Added","text":"<ul> <li>Added Amiibo scan emulation of all Amiibos.</li> <li>Uses a self-hosted fork of the AmiiboAPI RESTful API. No need to scan any bin files!</li> <li>Amiibo can be trained in Super Smash Bros. To scan an Amiibo: 1. Go to the Amiibo-specific scanning location or in-game menu option in a supported game. 2. Click on the Ryujinx Actions menu header &gt; Scan an Amiibo. That's it!</li> </ul>"},{"location":"changelog-old/#106787-2021-03-16","title":"1.0.6787 - 2021-03-16","text":""},{"location":"changelog-old/#changed_127","title":"Changed","text":"<ul> <li>Improved the grammar in a code comment. No emulator functionality changes.</li> </ul>"},{"location":"changelog-old/#106786-2021-03-15","title":"1.0.6786 - 2021-03-15","text":""},{"location":"changelog-old/#changed_128","title":"Changed","text":"<ul> <li>Improved portable mode operation:</li> <li>Implemented an auto-enabling of portable mode if the user places a subfolder named \"portable\" beneath the Ryujinx program folder. If detected, Ryujinx will automatically use it as the default location for all system files (keys/PPTC/shaders etc.).<ul> <li>Using this method, the Ryujinx program folder is now fully able to be moved around at will without needing to use any special shortcuts or command line parameters, and will still retain portable functionality. Thanks to a previous enhancement to the auto-update function, the \"portable\" subfolder will be preserved during auto-update processes.</li> </ul> </li> </ul>"},{"location":"changelog-old/#106785-2021-03-14","title":"1.0.6785 - 2021-03-14","text":""},{"location":"changelog-old/#fixed_184","title":"Fixed","text":"<ul> <li>Fixed a typo in a debug assert message within the OpenAL implementation details.</li> </ul>"},{"location":"changelog-old/#106784-2021-03-14","title":"1.0.6784 - 2021-03-14","text":""},{"location":"changelog-old/#changed_129","title":"Changed","text":"<ul> <li>The active audio device is now reported as a TV, rather than internal speakers.</li> <li>Fixes noticeably poor audio quality in Pok\u00e9mon Sword and Shield, and potentially other games.</li> <li>May also enable 5.1 audio output on games where it was not functioning properly before.</li> </ul>"},{"location":"changelog-old/#106783-2021-03-13","title":"1.0.6783 - 2021-03-13","text":""},{"location":"changelog-old/#changed_130","title":"Changed","text":"<ul> <li>Implemented an override to the openal-soft audio output mode to fix a potential loss in audio quality while using the OpenAL backend if Windows audio output was in headphone mode.</li> </ul>"},{"location":"changelog-old/#106782-2021-03-13","title":"1.0.6782 - 2021-03-13","text":""},{"location":"changelog-old/#fixed_185","title":"Fixed","text":"<ul> <li>Fixed a Github actions warning. No emulator code changes.</li> </ul>"},{"location":"changelog-old/#106781-2021-03-10","title":"1.0.6781 - 2021-03-10","text":""},{"location":"changelog-old/#fixed_186","title":"Fixed","text":"<ul> <li>ILibraryAppletAccessor handles are now closed on disposal.</li> <li>Fixes an issue where if a game was calling the controller applet multiple times it could result in an \"out of handles\" crash.</li> </ul>"},{"location":"changelog-old/#106780-2021-03-09","title":"1.0.6780 - 2021-03-09","text":""},{"location":"changelog-old/#fixed_187","title":"Fixed","text":"<ul> <li>Fixed lineSize for LinearStrided to Linear conversion.</li> <li>Fixes a possible crash when width is greater than stride, which can happen due to alignment when copying textures with the copy buffer method. The only currently known game where this had occurred is Bravely Default II.</li> </ul>"},{"location":"changelog-old/#106779-2021-03-09","title":"1.0.6779 - 2021-03-09","text":""},{"location":"changelog-old/#changed_131","title":"Changed","text":"<ul> <li>Emulator now allows bindless handles to be found for image/texture instructions with predicates, when the assignment of the texture handle is within the same predicate.</li> <li>Fixes character shadows and black, soulless eyes on Bravely Default II.</li> <li>Fixes broken rendering in the Billiards and Shooting Gallery mini-games in 51 Worldwide Games.</li> <li>Probably fixes other broken rendering in games with bindless textures.</li> <li>Resolves conflicts between bindless textures and shader cache that previously required shader cache to be purged or disabled prior to each boot of certain affected games.<ul> <li>For affected games (such as Super Mario Party, 51 Worldwide Games, and many newer UE4 games) you may purge the shader cache once. Note: not all UE4 games are yet shader cache compatible.</li> </ul> </li> </ul>"},{"location":"changelog-old/#106778-2021-03-08","title":"1.0.6778 - 2021-03-08","text":""},{"location":"changelog-old/#fixed_188","title":"Fixed","text":"<ul> <li>Reworked Buffer Textures to create their buffers in the TextureManager, then bind them with the BufferManager later.</li> <li>Fixes an issue where a buffer texture's buffer could be invalidated after it is bound, but before use.</li> <li>Fixed width unpacking for large buffer textures. The width is now 32-bit rather than 16.</li> <li>Forced buffer textures to be rebound whenever any buffer is created, as using the handle id wasn't reliable, and the cost of binding isn't too high.</li> <li>The sum of these fixes vertex explosions and flickering animations in UE4 games. May affect games that use ImageStore, as now those textures are flushed on read/write.</li> <li>Resolves all known lighting issues in Fire Emblem: Three Houses.</li> </ul>"},{"location":"changelog-old/#106777-2021-03-07","title":"1.0.6777 - 2021-03-07","text":""},{"location":"changelog-old/#changed_132","title":"Changed","text":"<ul> <li>Modified the component mask to be flipped if the target is BGRA.</li> <li>On its own, should not result in any visible changes. Requires better bindless texture handling in order for visual improvements to be realized (such as fixing the shadows in Braveley Default II battles).</li> </ul>"},{"location":"changelog-old/#106776-2021-03-06","title":"1.0.6776 - 2021-03-06","text":""},{"location":"changelog-old/#changed_133","title":"Changed","text":"<ul> <li>Removed unused physical region memory tracking.</li> <li>Accelerates memory unmap/remap of virtual addresses that were once used for GPU resources, as well as reduce the cost of creating new tracking handles.<ul> <li>Reduces load times and non-shader related stutter in games that perform many unmap/remap operations such as Unreal Engine 4 games, among others.</li> </ul> </li> <li>Tracking regions/handles are now notified about an unmap operation before they are actually unmapped. Example of non-shader related stutter being improved by this update: Before https://cdn.discordapp.com/attachments/728011297857339422/817785701834817566/bd2_master.mp4</li> </ul> <p>After https://cdn.discordapp.com/attachments/728011297857339422/817785806307590144/bd2_pr.mp4</p>"},{"location":"changelog-old/#106775-2021-03-06","title":"1.0.6775 - 2021-03-06","text":""},{"location":"changelog-old/#changed_134","title":"Changed","text":"<ul> <li>Improved handling for unmapped GPU resources.</li> <li>Fixed a memory tracking bug that would set protection on empty PTEs (caused some buffer tracking crashes).</li> <li>When a texture's memory is (partially) unmapped, all pool references are forcibly removed and the texture must be rediscovered to draw with it. This will also force the texture discovery to always compare the texture's range for a match.</li> <li>RegionHandles now know if they are unmapped, and automatically unset their dirty flag when unmapped.</li> <li>Partial texture sync now loads only the region of textures that has been modified. Unmapped memory tracking handles cause dirty flags for a texture group handle to be ignored.</li> <li>Significantly improves emulator stability in newer UE4 games such as Bravely Default II.</li> <li>Fixes texture swaps in Bravely Default II. Note: this game still suffers from some graphical issues such as random vertex explosions, missing facial animations, and missing shadows.</li> <li>Improves emulator stability in Super Smash Bros. Ultimate.</li> <li>Fixes a regression causing a crash on launch in Contra: Rogue Corps. The game is once again playable.</li> </ul>"},{"location":"changelog-old/#106774-2021-03-04","title":"1.0.6774 - 2021-03-04","text":""},{"location":"changelog-old/#fixed_189","title":"Fixed","text":"<ul> <li>Fixed SetStandardSteadyClockInternalOffset permission check.</li> </ul>"},{"location":"changelog-old/#106773-2021-03-02","title":"1.0.6773 - 2021-03-02","text":""},{"location":"changelog-old/#changed_135","title":"Changed","text":"<ul> <li>Added loading bars at the bottom of the main window for pre-boot host shader cache building and PPTC translation operations to give users a visual indicator of boot progress. </li> <li>Removed associated console entries for both of these activities. Rebuilding shaders after an invalidating event will show both in the console and in the loading bar.</li> </ul>"},{"location":"changelog-old/#106772-2021-03-02","title":"1.0.6772 - 2021-03-02","text":""},{"location":"changelog-old/#added_79","title":"Added","text":"<ul> <li>Added fast paths in the audio renderer for AArch64 in all current fast paths.</li> </ul>"},{"location":"changelog-old/#106771-2021-03-02","title":"1.0.6771 - 2021-03-02","text":""},{"location":"changelog-old/#changed_136","title":"Changed","text":"<ul> <li>Improved efficiency of \"Hide Cursor on Idle\" operation to minimize overhead.</li> </ul>"},{"location":"changelog-old/#106770-2021-03-02","title":"1.0.6770 - 2021-03-02","text":""},{"location":"changelog-old/#changed_137","title":"Changed","text":"<p>GPU: - Fixed various issues with view compatibility, synchronization and creation. - Greatly improved texture view creation, keeping it within a strict storage-view hierarchy. (no view-views)   - Fixes a memory leak in Hyrule Warriors: Age of Calamity. Its VRAM usage is now rather low. :) - Reworked texture memory tracking to use a structure called a \"Texture Group\".   - There is one texture group for each storage texture, and views of that storage cover a subset of its \"Texture Group Handles\".     - A handle can represent one or more sub-image, which can be a mip level, array layer, cubemap face or 3d texture slice.     - This allows memory tracking to be shared between views, which is good as they also share internal data.   - This fixes issues where cpu texture invalidation would be missed or repeat sync when using multiple views of the same texture.   - Affected games:     - Fixed swapping textures in Xenoblade Chronicles: Definitive Edition, Xenoblade 2, MH:GU, potentially other games. - Introduces \"Copy Dependencies\" between handles of a texture group - indicating that their contents must be copied to another texture after modification.   - Allows copies between two textures that are view compatible, but have different storages.   - Replaces two old copy-on-create methods that were used for rendering to 3D and compressed textures.     - Also removes the workaround for keeping the copied data in these textures, which was to disable memory tracking for them entirely.     - This fixes colour ramps in a large number of first party games such as Super Mario Odyssey, where they would use the first rendered version of the 3D texture and look incorrect on future levels/rooms.   - Affected games:     - Fixes nearly all issues with cubemaps/lighting in Mario Kart 8 Deluxe.     - Fixes issues in Splatoon 2 where lighting would be unusually dark on the first load of the plaza, or on random stages.     - Fixes issues in Splatoon 2 where the time remaining or menu button text would be missing or incorrect.     - Fixes a lot of issues with textures in A Hat In Time (Unreal Engine 3)     - Fix issues with textures in Yoshi's Crafted World, and generally other Unreal Engine 4 games       - Bravely Default 2 requires its own set of gpu memory management fixes, coming some point soon.     - Fixes issues with DOF in Animal Crossing: New Horizons (as well as Copy Dependencies)     - Pikmin 3's intro video is now visible. Any possible issues with the Koppad have been thwarted.     - Probably a lot more.   - Should greatly decrease chance of GPU memory becoming corrupted by a texture flush. - Reworked size calculation for mipmapped 3D textures.   - Fixes fog, waves, water caustics, mario dirt overlay and much more in Super Mario Odyssey (also needs copy dependencies)</p> <p>For a screenshot collection, see https://github.com/ryujinx-mirror/ryujinx/pull/2001#issuecomment-782771370</p>"},{"location":"changelog-old/#106769-2021-03-01","title":"1.0.6769 - 2021-03-01","text":""},{"location":"changelog-old/#fixed_190","title":"Fixed","text":"<ul> <li>Fixed a regression in SignalMemoryTracking, introduced in 1.0.6763 (PR 2044), that could cause a black screen on the Monster Hunter Rise Demo.</li> </ul>"},{"location":"changelog-old/#106768-2021-02-28","title":"1.0.6768 - 2021-02-28","text":""},{"location":"changelog-old/#changed_138","title":"Changed","text":"<ul> <li>Revised SystemInfo:</li> <li>Extract CPU name from CPUID when supported.</li> <li>Linux: Robust parsing of procfs files</li> <li>Windows: Prefer native calls to WMI</li> <li>Remove unnecessary virtual specifiers</li> <li>Reduces application startup time by roughly 1 second.</li> </ul>"},{"location":"changelog-old/#106767-2021-02-28","title":"1.0.6767 - 2021-02-28","text":""},{"location":"changelog-old/#fixed_191","title":"Fixed","text":"<ul> <li>Modified the SoundIO session implementation to be lock-free.</li> <li>Fixes a rarely occurring random crash related to SoundIO introduced in 1.0.6732 (PR 2007).</li> <li>Mildly improves performance while using SoundIO.</li> </ul>"},{"location":"changelog-old/#106764-2021-02-28","title":"1.0.6764 - 2021-02-28","text":""},{"location":"changelog-old/#changed_139","title":"Changed","text":"<ul> <li>Switched ci to use Github artifacts for PRs. No emulator code changes.</li> </ul>"},{"location":"changelog-old/#106763-2021-02-28","title":"1.0.6763 - 2021-02-28","text":""},{"location":"changelog-old/#fixed_192","title":"Fixed","text":"<ul> <li>Fixed virtual address overflow near ulong limit.</li> <li>Creates an overflow-safe way of counting pages for affected functions and replaces the address-based loop in IsRangeMapped with a page-based loop.</li> </ul>"},{"location":"changelog-old/#106762-2021-02-28","title":"1.0.6762 - 2021-02-28","text":""},{"location":"changelog-old/#changed_140","title":"Changed","text":"<ul> <li>Updated wording in the auto-updater.</li> </ul>"},{"location":"changelog-old/#106761-2021-02-28","title":"1.0.6761 - 2021-02-28","text":""},{"location":"changelog-old/#changed_141","title":"Changed","text":"<ul> <li>Improved heuristic for showing the software keyboard.</li> <li>Fixes an inline keyboard soft-lock that occurred in God Eater 3 when changing the codename of your character.</li> </ul>"},{"location":"changelog-old/#106732-2021-02-25","title":"1.0.6732 - 2021-02-25","text":""},{"location":"changelog-old/#changed_142","title":"Changed","text":"<ul> <li>Haydn: Part 1 (based on reverse engineering of audio 11.0.0)</li> <li>Complete reimplementation of audout and audin.<ul> <li>Audin only has a dummy backend at this time.</li> </ul> </li> <li>Dramatically reduces overall CPU usage in both audio backends (50% CPU usage reduction on average with SoundIO backend - your mileage may vary). May improve FPS in situations where the CPU was previously maxed out.</li> <li>Audio Renderer now initializes its backend on demand instead of keeping two up all the time.</li> <li>All audio backend implementations are now in their own project.</li> <li>Ryujinx.Audio.Renderer was renamed to Ryujinx.Audio and as such appropriately refactored.</li> <li>Resolves a missing audin service crash in FUZE4.</li> <li>Resolves an audout-related crash on launch in OniNaki.</li> </ul>"},{"location":"changelog-old/#106714-2021-02-24","title":"1.0.6714 - 2021-02-24","text":""},{"location":"changelog-old/#fixed_193","title":"Fixed","text":"<ul> <li>Modified the auto-updater to preserve user execute permissions in Unix/Linux environments.</li> </ul>"},{"location":"changelog-old/#106690-2021-02-23","title":"1.0.6690 - 2021-02-23","text":""},{"location":"changelog-old/#changed_143","title":"Changed","text":"<ul> <li>Modified the auto-updater behavior to only purge Ryujinx files when installing a new update.</li> <li>Allows \"portable mode\" relative paths beneath the Ryujinx executable or other subfolders to be safely used as data directories. Make sure to wait until after this update is installed before changing your portable mode paths!</li> </ul>"},{"location":"changelog-old/#106687-2021-02-23","title":"1.0.6687 - 2021-02-23","text":""},{"location":"changelog-old/#fixed_194","title":"Fixed","text":"<ul> <li>Fixed the unwanted propagation of a relocatable constant in a specific case.</li> <li>Resolves a particular PPTC-related crash presenting a \"failed to encode constant\" error.</li> </ul>"},{"location":"changelog-old/#106682-2021-02-22","title":"1.0.6682 - 2021-02-22","text":""},{"location":"changelog-old/#changed_144","title":"Changed","text":"<ul> <li>Updated README.MD to include the latest game compatibility list counts.</li> </ul>"},{"location":"changelog-old/#106680-2021-02-22","title":"1.0.6680 - 2021-02-22","text":""},{"location":"changelog-old/#added_80","title":"Added","text":"<ul> <li>The auto-updater now uses multiple download threads, noticeably reducing download time in most cases.</li> </ul>"},{"location":"changelog-old/#106674-2021-02-22","title":"1.0.6674 - 2021-02-22","text":""},{"location":"changelog-old/#added_81","title":"Added","text":"<ul> <li>Implemented VCNT instruction.</li> <li>Fixes a missing opcode crash on Valkyria Chronicles, which now goes in-game.</li> </ul>"},{"location":"changelog-old/#106670-2021-02-21","title":"1.0.6670 - 2021-02-21","text":""},{"location":"changelog-old/#changed_145","title":"Changed","text":"<ul> <li>PPTC &amp; Pool Enhancements:</li> <li>Fixed memory instability / excessive memory spikes in some \"heavy\" games after loading/saving .cache files (fixes issue reported by users);</li> <li>Fixed limitation of loading/saving large .cache files (fixes issue reported by users);</li> <li>Reduced memory usage when loading/saving .cache files;</li> <li>Ptc.Load &amp; Ptc.Save now use XXHash128, which is 10 times faster than MD5;</li> <li>Fixed redundant saving / log spamming of .info files (fixes issue reported by users);</li> <li>Added a simple PtcFormatter library for deserialization/serialization, which does not require reflection, in use at PtcJumpTable and PtcProfiler; improves maintainability and simplicity / readability of affected code.</li> <li>Improved handling of Pools (Slim) for PPTC, allowing to halve the number of pools in use and thus reducing memory usage and slightly increasing the translation speed (you save ~1 second every 1k translations (for a CPU with 4+4 cores); so for 30k translations you save ~30 seconds (for the same CPU));</li> <li>BitMap pools are now limited during use and disposed after use;</li> <li>Pools Limiter is now configurable.</li> </ul>"},{"location":"changelog-old/#106667-2021-02-21","title":"1.0.6667 - 2021-02-21","text":""},{"location":"changelog-old/#changed_146","title":"Changed","text":"<ul> <li>Converted Copy operations into Fill operations instead of adding one in HybridAllocator.</li> <li>Reduces code size and register pressure.</li> </ul>"},{"location":"changelog-old/#106662-2021-02-21","title":"1.0.6662 - 2021-02-21","text":""},{"location":"changelog-old/#added_82","title":"Added","text":"<ul> <li>Implemented SetLcdBacklighOffEnabled service call.</li> <li>Fixes a missing service crash that could occur in Super Smash Bros. Ultimate vault menus.</li> </ul>"},{"location":"changelog-old/#106659-2021-02-20","title":"1.0.6659 - 2021-02-20","text":""},{"location":"changelog-old/#changed_147","title":"Changed","text":"<ul> <li>Miscellaneous input handling refactoring.</li> <li>Resolves myriad input mapping issues including phantom button presses while mapping DirectInput devices.</li> </ul>"},{"location":"changelog-old/#106635-2021-02-19","title":"1.0.6635 - 2021-02-19","text":""},{"location":"changelog-old/#changed_148","title":"Changed","text":"<ul> <li>Windows now recognizes Ryujinx as a DPI-aware application. Also fixes DPI scaling in other operating systems.</li> <li>Fixes menus and controller configuration screens being too cramped or cutting off parts of the window.</li> </ul>"},{"location":"changelog-old/#106634-2021-02-19","title":"1.0.6634 - 2021-02-19","text":""},{"location":"changelog-old/#changed_149","title":"Changed","text":"<ul> <li>Ryujinx now allows modding of AddOnContent (DLC) RomFS.</li> </ul>"},{"location":"changelog-old/#106631-2021-02-19","title":"1.0.6631 - 2021-02-19","text":""},{"location":"changelog-old/#changed_150","title":"Changed","text":"<ul> <li>Modified the \"Ignore Missing Services\" option to take effect immediately, even during emulation.</li> </ul>"},{"location":"changelog-old/#106630-2021-02-19","title":"1.0.6630 - 2021-02-19","text":""},{"location":"changelog-old/#fixed_195","title":"Fixed","text":"<ul> <li>Fixed another issue introduced in the IPC refactoring changes involving returned buffer sizes. These are now provided explicitly in GetClientId calls.</li> <li>Resolves a crash in Horizon Chase Turbo, Doom, and potentially other games with similar calls.</li> </ul>"},{"location":"changelog-old/#106604-2021-02-17","title":"1.0.6604 - 2021-02-17","text":""},{"location":"changelog-old/#fixed_196","title":"Fixed","text":"<ul> <li>Fixed an issue introduced in the IPC refactoring changes involving returned buffer sizes. These are now provided explicitly in GetFirmwareVersion calls.</li> <li>Resolves some crashes occurring in homebrew.</li> </ul>"},{"location":"changelog-old/#106587-2021-02-16","title":"1.0.6587 - 2021-02-16","text":""},{"location":"changelog-old/#fixed_197","title":"Fixed","text":"<ul> <li>Fixed a performance regression introduced in 1.0.6582 (PR 1987) involving memory tracking. The read/write flags had been inadvertently inverted.</li> </ul>"},{"location":"changelog-old/#106582-2021-02-16","title":"1.0.6582 - 2021-02-16","text":""},{"location":"changelog-old/#changed_151","title":"Changed","text":"<ul> <li>Addresses are now properly validated when the PTE is loaded from the page table.</li> <li>Any invalid CPU memory addresses will now print an InvalidMemoryRegionException instead of just showing AccessViolationException on the console.</li> <li>Address validation has been moved inside the EmitPtPointerLoad function, rather than doing the check before calling it.</li> </ul>"},{"location":"changelog-old/#106575-2021-02-15","title":"1.0.6575 - 2021-02-15","text":""},{"location":"changelog-old/#added_83","title":"Added","text":"<ul> <li>Added an option to hide the mouse cursor on inactivity. No more pesky mouse cursor while you're playing!</li> <li>This option can be enabled in Options &gt; Settings &gt; General tab &gt; \"Hide Cursor On Idle\".</li> </ul>"},{"location":"changelog-old/#106551-2021-02-11","title":"1.0.6551 - 2021-02-11","text":""},{"location":"changelog-old/#added_84","title":"Added","text":"<ul> <li>Implemented GetSystemSessionId and added associated prepo permission levels.</li> <li>Fixes a missing service crash on launch on Super Mario 3D World + Bowser's Fury.</li> </ul>"},{"location":"changelog-old/#106548-2021-02-11","title":"1.0.6548 - 2021-02-11","text":""},{"location":"changelog-old/#changed_152","title":"Changed","text":"<ul> <li>Corrected joy-con image aspect ratio.</li> </ul>"},{"location":"changelog-old/#106546-2021-02-10","title":"1.0.6546 - 2021-02-10","text":""},{"location":"changelog-old/#changed_153","title":"Changed","text":"<ul> <li>Enabled multithreaded decoding of VP9 NVDEC videos.</li> <li>IImproves performance on several first party intro videos, providing noticeably smoother video &amp; audio, included in the following titles: Super Smash Bros. Ultimate, Pok\u00e9mon Let's Go Eevee/Pikachu, The Legend of Zelda: Link's Awakening, Fire Emblem: Three Houses, Tokyo Mirage Session #FE Encore, Animal Crossing: New Horizons, and Mr. Driller DrillLand.</li> </ul>"},{"location":"changelog-old/#106545-2021-02-10","title":"1.0.6545 - 2021-02-10","text":""},{"location":"changelog-old/#changed_154","title":"Changed","text":"<ul> <li>Updated joy-con images in GUI for better visibility.</li> </ul>"},{"location":"changelog-old/#106544-2021-02-10","title":"1.0.6544 - 2021-02-10","text":""},{"location":"changelog-old/#changed_155","title":"Changed","text":"<ul> <li>Improved inline keyboard compatibility.</li> <li>Implements a new keyboard request used by Monster Hunter Rise Demo.</li> <li>Fixes a softlock or crash on Monster Hunter Generations Ultimate in certain situations when using the keyboard.</li> <li>Fixes a crash in Dark Souls Remastered if entering a player name for a second time that is shorter than the first.</li> </ul>"},{"location":"changelog-old/#106540-2021-02-10","title":"1.0.6540 - 2021-02-10","text":""},{"location":"changelog-old/#changed_156","title":"Changed","text":"<ul> <li>Edited the global.json file to allow the use of dotnet sdk 5.0.xxx rather than locking it to 5.0.100.</li> </ul>"},{"location":"changelog-old/#106532-2021-02-09","title":"1.0.6532 - 2021-02-09","text":""},{"location":"changelog-old/#changed_157","title":"Changed","text":"<ul> <li>The emulator now automatically loads a default configuration if an invalid configuration is detected.</li> </ul>"},{"location":"changelog-old/#106529-2021-02-09","title":"1.0.6529 - 2021-02-09","text":""},{"location":"changelog-old/#added_85","title":"Added","text":"<ul> <li>Implemented ISystemSettingsServer.IsUserSystemClockAutomaticCorrectionEnabled service call.</li> <li>Enables functionality in some homebrew applications.</li> </ul>"},{"location":"changelog-old/#106521-2021-02-07","title":"1.0.6521 - 2021-02-07","text":""},{"location":"changelog-old/#fixed_198","title":"Fixed","text":"<ul> <li>Fixed non-contiguous IPC memory copies.</li> <li>Fixes a specific crash on Bravely Default II Demo, Balan Wonderworld Demo, and possibly other games introduced in 1.0.5899 (PR #1458)</li> </ul>"},{"location":"changelog-old/#106520-2021-02-07","title":"1.0.6520 - 2021-02-07","text":""},{"location":"changelog-old/#changed_158","title":"Changed","text":"<ul> <li>Optimised JIT code generation to reduce register utilisation.</li> <li>This change may provide a minor improvement in code compilation time and quality.</li> </ul>"},{"location":"changelog-old/#106519-2021-02-07","title":"1.0.6519 - 2021-02-07","text":""},{"location":"changelog-old/#changed_159","title":"Changed","text":"<ul> <li>Simplified code generation when using multiple vertex shader programs.</li> <li>This is a code style change, and should not have any impact on emulator performance.</li> </ul>"},{"location":"changelog-old/#106518-2021-02-07","title":"1.0.6518 - 2021-02-07","text":""},{"location":"changelog-old/#changed_160","title":"Changed","text":"<ul> <li>Fixed the updater application icon on Linux.</li> </ul>"},{"location":"changelog-old/#106517-2021-02-07","title":"1.0.6517 - 2021-02-07","text":""},{"location":"changelog-old/#changed_161","title":"Changed","text":"<ul> <li>Disabled partial JIT invalidation on un-map.</li> <li>Fixes a significant performance regression in some games introduced by 1.0.6096 (PR #1518).</li> </ul>"},{"location":"changelog-old/#106516-2021-02-07","title":"1.0.6516 - 2021-02-07","text":""},{"location":"changelog-old/#added_86","title":"Added","text":"<ul> <li>Added support for the ETC2 (RGB) texture format.</li> <li>Fixes corrupt textures in Vegas Party.</li> </ul>"},{"location":"changelog-old/#106471-2021-02-01","title":"1.0.6471 - 2021-02-01","text":""},{"location":"changelog-old/#changed_162","title":"Changed","text":"<ul> <li>Disabled flushing of multisample textures.</li> <li>Fixes a specific crash on Super Bomberman R, fault - milestone one, Leisure Suit Larry, and possibly other untested games.</li> </ul>"},{"location":"changelog-old/#106469-2021-01-31","title":"1.0.6469 - 2021-01-31","text":""},{"location":"changelog-old/#changed_163","title":"Changed","text":"<ul> <li>Miscellaneous refactoring of shader call code. No expected changes in emulator behavior.</li> </ul>"},{"location":"changelog-old/#106455-2021-01-29","title":"1.0.6455 - 2021-01-29","text":""},{"location":"changelog-old/#added_87","title":"Added","text":"<ul> <li>Added support for geometry shader passthrough.</li> <li>Improves rendering Marvel Ultimate Alliance 3. Note: the game is still not playable due to other issues.</li> </ul>"},{"location":"changelog-old/#106453-2021-01-29","title":"1.0.6453 - 2021-01-29","text":""},{"location":"changelog-old/#changed_164","title":"Changed","text":"<ul> <li>Updated the text label for the PPTC toggle in the emulator settings window to improve user experience.</li> </ul>"},{"location":"changelog-old/#106452-2021-01-29","title":"1.0.6452 - 2021-01-29","text":""},{"location":"changelog-old/#added_88","title":"Added","text":"<ul> <li>Added a texture/sampler descriptor cache for faster pool invalidation.</li> <li>Potentially improves performance in games that have stutter caused by texture pool invalidation.</li> <li>Fixed a regression in Mario Kart 8 Deluxe introduced in 1.0.6337 (PR 1905) that would evict a course's cube-map array and shadow map from the pool while playing.</li> </ul>"},{"location":"changelog-old/#106441-2021-01-27","title":"1.0.6441 - 2021-01-27","text":""},{"location":"changelog-old/#added_89","title":"Added","text":"<ul> <li>Added support for multiple destination operands on the IR rather than just one.</li> <li>As shader changes occurred, shader caches have been gracefully invalidated; the next time a game is launched the cache will automatically rebuild at boot time.</li> </ul>"},{"location":"changelog-old/#106440-2021-01-27","title":"1.0.6440 - 2021-01-27","text":""},{"location":"changelog-old/#fixed_199","title":"Fixed","text":"<ul> <li>Lowered precision of estimate instruction results to match ARM behavior.</li> <li>Fixes a logic bug in Catherine: Full Body preventing progression of gameplay.</li> <li>Fixes a logic bug freezing most controller input in Slayaway Camp: Butcher's Cut, Friday the 13<sup>th</sup>: Killer Puzzle, and Out Of The Box.</li> </ul>"},{"location":"changelog-old/#106432-2021-01-26","title":"1.0.6432 - 2021-01-26","text":""},{"location":"changelog-old/#added_90","title":"Added","text":"<ul> <li>Support shader F32 to bool re-interpretation</li> </ul>"},{"location":"changelog-old/#106429-2021-01-26","title":"1.0.6429 - 2021-01-26","text":""},{"location":"changelog-old/#fixed_200","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.6420 (PR 1948) that would generate invalid code for atomic SSBO operations.</li> <li>Fixes regression on Persona 5 Scramble where it could slow to a crawl and/or crash before or at the title screen.</li> <li>Fixes regression on Monster Hunter Rise Demo where some objects were rendered completely black.</li> </ul>"},{"location":"changelog-old/#106426-2021-01-26","title":"1.0.6426 - 2021-01-26","text":""},{"location":"changelog-old/#changed_165","title":"Changed","text":"<ul> <li>Made some simple changes on the OpenGL backend to significantly reduce the number of redundant calls.</li> <li>Has potential to offer a minor improvement to performance depending on the game.</li> </ul>"},{"location":"changelog-old/#106425-2021-01-26","title":"1.0.6425 - 2021-01-26","text":""},{"location":"changelog-old/#fixed_201","title":"Fixed","text":"<ul> <li>Changed the implementation of conditional rendering to actually compare the values on memory even if they don't come from queries (instead of just returning false).</li> <li>Improves rendering Marvel Ultimate Alliance 3. Note: the game is still not playable due to other issues.</li> </ul>"},{"location":"changelog-old/#106424-2021-01-26","title":"1.0.6424 - 2021-01-26","text":""},{"location":"changelog-old/#changed_166","title":"Changed","text":"<ul> <li>Ryujinx will now re-check for keys before verifying a firmware install. The user will no longer have to close &amp; reopen the application in order for keys to be recognized on initial setup/clean install.</li> </ul>"},{"location":"changelog-old/#106423-2021-01-26","title":"1.0.6423 - 2021-01-26","text":""},{"location":"changelog-old/#fixed_202","title":"Fixed","text":"<ul> <li>Fixed a regression that broke compute shader code dumping.</li> <li>This is a developer-only function and does not affect emulator operation during gameplay.</li> </ul>"},{"location":"changelog-old/#106421-2021-01-26","title":"1.0.6421 - 2021-01-26","text":""},{"location":"changelog-old/#added_91","title":"Added","text":"<ul> <li>Add support for shader atomic min/max operations.</li> <li>Fixes missing graphics on Disgaea 6 Demo.</li> </ul>"},{"location":"changelog-old/#106419-2021-01-26","title":"1.0.6419 - 2021-01-26","text":""},{"location":"changelog-old/#added_92","title":"Added","text":"<ul> <li>Implemented a prfm instruction variant.</li> <li>Fixes a missing opcode crash in Edna &amp; Harvey: Harvey's New Eyes and Deponia.</li> </ul>"},{"location":"changelog-old/#106418-2021-01-26","title":"1.0.6418 - 2021-01-26","text":""},{"location":"changelog-old/#changed_167","title":"Changed","text":"<ul> <li>Increase the controller input window size to prevent the controller input window from scrolling.</li> </ul>"},{"location":"changelog-old/#106407-2021-01-24","title":"1.0.6407 - 2021-01-24","text":""},{"location":"changelog-old/#changed_168","title":"Changed","text":"<ul> <li>Prevent the display from sleeping whilst a game is running on Windows.</li> </ul>"},{"location":"changelog-old/#106406-2021-01-24","title":"1.0.6406 - 2021-01-24","text":""},{"location":"changelog-old/#added_93","title":"Added","text":"<ul> <li>Added vector fast paths for VCLZ ARM instructions.</li> </ul>"},{"location":"changelog-old/#106405-2021-01-24","title":"1.0.6405 - 2021-01-24","text":""},{"location":"changelog-old/#changed_169","title":"Changed","text":"<ul> <li>Modified storage buffer to allow out of bounds access by binding the entire buffer rather than just the range that the game says its using.</li> <li>Fixes overly bright lighting in Yo-kai Watch 4/++ and other Yo-kai games.</li> </ul>"},{"location":"changelog-old/#106404-2021-01-24","title":"1.0.6404 - 2021-01-24","text":""},{"location":"changelog-old/#changed_170","title":"Changed","text":"<ul> <li>Updated the controller images in the input mapping UI for better visibility across multiple themes.</li> </ul>"},{"location":"changelog-old/#106403-2021-01-24","title":"1.0.6403 - 2021-01-24","text":""},{"location":"changelog-old/#changed_171","title":"Changed","text":"<ul> <li>Implemented a workaround for Github Actions windows-latest restore failures. No emulator code changes.</li> </ul>"},{"location":"changelog-old/#106392-2021-01-23","title":"1.0.6392 - 2021-01-23","text":""},{"location":"changelog-old/#changed_172","title":"Changed","text":"<ul> <li>Changed the behavior of exact texture matches to now compare the physical regions if the virtual address is not the same, and allows a match if the virtual addresses are different yet mapped to the same physical region.</li> <li>Fixes a regression on Rune Factory 4 Special and New Super Mario Brothers U Deluxe introduced in 1.0.6337 (PR 1905).</li> </ul>"},{"location":"changelog-old/#106391-2021-01-23","title":"1.0.6391 - 2021-01-23","text":""},{"location":"changelog-old/#fixed_203","title":"Fixed","text":"<ul> <li>Fixed TZName parsing in TZIF footer.</li> <li>Fixes incorrect timezone offset seen in games such as Animal Crossing: New Horizons.</li> </ul>"},{"location":"changelog-old/#106389-2021-01-22","title":"1.0.6389 - 2021-01-22","text":""},{"location":"changelog-old/#fixed_204","title":"Fixed","text":"<ul> <li>Fixed an inverted read only flag in transfer memory creation.</li> <li>Fixes an issue with the inline swkbd implementation.</li> </ul>"},{"location":"changelog-old/#106373-2021-01-20","title":"1.0.6373 - 2021-01-20","text":""},{"location":"changelog-old/#fixed_205","title":"Fixed","text":"<ul> <li>Fixed an issue preventing the SL + SR buttons from being mapped properly.</li> </ul>"},{"location":"changelog-old/#106369-2021-01-19","title":"1.0.6369 - 2021-01-19","text":""},{"location":"changelog-old/#fixed_206","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.6351 (PR 1929) that caused swkbd prompts to softlock or crash the respective game when called.</li> </ul>"},{"location":"changelog-old/#106367-2021-01-19","title":"1.0.6367 - 2021-01-19","text":""},{"location":"changelog-old/#added_94","title":"Added","text":"<ul> <li>Implemented Fmaxnmp &amp; Fminnmp Scalar instructions.</li> <li>Fixes a missing opcode crash in Mortal Kombat 11. The game is still not playable due to rendering issues.</li> </ul>"},{"location":"changelog-old/#106355-2021-01-18","title":"1.0.6355 - 2021-01-18","text":""},{"location":"changelog-old/#changed_173","title":"Changed","text":"<ul> <li>Enabled parallel ASTC decoding by default.</li> <li>Mitigates some ASTC texture load related stutter on games with ASTC textures.</li> </ul>"},{"location":"changelog-old/#106354-2021-01-18","title":"1.0.6354 - 2021-01-18","text":""},{"location":"changelog-old/#fixed_207","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.6327 (PR 1911) that caused Kirby Star Allies to crash on boot, as the game was trying to use an invalid min LOD value, leading to an out of range exception.</li> </ul>"},{"location":"changelog-old/#106353-2021-01-18","title":"1.0.6353 - 2021-01-18","text":""},{"location":"changelog-old/#fixed_208","title":"Fixed","text":"<ul> <li>Fixed a crash on exit of the emulator and a crash on stopping emulation, both occurring on Linux.</li> <li>Resolves an issue preventing embedded games from launching on Linux (as launching embedded games first stops emulation, which was crashing the emulator).</li> </ul>"},{"location":"changelog-old/#106352-2021-01-18","title":"1.0.6352 - 2021-01-18","text":""},{"location":"changelog-old/#changed_174","title":"Changed","text":"<ul> <li>Reduced temporary copy/fill buffer size from 1GB to 16MB.</li> <li>Fixes a possible out of memory exception if the user is already low on RAM during game load/startup. Does not have any significant impact other than that.</li> </ul>"},{"location":"changelog-old/#106351-2021-01-18","title":"1.0.6351 - 2021-01-18","text":""},{"location":"changelog-old/#added_95","title":"Added","text":"<ul> <li>Implemented ILibraryAppletCreator::CreateHandleStorage call, and </li> <li>Fixes the am IStorage Write ReadOnly check.</li> <li>Fixes a regression introduced in 1.0.6291 (PR 1868) that caused Monster Hunter Generations Ultimate to crash on launch in certain scenarios.</li> </ul>"},{"location":"changelog-old/#106348-2021-01-18","title":"1.0.6348 - 2021-01-18","text":""},{"location":"changelog-old/#changed_175","title":"Changed","text":"<ul> <li>Changed joystick inputs to be treated as in a circular zone instead of a square zone.</li> <li>Fixes diagonal analog joystick input not working when mapped to keyboard controls.</li> </ul>"},{"location":"changelog-old/#106346-2021-01-18","title":"1.0.6346 - 2021-01-18","text":""},{"location":"changelog-old/#fixed_209","title":"Fixed","text":"<ul> <li>Fixed the missing Ryujinx icon in Linux that has been missing since the GUI refactor.</li> </ul>"},{"location":"changelog-old/#106341-2021-01-17","title":"1.0.6341 - 2021-01-17","text":""},{"location":"changelog-old/#changed_176","title":"Changed","text":"<ul> <li>Implemented lazy flush-on-read for Buffers (SSBO/Copy). This allows SSBO data to be written back to guest memory when it's needed.</li> <li>Fixes flickering in Link's Awakening.</li> <li>This also allows data written into an SSBO to be used as part of a draw command, or by other operations within the GPU. This is required for MH: Rise Demo.</li> <li>As part of lazy flushing, when a page is dirtied by CPU, it is assumed that the most recently written SSBOs are not the target of the CPU write, and are not updated.</li> <li>Fixes particle effects that were broken or constantly restarted their animation in many first party games. See the PR for visual examples.</li> <li>Greatly speed up buffer copies via two new paths (direct cpu copy, or lazy buffer flush) chosen depending on whether the buffer has been written to before.</li> <li>Mostly affects performance in Unity games and Pok\u00e9mon (which has other issues).</li> <li>A combination of all changes has fixed vertex explosions in Unity games.</li> <li>Hyrule Warriors vertex explosions are somewhat reduced (but can still happen)</li> <li>Fixed a bug with Memory Tracking where write tracking (dirty flags) could be lost after read tracking (flush) was triggered.</li> <li>This fixes a potential crash in Mario Kart 8, where texture data could be flushed at an inappropriate time.</li> </ul>"},{"location":"changelog-old/#106337-2021-01-17","title":"1.0.6337 - 2021-01-17","text":""},{"location":"changelog-old/#added_96","title":"Added","text":"<ul> <li>Added support for GPU textures mapped at non-contiguous CPU regions as some games require them, such as the Monster Hunter Rise Demo and some UE4 games.</li> <li>Improves rendering on Monster Hunter Rise Demo and many Unreal Engine 4 games.</li> </ul>"},{"location":"changelog-old/#106327-2021-01-15","title":"1.0.6327 - 2021-01-15","text":""},{"location":"changelog-old/#fixed_210","title":"Fixed","text":"<ul> <li>Fixed mipmap base level being ignored for sampled textures and images. This change allows the correct mipmap level to be accessed from the shader.</li> <li>Improves shadow rendering on Monster Hunter Rise Demo.</li> <li>Fixes the black faces/other corruption in Catherine: Full Body. The game now renders correctly.</li> </ul>"},{"location":"changelog-old/#106324-2021-01-14","title":"1.0.6324 - 2021-01-14","text":""},{"location":"changelog-old/#added_97","title":"Added","text":"<ul> <li>Added a menu option to toggle the prompt displayed when closing the emulator while a game is playing. This can be found in Options &gt; Settings and is called 'Show \"Confirm Exit\" Dialog'. This option is enabled by default.</li> </ul>"},{"location":"changelog-old/#106318-2021-01-13","title":"1.0.6318 - 2021-01-13","text":""},{"location":"changelog-old/#fixed_211","title":"Fixed","text":"<ul> <li>Fixed a bug in the LOP3 shader causing a condition to be read from the wrong bits.</li> <li>As shader changes occurred, shader caches have been gracefully invalidated; the next time a game is launched the cache will automatically rebuild at boot time.</li> </ul>"},{"location":"changelog-old/#106311-2021-01-13","title":"1.0.6311 - 2021-01-13","text":""},{"location":"changelog-old/#changed_177","title":"Changed","text":"<ul> <li>Changed the SurfaceFlinger android-fence callback to be called immediately when the fence is invalid.</li> <li>Fixes an exception when launching homebrew.</li> </ul>"},{"location":"changelog-old/#106308-2021-01-12","title":"1.0.6308 - 2021-01-12","text":""},{"location":"changelog-old/#added_98","title":"Added","text":"<ul> <li>Implement shader CC mode for ISCADD, X mode for ISETP and fix STL/STS/STG with RZ</li> <li>This adds support for a number of additional shader instruction encodings.</li> <li>This resolves a number of issues with Monster Hunter: Rise Demo, and potentially other games.</li> </ul>"},{"location":"changelog-old/#106307-2021-01-12","title":"1.0.6307 - 2021-01-12","text":""},{"location":"changelog-old/#added_99","title":"Added","text":"<ul> <li>Implement clear buffer</li> <li>Fixes an issue where certain GPU buffers were not being cleared when using specific NVN features.</li> <li>This resolves a number of issues with Monster Hunter: Rise Demo, and potentially other games.</li> </ul>"},{"location":"changelog-old/#106301-2021-01-12","title":"1.0.6301 - 2021-01-12","text":""},{"location":"changelog-old/#added_100","title":"Added","text":"<ul> <li>Added a simple pools limiter.</li> <li>Reduces emulator memory usage. The amount of memory usage savings are dependent on the game but test results showed an average of 50% reduction.</li> <li>Avoids memory peaks on launch; spikes nearing or equaling the amount of your RAM should no longer occur.</li> <li>Further reduces game load times, with the amount of time saved varying game to game. Average time reduction of 10-15%.</li> </ul>"},{"location":"changelog-old/#106291-2021-01-11","title":"1.0.6291 - 2021-01-11","text":""},{"location":"changelog-old/#added_101","title":"Added","text":"<ul> <li>Added support for inline software keyboard.</li> <li>Enables Monster Hunter Generations Ultimate and Gnosia to go in-game without a save file, fixes a crash in menus on Dark Souls Remastered, and allows Fate EXTELLA/LINK to enter a custom player name.</li> </ul>"},{"location":"changelog-old/#106288-2021-01-11","title":"1.0.6288 - 2021-01-11","text":""},{"location":"changelog-old/#changed_178","title":"Changed","text":"<ul> <li>Disabled the \"Simulate Wake-up\" function from being able to be executed while a game is not running.</li> <li>Resolves an error message &amp; potential crash in the emulator if this function is used while not running a game.</li> </ul>"},{"location":"changelog-old/#106286-2021-01-10","title":"1.0.6286 - 2021-01-10","text":""},{"location":"changelog-old/#changed_179","title":"Changed","text":"<ul> <li>Only attempt to parse/load \"Common\" ticket type.</li> <li>Fixes an issue loading NSPs dumped using nxdumptool with a specific option enabled. </li> </ul>"},{"location":"changelog-old/#106283-2021-01-10","title":"1.0.6283 - 2021-01-10","text":""},{"location":"changelog-old/#added_102","title":"Added","text":"<ul> <li>Stubbed IsFreeCommunicationAvailable service call.</li> <li>Fixes a missing service crash in Monster Hunter Rise Demo. The game now boots without having to enable 'Ignore Missing Services'.</li> </ul>"},{"location":"changelog-old/#106281-2021-01-10","title":"1.0.6281 - 2021-01-10","text":""},{"location":"changelog-old/#fixed_212","title":"Fixed","text":"<ul> <li>Fixed an issue with compute reserved constant buffers not being updated when, in fact, they should have been.</li> <li>Fixes a bug on Monster Hunter Rise Demo where the screen would randomly turn black with white elements due to compute reading values from the wrong SSBO.</li> <li>Fixes vertex explosions on Super Smash Brothers Ultimate.</li> </ul>"},{"location":"changelog-old/#106276-2021-01-10","title":"1.0.6276 - 2021-01-10","text":""},{"location":"changelog-old/#fixed_213","title":"Fixed","text":"<ul> <li>Fixed a recent code typo that broke the auto-updater.\\</li> <li>DOWNLOAD THIS UPDATE MANUALLY!</li> </ul>"},{"location":"changelog-old/#106269-2021-01-09","title":"1.0.6269 - 2021-01-09","text":""},{"location":"changelog-old/#fixed_214","title":"Fixed","text":"<ul> <li>Fixed remap ioctl when the handle value is 0.</li> <li>Fixes an invalid address crash on Monster Hunter Rise Demo.</li> </ul>"},{"location":"changelog-old/#106260-2021-01-08","title":"1.0.6260 - 2021-01-08","text":""},{"location":"changelog-old/#added_103","title":"Added","text":"<ul> <li>Stubbed PresetLibraryAppletGpuTimeSliceZero service call.</li> <li>Resolves missing service crash on boot on Monster Hunter Rise Demo. Note that the game is still not playable at this time.</li> </ul>"},{"location":"changelog-old/#106259-2021-01-08","title":"1.0.6259 - 2021-01-08","text":""},{"location":"changelog-old/#changed_180","title":"Changed","text":"<ul> <li>Added support for conditional on BRK and SYNC shader instructions.</li> <li>Improves rendering on Monster Hunter Rise Demo, but there are still other bugs preventing most objects from being drawn.</li> <li>As shader changes occurred, shader caches have been gracefully invalidated; the next time a game is launched the cache will automatically rebuild at boot time.</li> </ul>"},{"location":"changelog-old/#106250-2021-01-08","title":"1.0.6250 - 2021-01-08","text":""},{"location":"changelog-old/#changed_181","title":"Changed","text":"<ul> <li>Refactored GUI code. This is part 1 of a multi-part GUI code cleanup.</li> <li>Subscribers to the $10 or $20 monthly Patreon tiers are now listed in the emulator's Help &gt; About section. Thank you for your support!</li> </ul>"},{"location":"changelog-old/#106248-2021-01-07","title":"1.0.6248 - 2021-01-07","text":""},{"location":"changelog-old/#changed_182","title":"Changed","text":"<ul> <li>Updated README.MD to reflect recent emulator changes.</li> </ul>"},{"location":"changelog-old/#106245-2021-01-07","title":"1.0.6245 - 2021-01-07","text":""},{"location":"changelog-old/#fixed_215","title":"Fixed","text":"<ul> <li>Updated the missing sample timestamp in DebugPad.</li> <li>Fixes a regression introduced in the HID Sharedmem Rework (PR 1003) that caused several games not to boot. These games now boot again.</li> </ul>"},{"location":"changelog-old/#106235-2021-01-04","title":"1.0.6235 - 2021-01-04","text":""},{"location":"changelog-old/#added_104","title":"Added","text":"<p>GPU: - Implemented some missing texture formats.   - Improves rendering in Psikyo Shooting Stars Alpha and Bravo, Sky Gamblers - Afterburner, and possibly other games that use these texture formats.</p>"},{"location":"changelog-old/#106229-2021-01-04","title":"1.0.6229 - 2021-01-04","text":""},{"location":"changelog-old/#added_105","title":"Added","text":"<ul> <li>Implemented Pmull_V instructions with Clmul fast path for the \"\u00bdD -&gt; 1Q\" variant &amp; Sse fast path and slow path for both the \"8/16B -&gt; 8H\" and \"\u00bdD -&gt; 1Q\" variants; with Test.</li> </ul>"},{"location":"changelog-old/#106215-2021-01-03","title":"1.0.6215 - 2021-01-03","text":""},{"location":"changelog-old/#fixed_216","title":"Fixed","text":"<ul> <li>Fixed a regression introduced by 1.0.6176 (PR 1766) affecting unpacked games.</li> </ul>"},{"location":"changelog-old/#106213-2021-01-02","title":"1.0.6213 - 2021-01-02","text":""},{"location":"changelog-old/#changed_183","title":"Changed","text":"<ul> <li>Refactored &amp; cleaned up account services implementation.</li> </ul>"},{"location":"changelog-old/#106212-2021-01-02","title":"1.0.6212 - 2021-01-02","text":""},{"location":"changelog-old/#fixed_217","title":"Fixed","text":"<ul> <li>Fixes a regression introduced in 1.0.6122 (PR 1741) that caused issues with homebrew apps/games not always using fences.</li> </ul>"},{"location":"changelog-old/#106209-2021-01-02","title":"1.0.6209 - 2021-01-02","text":""},{"location":"changelog-old/#added_106","title":"Added","text":"<ul> <li>Implemented apm:p service call. This seems to be used only by homebrew at this time.</li> </ul>"},{"location":"changelog-old/#106200-2021-01-01","title":"1.0.6200 - 2021-01-01","text":""},{"location":"changelog-old/#changed_184","title":"Changed","text":"<ul> <li>Cleaned up/removed long &lt;-&gt; ulong casts from Nvservices code.</li> <li>Code cleanup only. No emulator functionality change.</li> </ul>"},{"location":"changelog-old/#106196-2021-01-01","title":"1.0.6196 - 2021-01-01","text":""},{"location":"changelog-old/#changed_185","title":"Changed","text":"<ul> <li>Updated KAddressArbiter implementation to 11.x kernel.</li> <li>Update Wait/SignalProcessWideKey implementation to match changes made on official 11.0 kernel.<ul> <li>They now store a bool at the key address indicating if the number of threads waiting the condition variable is &gt; 0. Games targeting firmware 11.0 or newer needs this to work properly (no games are know to target it so far).</li> </ul> </li> <li>Update SignalAndModifyIfEqual implementation to match changes made on official 7.0 kernel.<ul> <li>The way how the value is modified changed. Games targeting firmware 7.0 or newer might need this to work properly.</li> </ul> </li> <li>Fix a bug where SignalToAddress would use the old priority even if the thread priority was updated after it started waiting (I'm not sure if this was a bug that was present on 6.x kernel or just an oversight).</li> <li>Simplified the code by sharing the function used to wake matching threads and remove them from the list. The <code>InsertSortedByPriority</code> function was also removed since it sorts by priority when looking for threads now.</li> <li>Based on mesosphere implementation. </li> </ul>"},{"location":"changelog-old/#106194-2021-01-01","title":"1.0.6194 - 2021-01-01","text":""},{"location":"changelog-old/#changed_186","title":"Changed","text":"<ul> <li>Profiled Persistent Translation Cache (PPTC) is now enabled by default.</li> </ul>"},{"location":"changelog-old/#106190-2021-01-01","title":"1.0.6190 - 2021-01-01","text":""},{"location":"changelog-old/#changed_187","title":"Changed","text":"<ul> <li>Update copyright headers for 2021.</li> <li>Happy new Year!</li> </ul>"},{"location":"changelog-old/#106182-2020-12-30","title":"1.0.6182 - 2020-12-30","text":""},{"location":"changelog-old/#changed_188","title":"Changed","text":"<ul> <li>Redistribute updated OpenAL binary.</li> <li>WWe now include a copy of OpenAL out-of-the box with Ryujinx. This removes the need to manually download and install OpenAL. We've also moved from using the fork provided by openal.org to the fork provided by openal-soft.org which is still maintained, and has had 1000's of improvements over the old version. This should improve OpenAL audio issues slightly in some games that suffered previously.</li> </ul>"},{"location":"changelog-old/#106176-2020-12-29","title":"1.0.6176 - 2020-12-29","text":""},{"location":"changelog-old/#added_107","title":"Added","text":"<ul> <li>Implemented the ability to add new executables when running a game. This allows more possibilities for game modding.</li> </ul>"},{"location":"changelog-old/#106144-2020-12-26","title":"1.0.6144 - 2020-12-26","text":""},{"location":"changelog-old/#changed_189","title":"Changed","text":"<ul> <li>Auto-updater restart after update function now only requires a single click on the \"Yes\" button.</li> </ul>"},{"location":"changelog-old/#106141-2020-12-24","title":"1.0.6141 - 2020-12-24","text":""},{"location":"changelog-old/#fixed_218","title":"Fixed","text":"<ul> <li>Miscellaneous error message verbiage fix. No change in emulator functionality.</li> </ul>"},{"location":"changelog-old/#106134-106136-2020-12-24","title":"1.0.6134 / 1.0.6136 - 2020-12-24","text":""},{"location":"changelog-old/#changed_190","title":"Changed","text":"<ul> <li>Free up memory allocated by Pools (via GC) during any translations at boot time (due to PPTC) and when closing a title.</li> </ul>"},{"location":"changelog-old/#106127-2020-12-17","title":"1.0.6127 - 2020-12-17","text":""},{"location":"changelog-old/#changed_191","title":"Changed","text":"<ul> <li>Fixed Vnmls_S instruction.</li> <li>Improved Vfma_S, Vfms_S &amp; Vfnma_S, Vfnms_S instructions performance.</li> <li>Added Vfms_V instruction.</li> </ul>"},{"location":"changelog-old/#106125-2020-12-17","title":"1.0.6125 - 2020-12-17","text":""},{"location":"changelog-old/#changed_192","title":"Changed","text":"<ul> <li>Miscellaneous PPTC optimizations to increase resilience and reduce overhead. Note for users: existing .info (profiling) files will be invalidated.</li> <li>Reduction of the size of both the .info and the .cache files.</li> <li>Faster deserialization/serialization (implies reduced loading/saving times).</li> <li>Saving of JitCache memory.</li> <li>Improved Logs.</li> </ul>"},{"location":"changelog-old/#106122-2020-12-17","title":"1.0.6122 - 2020-12-17","text":""},{"location":"changelog-old/#changed_193","title":"Changed","text":"<ul> <li>Interrupt GPU command processing when a frame becomes ready, presenting it immediately.</li> <li>Greatly improves frame pacing in games that do not wait for a present before starting to draw the next frame (and run below full speed)</li> <li>Examples: Xenoblade Chronicles: Definitive Edition, Xenoblade 2</li> <li>Vsync event and surface flinger consumption now happens at exact timings (eg. 16.6667ms) rather than rounding to the nearest millisecond (16/17ms)</li> <li>Greatly improves games that rely on the vsync event for timing, such as Link's Awakening, or unity games that aren't tied to frame count.</li> <li>Should result in less framerate fluctuation.</li> <li>Improves frame consistency in windowed mode, though it can still get out of sync and double frames. Exclusive fullscreen mode should be perfect.</li> <li>Overhauled Vsync off mode. Rather than simulating a vsync every 1ms, it will now simulate a vsync every time a frame is produced. This results in higher max framerates.</li> <li>Alongside, the artificial 60fps limit has been removed. If you disable your vsync using driver config, or have a high refresh rate screen, you can now go over 60fps.</li> <li>With a 60hz display and driver vsync enabled, you can disable guest vsync to pass through the host vsync signal. This may result in smoother windowed mode gameplay.</li> <li>FIFO% now takes a running total of processing time and total time, then calculates the % immediately before reporting it. This is more accurate.</li> <li>Before, it would take % values for each \"frame\", then average all of them. This was inaccurate when our \"frame\" boundary failed, or frames had uneven cost.</li> </ul>"},{"location":"changelog-old/#106119-2020-12-16","title":"1.0.6119 - 2020-12-16","text":""},{"location":"changelog-old/#added_108","title":"Added","text":"<ul> <li>Implemented IsLargeResourceAvailable service call.</li> <li>Fixes missing service crashes in Immortals Fenyx Rising (still crashes due to other issues) and Death Tales (now playable).</li> </ul>"},{"location":"changelog-old/#106107-2020-12-16","title":"1.0.6107 - 2020-12-16","text":""},{"location":"changelog-old/#changed_194","title":"Changed","text":"<ul> <li>Changed the order of termination processes to terminate the application first instead of the services first.</li> <li>Fixes needless service crashes &amp; hangs occurring on emulator shutdown.</li> </ul>"},{"location":"changelog-old/#106105-2020-12-16","title":"1.0.6105 - 2020-12-16","text":""},{"location":"changelog-old/#added_109","title":"Added","text":"<ul> <li>Implemented VRINTX.F32/VRINTX.F64 instructions.</li> <li>Resolves missing opcode crashes on Spirit Hunter: NG, Fairy Fencer F: Advent Dark Force, Cabela's: The Hunt - Championship Edition, STURMWIND EX, Megadimension Neptunia VII, Baldur's Gate and Baldur's Gate II: Enhanced Editions, Planescape: Torment and Icewind Dale: Enhanced Editions, Little Inferno, Prinny Can I really Be the Hero, Prinny 2 Dawn of Operation Panties Dood, Human Resource Machine, 7 Billion Humans, and TY the Tasmanian Tiger. Most of these titles now go in-game.</li> </ul>"},{"location":"changelog-old/#106096-2020-12-16","title":"1.0.6096 - 2020-12-16","text":""},{"location":"changelog-old/#changed_195","title":"Changed","text":"<ul> <li>Modified JIT cache to be cleared on exit.</li> <li>Miscellaneous CPU JIT cache operational cleanup &amp; bugfixes.</li> </ul>"},{"location":"changelog-old/#106086-2020-12-15","title":"1.0.6086 - 2020-12-15","text":""},{"location":"changelog-old/#added_110","title":"Added","text":"<ul> <li>Implemented aspect ratio options that can be selected either through the Options &gt; Settings &gt; Graphics menu or by clicking through the different options on the bottom status bar. Note: non-16:9 will give games a stretched or squeezed appearance unless also using mods that change the expected resolution of the game.</li> </ul>"},{"location":"changelog-old/#106082-2020-12-15","title":"1.0.6082 - 2020-12-15","text":""},{"location":"changelog-old/#added_111","title":"Added","text":"<ul> <li>Implemented a wake-up (resume) message/event. This can be triggered while in-game by navigating to Options &gt; Simulate Wake-up Message.</li> <li>Allows the game The World Ends with You -Final Remix- to proceed past a point in the game where it prompts the end user to put the Switch to sleep and then wake it back up.</li> </ul>"},{"location":"changelog-old/#106069-2020-12-14","title":"1.0.6069 - 2020-12-14","text":""},{"location":"changelog-old/#added_112","title":"Added","text":"<ul> <li>Implemented VFMA (Vector) instructions.</li> <li>Fixes missing opcode crashes on TY the Tasmanian Tiger, Sky Gamblers: Storm Raiders, No more Heroes, No More Heroes 2 Desperate Struggle, Sphinx and the Cursed Mummy, and Valkyria Chronicles.</li> </ul>"},{"location":"changelog-old/#106062-2020-12-14","title":"1.0.6062 - 2020-12-14","text":""},{"location":"changelog-old/#fixed_219","title":"Fixed","text":"<ul> <li>Fixed pre-allocator shift instruction copies. No known impact in games.</li> </ul>"},{"location":"changelog-old/#106052-2020-12-13","title":"1.0.6052 - 2020-12-13","text":""},{"location":"changelog-old/#fixed_220","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.5090 (PR 1413) regarding the STREX instruction implementation that caused Sonic Forces to fail to boot.</li> </ul>"},{"location":"changelog-old/#106051-2020-12-13","title":"1.0.6051 - 2020-12-13","text":""},{"location":"changelog-old/#changed_196","title":"Changed","text":"<ul> <li>Improved shader cache resilience by supporting read-only mode if the cache.zip archive is already opened (i.e. if the game is launched in a second instance of the emulator).</li> </ul>"},{"location":"changelog-old/#106050-2020-12-13","title":"1.0.6050 - 2020-12-13","text":""},{"location":"changelog-old/#fixed_221","title":"Fixed","text":"<ul> <li>Corrected the type of NSO executable sizes.</li> <li>Fixes the following games which used to hang forever on boot: Hatsune Miku: Project DIVA Megamix (non-JP version), Super Chariot, Death Mark, Darkest Dungeon, Dairoku: Ayakashimori, CHAOS CODE -NEW SIGN OF CATASTROPHE-, Doukoku Soshite..., Air Missions: HIND, and possibly other (untested) similarly coded games in the switch library. These games now boot and most go in-game.</li> </ul>"},{"location":"changelog-old/#106047-2020-12-12","title":"1.0.6047 - 2020-12-12","text":""},{"location":"changelog-old/#fixed_222","title":"Fixed","text":"<ul> <li>Corrected the GetNintendoAccountUserResourceCacheForApplication stub.</li> <li>Fixes a regression introduced in 1.0.6045 (PR 1808).</li> </ul>"},{"location":"changelog-old/#106045-2020-12-11","title":"1.0.6045 - 2020-12-11","text":""},{"location":"changelog-old/#fixed_223","title":"Fixed","text":"<ul> <li>Updated fixed-size output buffer functions to write the correct sizes on the pointer buffer descriptors.</li> <li>Fixes a regression introduced in 1.0.5899 (PR 1458).</li> </ul>"},{"location":"changelog-old/#106043-2020-12-11","title":"1.0.6043 - 2020-12-11","text":""},{"location":"changelog-old/#fixed_224","title":"Fixed","text":"<ul> <li>Fixed an issue where GL queries could end up failing to return a value after a previous 0-draw query.</li> <li>Resolves a potential multi-second hang/freeze in Luigi's Mansion 3 and possibly other similarly coded games.</li> </ul>"},{"location":"changelog-old/#106027-2020-12-10","title":"1.0.6027 - 2020-12-10","text":""},{"location":"changelog-old/#changed_197","title":"Changed","text":"<ul> <li>Cleaned up the GPU memory allocator code.</li> </ul>"},{"location":"changelog-old/#106020-2020-12-10","title":"1.0.6020 - 2020-12-10","text":""},{"location":"changelog-old/#changed_198","title":"Changed","text":"<ul> <li>Modified allocator code to check if the aligned address and its requirements exceed the maximum allowed address, with a solution if the results are true.</li> <li>Fixed a regression introduced in 1.0.6004 (PR 1722) that caused Asterix &amp; Obelix XXL: Romastered to crash on boot.</li> </ul>"},{"location":"changelog-old/#106006-2020-12-09","title":"1.0.6006 - 2020-12-09","text":""},{"location":"changelog-old/#changed_199","title":"Changed","text":"<ul> <li>Fixed the ngct services placeholder which was incorrect.</li> <li>Stubbed IService Match and Filter calls, as well as IServiceWithManagementApi Match and Filter calls.</li> <li>Resolves missing service crashes in Horace, which is now playable.</li> </ul>"},{"location":"changelog-old/#106005-2020-12-09","title":"1.0.6005 - 2020-12-09","text":""},{"location":"changelog-old/#changed_200","title":"Changed","text":"<ul> <li>Modified ThreadPool process handling to keep it active so that there is never a reason to terminate the GateThread.</li> <li>Raises FPS from 57-58 to 60 in games where the game should have been pegged at 60FPS already.</li> </ul>"},{"location":"changelog-old/#106004-2020-12-09","title":"1.0.6004 - 2020-12-09","text":""},{"location":"changelog-old/#changed_201","title":"Changed","text":"<ul> <li>Modified GPU memory allocation by marking memory as available in an implementation of a Red-Black-Tree affectionately christened a TreeDictionary.</li> <li>Improves memory allocation and reduces time for certain GPU memory related operations.</li> </ul>"},{"location":"changelog-old/#106003-2020-12-09","title":"1.0.6003 - 2020-12-09","text":""},{"location":"changelog-old/#changed_202","title":"Changed","text":"<ul> <li>Rewrote scheduler context switch code.</li> <li>Now uses a lock to prevent the thread from being scheduled in two cores at once, like the official OS does.</li> <li>Fixed thread CurrentCore value being updated ahead of time. Now it is only updated after the thread is switched to the new core.</li> <li>Fixed bugs on some yield functions that could cause the scheduler to select the wrong thread.</li> <li>Fixed bugs that would cause KThread and KSession reference counts to be decremented below 0. For KThread, it could cause a exception since the thread was removed from the KProcess thread list twice (only observed in single core mode before the changes).</li> <li>Two asserts were added to ensure the reference count is not decremented below 0, or incremented after the object has been \"destroyed\".</li> <li>Fixed race on unmap client buffer function (IPC related, not scheduler related, but its a small, simple change as was affecting the tests here as well, so I decided to just fix it).</li> </ul> <p>Other improvements: - Core idle time is now properly reported to the guest instead of just returning 0 (I am not sure if games can actually read that). - GetCurrentThread and GetCurrentProcess functions were simplified, now it uses a thread local variable instead of looping through all core contexts and try finding the current thread. - Context switch speed was improved. This is in part thanks to the use of ManualResetEventSlim, that greatly improves the speed on context switches in quick succession, and in part to the simplification of the function. - The dummy thread and process were removed. Now GetCurrentThread and GetCurrentProcess just returns null if called from a non-guest or non-service thread.   - Prevents bugs caused by external threads messing with the scheduler.   - A new function was added that allows creating a guest process/thread from a external thread, this is used to start service faux processes. - Allow service threads to run in parallel again.   - They can be still be blocked by kernel in some cases, like when waiting for IPC messages for example, however they are no longer scheduled to cores, which means that they are free to run in parallel.   - The YieldUntilCompletion function was removed as it is no longer needed.   - This matches the behavior before ipc-part2, and fixes issues caused by this specific ipc-part2 change, like the audio crackling on SMO etc.</p> <p>Other changes: - Single core mode was removed. Now there is only multi core mode that is on by default.   - The GUI checkbox was removed.   - It is worth noting that the single core mode was not working anyway due to the bug mentioned before.</p>"},{"location":"changelog-old/#105995-2020-12-08","title":"1.0.5995 - 2020-12-08","text":""},{"location":"changelog-old/#added_113","title":"Added","text":"<ul> <li>Implemented IApplicationFunctions GetHealthWarningDisappearedSystemEvent call.</li> <li>Fixes a missing service issue in Mario Kart 8 Deluxe Chinese version.</li> </ul>"},{"location":"changelog-old/#105979-2020-12-07","title":"1.0.5979 - 2020-12-07","text":""},{"location":"changelog-old/#changed_203","title":"Changed","text":"<ul> <li>Fixed a regression introduced in IPC2 (PR 1458) where data written by a service would not mark regions as dirty, and reads from the service would not trigger flushes from textures.</li> <li>Fixes vertex explosions after one race in Mario Kart 8 Deluxe.</li> </ul>"},{"location":"changelog-old/#105975-2020-12-07","title":"1.0.5975 - 2020-12-07","text":""},{"location":"changelog-old/#added_114","title":"Added","text":"<ul> <li>Implemented VFNMA CPU instruction.</li> <li>Fixes missing opcode crash on launch in Valkyria Chronicles. Note: this game still does not boot due to other issues.</li> </ul>"},{"location":"changelog-old/#105960-2020-12-07","title":"1.0.5960 - 2020-12-07","text":""},{"location":"changelog-old/#added_115","title":"Added","text":"<ul> <li>Added support for guest Fz (Fpcr) mode through host Ftz and Daz (Mxcsr) modes (fast paths).</li> <li>Fixes a bug in Luigi's Mansion 3 where a player would get stuck trying to go to floor B2 (or load a save game that places you on floor B2).</li> </ul>"},{"location":"changelog-old/#105959-2020-12-07","title":"1.0.5959 - 2020-12-07","text":""},{"location":"changelog-old/#added_116","title":"Added","text":"<ul> <li>Added the Ryujinx build version to the log file names generated during runtime.</li> </ul>"},{"location":"changelog-old/#105942-2020-12-03","title":"1.0.5942 - 2020-12-03","text":""},{"location":"changelog-old/#changed_204","title":"Changed","text":"<ul> <li>Texture target is now extracted from Info for quick access</li> <li>Reduces costs when committing texture bindings.</li> </ul>"},{"location":"changelog-old/#105941-2020-12-03","title":"1.0.5941 - 2020-12-03","text":""},{"location":"changelog-old/#added_117","title":"Added","text":"<ul> <li>Implemented VFNMS.F32/64 instructions.</li> <li>Resolves missing opcode crash on Goat Simulator. Note: this game still crashes due to other issues.</li> </ul>"},{"location":"changelog-old/#105940-2020-12-03","title":"1.0.5940 - 2020-12-03","text":""},{"location":"changelog-old/#changed_205","title":"Changed","text":"<ul> <li>Added a draw count to mitigate unnecessary use of glFlush operations. If no draws have occurred between when a query begins and ends, a glFlush will no longer be added to the queue.</li> <li>Performance improvements can be observed in Super Mario Odyssey's Metro Kingdom or when resolution scaling is active, and other games that had similar bottlenecks previously.</li> </ul>"},{"location":"changelog-old/#105939-2020-12-03","title":"1.0.5939 - 2020-12-03","text":""},{"location":"changelog-old/#changed_206","title":"Changed","text":"<ul> <li>Changed uses of QueryModified to now pass a cached delegate.</li> <li>Changed buffer tracking to use simple tracking rather than smart, as in practice smart tracking does not seem to be faster.</li> <li>Combined, these changes nearly halve buffer tracking time in Super Mario Odyssey Metro Kingdom's initial view. Future PRs will help unlock more tangible performance boosts.</li> </ul>"},{"location":"changelog-old/#105937-2020-12-03","title":"1.0.5937 - 2020-12-03","text":""},{"location":"changelog-old/#changed_207","title":"Changed","text":"<ul> <li>This PR is a follow-up to 1.0.5915 and ensures the proper closing of copy handles that are passed by the guest and should be closed.</li> </ul>"},{"location":"changelog-old/#105915-2020-12-02","title":"1.0.5915 - 2020-12-02","text":""},{"location":"changelog-old/#fixed_225","title":"Fixed","text":"<ul> <li>Modified the audio WorkBuffer transfer memory handle to close properly.</li> <li>Fixes a regression introduced in 1.0.5899 (PR 1458) that caused a crash or hang on Rune Factory 4 Special and potentially other similarly coded games.</li> </ul>"},{"location":"changelog-old/#105913-2020-12-02","title":"1.0.5913 - 2020-12-02","text":""},{"location":"changelog-old/#changed_208","title":"Changed","text":"<ul> <li>Created a single guest process per IPC message processor, to alleviate issues introduced in 1.0.5899 (PR 1458).</li> <li>Fixes out of memory crashes on Pok\u00e9mon Sword/Shield and other games encountering this same error.</li> <li>Fixes bad audio on some games after 1.0.5899.</li> </ul>"},{"location":"changelog-old/#105900-2020-12-01","title":"1.0.5900 - 2020-12-01","text":""},{"location":"changelog-old/#fixed_226","title":"Fixed","text":"<ul> <li>Fixed a typo in TapFrame logic.</li> <li>Resolves a crash on boot in Pang Adventures.</li> </ul>"},{"location":"changelog-old/#105899-2020-12-01","title":"1.0.5899 - 2020-12-01","text":""},{"location":"changelog-old/#changed_209","title":"Changed","text":"<ul> <li>This is part 2 of an intended 4 part IPC (Inter-Process Communication) refactor. Part 2: HLE services now use the ReplyAndReceive syscall to receive IPC requests, rather than having special handling on the kernel that would call the service function directly after a call to SendSyncRequest by the game.</li> <li>This represents a more accurate approach to these processes, as it attempts to more closely mimic how the Switch OS behaves.</li> </ul>"},{"location":"changelog-old/#105897-2020-12-01","title":"1.0.5897 - 2020-12-01","text":""},{"location":"changelog-old/#changed_210","title":"Changed","text":"<ul> <li>Added a forced early Z test register.</li> <li>Resolves broken interior volumes on Xenoblade Chronicles: Definitive Edition and Xenoblade Chronicles 2.</li> </ul>"},{"location":"changelog-old/#105895-2020-12-01","title":"1.0.5895 - 2020-12-01","text":""},{"location":"changelog-old/#added_118","title":"Added","text":"<ul> <li>Added a button option to \"Remove All\" in the DLC and Title Update management windows.</li> </ul>"},{"location":"changelog-old/#105888-2020-12-01","title":"1.0.5888 - 2020-12-01","text":""},{"location":"changelog-old/#added_119","title":"Added","text":"<ul> <li>Added the ability for a user to launch games in fullscreen mode. </li> <li>This can be enabled in the options menu or by using a commandline option of \"--fullscreen\".</li> </ul>"},{"location":"changelog-old/#105885-2020-12-01","title":"1.0.5885 - 2020-12-01","text":""},{"location":"changelog-old/#fixed_227","title":"Fixed","text":"<ul> <li>Added missing guest GPU accessor to the hashes computation for shader cache.</li> <li>Existing shader caches will be preserved and migrated to a new version with this update.</li> </ul>"},{"location":"changelog-old/#105883-2020-12-01","title":"1.0.5883 - 2020-12-01","text":""},{"location":"changelog-old/#fixed_228","title":"Fixed","text":"<ul> <li>Fixed a warning of the SystemInfo class constructor for macOS. Cleaned up the info / Info at the end of specific OS class names.</li> </ul>"},{"location":"changelog-old/#105880-2020-12-01","title":"1.0.5880 - 2020-12-01","text":""},{"location":"changelog-old/#fixed_229","title":"Fixed","text":"<ul> <li>Corrected a parsing issue of the MaxAnistropy field that could cause a crash on different system locales.</li> </ul>"},{"location":"changelog-old/#105835-2020-11-27","title":"1.0.5835 - 2020-11-27","text":""},{"location":"changelog-old/#added_120","title":"Added","text":"<ul> <li>Added a preference system to selection of matching textures, where it will pick the \"most perfect\" match available in the texture cache.</li> <li>Fixes white screen issue that appears immediately after loading in The Legend of Zelda: Breath of the Wild.</li> </ul>"},{"location":"changelog-old/#105834-2020-11-27","title":"1.0.5834 - 2020-11-27","text":""},{"location":"changelog-old/#changed_211","title":"Changed","text":"<ul> <li>Disabled resolution scaling on textures smaller than 8px on either width or height. It's very unlikely that textures this small (or thin) contain data that the end user really wants to scale.</li> <li>Fixes overexposed in-game HDR in several Nintendo first-party titles when resolution scaling is enabled.</li> </ul>"},{"location":"changelog-old/#105833-2020-11-27","title":"1.0.5833 - 2020-11-27","text":""},{"location":"changelog-old/#changed_212","title":"Changed","text":"<ul> <li>Added a check when loading the game list that ensures the datetime is valid in current culture.</li> <li>Resolves a rare crash that could occur when sorting the game list by last played datetime if the host PC datetime had been modified.</li> </ul>"},{"location":"changelog-old/#105831-2020-11-27","title":"1.0.5831 - 2020-11-27","text":""},{"location":"changelog-old/#changed_213","title":"Changed","text":"<ul> <li>Cleaned up unnecessary warnings and motion client code.</li> </ul>"},{"location":"changelog-old/#105816-2020-11-24","title":"1.0.5816 - 2020-11-24","text":""},{"location":"changelog-old/#added_121","title":"Added","text":"<ul> <li>Implemented IsRestrictionEnabled call of the pctl service.</li> <li>Fixed an issue where the game Momotaro Dentetsu: Showa, Heisei, Reiwa mo Teiban! would not boot after a save had been created.</li> </ul>"},{"location":"changelog-old/#105815-2020-11-24","title":"1.0.5815 - 2020-11-24","text":""},{"location":"changelog-old/#fixed_230","title":"Fixed","text":"<ul> <li>Fixed IApplicationFunctions::GetSaveDataSize call of the am service.</li> <li>Resolves a crash on boot on The Language of Love (which now goes in-game) and potentially other games that had been suffering from a similar issue.</li> </ul>"},{"location":"changelog-old/#105796-2020-11-21","title":"1.0.5796 - 2020-11-21","text":""},{"location":"changelog-old/#changed_214","title":"Changed","text":"<ul> <li>Cleaned up IApplicationFunctions.</li> <li>Stubbed TryPopFromFriendInvitationStorageChannel.</li> <li>Resolves missing service crashes in Mini Motor Racing X and Fight Crab, which are now playable.</li> </ul>"},{"location":"changelog-old/#105795-2020-11-21","title":"1.0.5795 - 2020-11-21","text":""},{"location":"changelog-old/#fixed_231","title":"Fixed","text":"<ul> <li>Fixed reverb 3d mono having the wrong delay line offset (was using -1 instead of 1). Added this value to be used by all channel variants.</li> <li>Resolves a crash on boot in Resident Evil 6. This title now goes in-game.</li> </ul>"},{"location":"changelog-old/#105794-2020-11-21","title":"1.0.5794 - 2020-11-21","text":""},{"location":"changelog-old/#changed_215","title":"Changed","text":"<ul> <li>Removed an incorrect debug assert within the shader cache code.</li> </ul>"},{"location":"changelog-old/#105793-2020-11-21","title":"1.0.5793 - 2020-11-21","text":""},{"location":"changelog-old/#fixed_232","title":"Fixed","text":"<ul> <li>Fixed an underflow in the setup of delay time within the delay effect.</li> <li>Fixes a regression introduced in Amadeus causing a crash on boot on Shovel Knight: Treasure Trove. The game is once again playable.</li> </ul>"},{"location":"changelog-old/#105792-2020-11-21","title":"1.0.5792 - 2020-11-21","text":""},{"location":"changelog-old/#fixed_233","title":"Fixed","text":"<ul> <li>Fixed an incorrect id for call ListAudioInsAuto in IAudioInManager.</li> </ul>"},{"location":"changelog-old/#105783-2020-11-20","title":"1.0.5783 - 2020-11-20","text":""},{"location":"changelog-old/#changed_216","title":"Changed","text":"<ul> <li>Implemented the following audout service calls: GetAudioOutBufferCount, GetAudioOutPlayedSampleCount, FlushAudioOutBuffers.</li> <li>Resolves crashes therein, and enables the following titles to go in-game: Devil May Cry 2, Devil May Cry 3 Special Edition, Atelier Shallie: Alchemists of the Dusk Sea DX, and others that need these calls.</li> <li>Fixed SetAudioOutVolume and GetAudioOutVolume.</li> </ul>"},{"location":"changelog-old/#105782-2020-11-20","title":"1.0.5782 - 2020-11-20","text":""},{"location":"changelog-old/#changed_217","title":"Changed","text":"<ul> <li>Allowed copy destinations to have a different scale from the source. This has the following effects on resolution scaling:</li> <li>Now works in The Legend of Zelda: Link's Awakening (with some shadow artifacts).</li> <li>No longer blacklists/stops working in some cutscenes in Super Mario Odyssey.</li> </ul>"},{"location":"changelog-old/#105778-2020-11-20","title":"1.0.5778 - 2020-11-20","text":""},{"location":"changelog-old/#changed_218","title":"Changed","text":"<ul> <li>Compressed &lt;-&gt; uncompressed copies are now performed using pixel buffer objects.</li> <li>Fixes most button text and large UI text in Splatoon 2. Remaining text issues in this game will be resolved in a future PR.</li> <li>Fixes cubemap mip levels below 4x4 not being copied in Mario Kart 8 Deluxe. No visual impact at this time.</li> <li>May improve Unreal Engine \u00be games that contain black small mipmap levels. Does not fix them entirely.</li> </ul>"},{"location":"changelog-old/#105775-2020-11-19","title":"1.0.5775 - 2020-11-19","text":""},{"location":"changelog-old/#added_122","title":"Added","text":"<ul> <li>Added PTC decompression error check and treats it as a loading failure, allowing a fallback to the backup file instead of crashing.</li> </ul>"},{"location":"changelog-old/#105773-2020-11-19","title":"1.0.5773 - 2020-11-19","text":""},{"location":"changelog-old/#added_123","title":"Added","text":"<ul> <li>Added olsc:u service and stubbed some associated calls.</li> <li>Fixes boot-time crash for Animal Crossing: New Horizons update version 1.6.0.</li> </ul>"},{"location":"changelog-old/#105763-2020-11-18","title":"1.0.5763 - 2020-11-18","text":""},{"location":"changelog-old/#added_124","title":"Added","text":"<ul> <li>Added click-to-toggle functionality for Vsync on/off and Docked/Handheld modes in the status bar (bottom of the Ryujinx window). Simply click once on the respective item in the status bar to toggle.</li> </ul>"},{"location":"changelog-old/#105761-2020-11-18","title":"1.0.5761 - 2020-11-18","text":""},{"location":"changelog-old/#added_125","title":"Added","text":"<ul> <li>Added the ability to use a keybinding to toggle between Docked and Handheld modes at any time. To toggle between Docked and Handheld, press the F9 key.</li> </ul>"},{"location":"changelog-old/#105756-2020-11-18","title":"1.0.5756 - 2020-11-18","text":""},{"location":"changelog-old/#changed_219","title":"Changed","text":"<ul> <li>Modified buffer textures to restrict layout conversions from being performed.</li> <li>Fixes possible memory corruption in games that use buffer textures e.g. Unreal Engine 4.</li> </ul>"},{"location":"changelog-old/#105755-2020-11-18","title":"1.0.5755 - 2020-11-18","text":""},{"location":"changelog-old/#changed_220","title":"Changed","text":"<ul> <li>Added FP16/FP32 fast paths for Fcvt_S, Fcvtl_V &amp; Fcvtn_V instructions.</li> <li>Modified HardwareCapabilities to use CpuId.</li> </ul>"},{"location":"changelog-old/#105754-2020-11-18","title":"1.0.5754 - 2020-11-18","text":""},{"location":"changelog-old/#changed_221","title":"Changed","text":"<ul> <li>Updated &amp; cleaned up code to take advantage of .NET 5 functions/bugfixes. No expected changes in any games.</li> </ul>"},{"location":"changelog-old/#105753-2020-11-18","title":"1.0.5753 - 2020-11-18","text":""},{"location":"changelog-old/#fixed_234","title":"Fixed","text":"<ul> <li>Fixed possible parsing errors of information on NSOs at load time.</li> </ul>"},{"location":"changelog-old/#105742-2020-11-17","title":"1.0.5742 - 2020-11-17","text":""},{"location":"changelog-old/#changed_222","title":"Changed","text":"<ul> <li>Removed some redundant code related to OpenGL depth testing. Should not affect any games.</li> </ul>"},{"location":"changelog-old/#105740-2020-11-17","title":"1.0.5740 - 2020-11-17","text":""},{"location":"changelog-old/#fixed_235","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.5624 (PR 1670) that affected homebrew using nouveau, and possibly OpenGL games, where the full texture data was not copied.</li> </ul>"},{"location":"changelog-old/#105739-2020-11-17","title":"1.0.5739 - 2020-11-17","text":""},{"location":"changelog-old/#changed_223","title":"Changed","text":"<ul> <li>Updated README.MD for clarity and a working .NET 5 build command.</li> </ul>"},{"location":"changelog-old/#105738-2020-11-17","title":"1.0.5738 - 2020-11-17","text":""},{"location":"changelog-old/#fixed_236","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.5674 (PR 1701 - Shader Cache implementation) that caused the Linux client to crash on startup.</li> </ul>"},{"location":"changelog-old/#105737-2020-11-17","title":"1.0.5737 - 2020-11-17","text":""},{"location":"changelog-old/#fixed_237","title":"Fixed","text":"<ul> <li>Fixed a possible crash at startup when cleaning up missing shaders.</li> </ul>"},{"location":"changelog-old/#105736-2020-11-17","title":"1.0.5736 - 2020-11-17","text":""},{"location":"changelog-old/#fixed_238","title":"Fixed","text":"<ul> <li>Resolved an issue causing the virtual address of texture descriptors not be cleaned up when caching, instead cleaning texture format and swizzle.</li> <li>Should fix high duplication and possible texture corruption for certain games introduced with the advent of disk shader cache.  NOTE: This will invalidate all cache layers as this is a critical bugfix on the cache saving system.</li> </ul>"},{"location":"changelog-old/#105727-2020-11-16","title":"1.0.5727 - 2020-11-16","text":""},{"location":"changelog-old/#fixed_239","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.5617 (PR 1647) that negatively affected performance in The Legend of Zelda: Link's Awakening.</li> </ul>"},{"location":"changelog-old/#105726-2020-11-15","title":"1.0.5726 - 2020-11-15","text":""},{"location":"changelog-old/#fixed_240","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.5718 (PR 1688) that enabled VR by default. This caused graphical issues in games such as Super Smash Bros. Ultimate when VR mode is not used.</li> </ul>"},{"location":"changelog-old/#105718-2020-11-15","title":"1.0.5718 - 2020-11-15","text":""},{"location":"changelog-old/#added_126","title":"Added","text":"<ul> <li>Implemented VR rendering in games supported by the Toy-Con VR Goggles.</li> </ul>"},{"location":"changelog-old/#105709-2020-11-15","title":"1.0.5709 - 2020-11-15","text":""},{"location":"changelog-old/#added_127","title":"Added","text":"<ul> <li>Added a missing error message for ApplicationNotFound.</li> </ul>"},{"location":"changelog-old/#105708-2020-11-15","title":"1.0.5708 - 2020-11-15","text":""},{"location":"changelog-old/#changed_224","title":"Changed","text":"<ul> <li>Changed a menu option to be camel case where it had not been previously.</li> </ul>"},{"location":"changelog-old/#105707-2020-11-15","title":"1.0.5707 - 2020-11-15","text":""},{"location":"changelog-old/#changed_225","title":"Changed","text":"<ul> <li>Stopped the GUI from prompting the user to disable debug features in debug builds.</li> </ul>"},{"location":"changelog-old/#105705-2020-11-15","title":"1.0.5705 - 2020-11-15","text":""},{"location":"changelog-old/#changed_226","title":"Changed","text":"<ul> <li>Migrated project and CI to .NET 5. This update brings across the board improvements to JIT performance.</li> <li>Minor FPS improvements in some games.</li> <li>Significant performance increase in some NVDEC videos, especially on client CPUs that do not have hyperthreading. Up to 130% increase in performance was observed in Super Smash Bros. Ultimate intro video during testing.</li> </ul>"},{"location":"changelog-old/#105683-2020-11-12","title":"1.0.5683 - 2020-11-12","text":""},{"location":"changelog-old/#fixed_241","title":"Fixed","text":"<ul> <li>Fixed patch sets toggling for mods.</li> </ul>"},{"location":"changelog-old/#105682-2020-11-12","title":"1.0.5682 - 2020-11-12","text":""},{"location":"changelog-old/#added_128","title":"Added","text":"<ul> <li>Added an 'Apply' button in the Options menu. This allows setting &amp; saving options without having to close the menu.</li> </ul>"},{"location":"changelog-old/#105678-2020-11-12","title":"1.0.5678 - 2020-11-12","text":""},{"location":"changelog-old/#changed_227","title":"Changed","text":"<ul> <li>Modified size hints for render targets to use \"Screen Scissor\" instead of viewport 0's width.</li> <li>Fixes a regression in Hyrule Warriors: Age of Calamity Demo cubemaps.</li> </ul>"},{"location":"changelog-old/#105674-2020-11-12","title":"1.0.5674 - 2020-11-12","text":""},{"location":"changelog-old/#added_129","title":"Added","text":"<ul> <li>Implemented a disk shader cache.</li> <li>Progressively reduces stutter &amp; FPS drops on subsequent play of a game.</li> <li>Optimized shader compile process to be more efficient.</li> </ul>"},{"location":"changelog-old/#105667-2020-11-11","title":"1.0.5667 - 2020-11-11","text":""},{"location":"changelog-old/#fixed_242","title":"Fixed","text":"<ul> <li>Fixed a bug that caused Super Mario Odyssey to behave as if it was in handheld mode, even when Docked mode was enabled.</li> </ul>"},{"location":"changelog-old/#105659-2020-11-10","title":"1.0.5659 - 2020-11-10","text":""},{"location":"changelog-old/#fixed_243","title":"Fixed","text":"<ul> <li>Do not report unmapped pages as modified to the GPU.</li> <li>Fixes a regression caused by range tracking (PR #1272) that could cause a few games (like Higurashi no Naku Koro ni Hou) to crash.</li> </ul>"},{"location":"changelog-old/#105655-2020-11-09","title":"1.0.5655 - 2020-11-09","text":""},{"location":"changelog-old/#fixed_244","title":"Fixed","text":"<ul> <li>Fix a bug that could cause data loss when copying on rendering to a texture.</li> <li>Fixes color bleeding on Luigi's Mansion 3 caused by dynamic resolution change, improves reflections on Mario Kart 8 Deluxe.</li> </ul>"},{"location":"changelog-old/#105653-2020-11-09","title":"1.0.5653 - 2020-11-09","text":""},{"location":"changelog-old/#changed_228","title":"Changed","text":"<ul> <li>Implement ATOM shader instruction and fix offset decoding on the ATOMS shader instruction.</li> <li>Might improve rendering on games using this instruction, although no improvement was observed on games know to use them.</li> </ul>"},{"location":"changelog-old/#105650-2020-11-09","title":"1.0.5650 - 2020-11-09","text":""},{"location":"changelog-old/#changed_229","title":"Changed","text":"<ul> <li>Simplify bindless textures handling.</li> <li>Might cause minor changes to games using bindless textures, such as Super Mario Party.</li> </ul>"},{"location":"changelog-old/#105644-2020-11-08","title":"1.0.5644 - 2020-11-08","text":""},{"location":"changelog-old/#changed_230","title":"Changed","text":"<ul> <li>Un-stubbed &amp; implemented the following IPC calls:</li> <li>nn::apm::IManager (fully implemented)</li> <li>nn::apm::ISession (fully implemented)</li> <li>nn::apm::ISystemManager (partially implemented)</li> <li>Fixed some incorrect calls in nn::appletAE::ICommonStateGetter</li> </ul>"},{"location":"changelog-old/#105643-2020-11-08","title":"1.0.5643 - 2020-11-08","text":""},{"location":"changelog-old/#changed_231","title":"Changed","text":"<ul> <li>Modified shader code to use explicit binding points rather than calling the OpenGL 'glGet*Location' functions.</li> <li>Should mildly increase binding performance.</li> </ul>"},{"location":"changelog-old/#105639-2020-11-07","title":"1.0.5639 - 2020-11-07","text":""},{"location":"changelog-old/#fixed_245","title":"Fixed","text":"<ul> <li>Update rasterizer discard before texture clears.</li> <li>Fixes shadow trail bug on Xenoblade Chronicles 2.</li> </ul>"},{"location":"changelog-old/#105636-2020-11-06","title":"1.0.5636 - 2020-11-06","text":""},{"location":"changelog-old/#added_130","title":"Added","text":"<ul> <li>Added a check to ensure GPU commands are in the queue before continuing.</li> <li>Fixes FIFO % being stuck at 50% on some games.</li> </ul>"},{"location":"changelog-old/#105634-2020-11-06","title":"1.0.5634 - 2020-11-06","text":""},{"location":"changelog-old/#changed_232","title":"Changed","text":"<ul> <li>Updated README.md</li> </ul>"},{"location":"changelog-old/#105629-2020-11-06","title":"1.0.5629 - 2020-11-06","text":""},{"location":"changelog-old/#changed_233","title":"Changed","text":"<ul> <li>Enabled expanded logging of NSO files: Module name, Libraries and SDK Version are now logged when they are available. Also cleaned up NsoExecutable class a bit.</li> </ul>"},{"location":"changelog-old/#105628-2020-11-06","title":"1.0.5628 - 2020-11-06","text":""},{"location":"changelog-old/#fixed_246","title":"Fixed","text":"<ul> <li>Fixed a regression introduced in 1.0.5584 (PR 1643) that caused the next boot of a just auto-updated emulator to try to launch itself as a game.</li> </ul>"},{"location":"changelog-old/#105626-2020-11-06","title":"1.0.5626 - 2020-11-06","text":""},{"location":"changelog-old/#added_131","title":"Added","text":"<ul> <li>Added support for single precision constants for double precision operations. No expected changes in any games.</li> </ul>"},{"location":"changelog-old/#105625-2020-11-06","title":"1.0.5625 - 2020-11-06","text":""},{"location":"changelog-old/#changed_234","title":"Changed","text":"<ul> <li>Modified buffer textures to have their data inherited by using the same buffer storage (instead of matching aligned sizes).</li> <li>Fixes a random crash in Hyrule Warriors: Age of Calamity Demo and may improve other games that use buffer textures.</li> </ul>"},{"location":"changelog-old/#105624-2020-11-06","title":"1.0.5624 - 2020-11-06","text":""},{"location":"changelog-old/#fixed_247","title":"Fixed","text":"<ul> <li>Corrected the bytes per pixel value being passed. This fixes memory corruption that occurs by too much data being copied in some UE4 games.</li> <li>BRAVELY DEFAULT II Demo and Remothered: Broken Porcelain get further in the boot process, both able to reach the title screen now, before crashing. Other UE4 games may also benefit.</li> </ul>"},{"location":"changelog-old/#105617-2020-11-05","title":"1.0.5617 - 2020-11-05","text":""},{"location":"changelog-old/#fixed_248","title":"Fixed","text":"<ul> <li>Increased depth-stencil accuracy by modifying zeta formats to only be valid for depth-stencil render targets. No expected changes in any games.</li> </ul>"},{"location":"changelog-old/#105611-2020-11-05","title":"1.0.5611 - 2020-11-05","text":""},{"location":"changelog-old/#fixed_249","title":"Fixed","text":"<ul> <li>Miscellaneous CPU emulation code fix.</li> </ul>"},{"location":"changelog-old/#105604-2020-11-02","title":"1.0.5604 - 2020-11-02","text":""},{"location":"changelog-old/#added_132","title":"Added","text":"<ul> <li>Added seamless cubemap flag in sampler parameters.</li> <li>Removes hard edges from cubemaps, and specifically improves low resolution cubemaps (used for glossy surfaces). Improvements are visible in Mario Kart 8 Deluxe.</li> </ul>"},{"location":"changelog-old/#105603-2020-11-02","title":"1.0.5603 - 2020-11-02","text":""},{"location":"changelog-old/#changed_235","title":"Changed","text":"<ul> <li>Support resolution scaling on images. Correctly blacklist for SUST. Move logic out of the backend.</li> <li>Fixes normal-map decals in Xenoblade Chronicles: Definitive Edition.</li> <li>Should cause Paper Mario and Dead or Alive to force to 1x/native resolution instead of just breaking.</li> <li>May fix other strange issues related to resolution scaling.</li> </ul>"},{"location":"changelog-old/#105597-2020-11-01","title":"1.0.5597 - 2020-11-01","text":""},{"location":"changelog-old/#fixed_250","title":"Fixed","text":"<ul> <li>Fixed compressed to non-compressed texture copy size. No expected changes in any games.</li> </ul>"},{"location":"changelog-old/#105596-2020-11-01","title":"1.0.5596 - 2020-11-01","text":""},{"location":"changelog-old/#changed_236","title":"Changed","text":"<ul> <li>Removed unused texture and sampler pool invalidation code. No expected changes in any games.</li> </ul>"},{"location":"changelog-old/#105584-2020-10-29","title":"1.0.5584 - 2020-10-29","text":""},{"location":"changelog-old/#changed_237","title":"Changed","text":"<ul> <li>Command line arguments are now preserved when the auto-updater restarts Ryujinx. This prevents unexpected/unwanted behavior that could delete files in a custom specified user folder.</li> </ul>"},{"location":"changelog-old/#105583-2020-10-29","title":"1.0.5583 - 2020-10-29","text":""},{"location":"changelog-old/#changed_238","title":"Changed","text":"<ul> <li>Miscellaneous resolution scaling change: now scales the texture size before sending it to the OpenGL backend.</li> <li>Resolution scaling now works on games that present BGRA textures such as Dragon Marked for Death among others.</li> </ul>"},{"location":"changelog-old/#105580-2020-10-28","title":"1.0.5580 - 2020-10-28","text":""},{"location":"changelog-old/#added_133","title":"Added","text":"<ul> <li>Added scaling for Texture2DArray when using TexelFetch.</li> <li>Fixes resolution scaling in Hyrule Warriors: Age of Calamity Demo.</li> </ul>"},{"location":"changelog-old/#105579-2020-10-28","title":"1.0.5579 - 2020-10-28","text":""},{"location":"changelog-old/#changed_239","title":"Changed","text":"<ul> <li>Implemented a stop-gap solution to avoid sampler conflicts on bindless samplers with the same name. This should suffice until proper bindless texture support is implemented.</li> <li>Improves rendering in Super Mario Party.</li> </ul>"},{"location":"changelog-old/#105577-2020-10-28","title":"1.0.5577 - 2020-10-28","text":""},{"location":"changelog-old/#changed_240","title":"Changed","text":"<ul> <li>Improved motion controls.</li> <li>Reduces input lag.</li> <li>Alt slots now work for paired joycons.</li> <li>Fixes issue with input settings not saving unless default profile is loaded.</li> </ul>"},{"location":"changelog-old/#105573-2020-10-25","title":"1.0.5573 - 2020-10-25","text":""},{"location":"changelog-old/#fixed_251","title":"Fixed","text":"<ul> <li>Updated vertex buffer handle null checks to prevent draws with invalid states.</li> </ul>"},{"location":"changelog-old/#105569-2020-10-25","title":"1.0.5569 - 2020-10-25","text":""},{"location":"changelog-old/#fixed_252","title":"Fixed","text":"<ul> <li>Miscellaneous transform feedback fixes.</li> <li>Fixes T-pose in SNK Heroines: Tag Team and black grass in Xenoblade Chronicles: Definitive Edition.</li> </ul>"},{"location":"changelog-old/#105568-2020-10-25","title":"1.0.5568 - 2020-10-25","text":""},{"location":"changelog-old/#changed_241","title":"Changed","text":"<ul> <li>Modified ASTC texture data update handling to skip updates if the data did not change.</li> <li>Improves performance on SNK Heroines and potentially other games that use ASTC textures similarly.</li> </ul>"},{"location":"changelog-old/#105567-2020-10-25","title":"1.0.5567 - 2020-10-25","text":""},{"location":"changelog-old/#added_134","title":"Added","text":"<ul> <li>Implemented CAL and RET shader instructions.</li> <li>Fixes a regression introduced in 1.0.5514 (PR 1609) that could cause a crash during battle in Fire Emblem: Three Houses.</li> </ul>"},{"location":"changelog-old/#105553-2020-10-21","title":"1.0.5553 - 2020-10-21","text":""},{"location":"changelog-old/#changed_242","title":"Changed","text":"<ul> <li>Removed Reflection.Emit's dependency on CPU and Shader projects.</li> <li>These projects are now more readily compatible with any potential future AOT implementations.</li> </ul>"},{"location":"changelog-old/#105552-2020-10-21","title":"1.0.5552 - 2020-10-21","text":""},{"location":"changelog-old/#changed_243","title":"Changed","text":"<ul> <li>Added a missing null check on image binding.</li> <li>Resolves a regression introduced in 1.0.5549 (PR 1625) that could result in a crash.</li> </ul>"},{"location":"changelog-old/#105549-2020-10-20","title":"1.0.5549 - 2020-10-20","text":""},{"location":"changelog-old/#fixed_253","title":"Fixed","text":"<ul> <li>Fixed image binding format.</li> <li>Resolves broken fire &amp; ice effects in Kirby Star Allies as well as incorrect dark/black ground in Xenoblade Chronicles Definitive Edition.</li> </ul>"},{"location":"changelog-old/#105548-2020-10-20","title":"1.0.5548 - 2020-10-20","text":""},{"location":"changelog-old/#fixed_254","title":"Fixed","text":"<ul> <li>Changed buffer textures to ensure storage is set when binding an image.</li> <li>Fixes Pascal (NVIDIA GTX 10-series) GPUs suffering a driver crash when booting Unreal Engine 4 games. Note: there are remaining issues with UE4 games to be addressed in the future.</li> </ul>"},{"location":"changelog-old/#105545-2020-10-17","title":"1.0.5545 - 2020-10-17","text":""},{"location":"changelog-old/#fixed_255","title":"Fixed","text":"<ul> <li>Miscellaneous geometry shader fix. No known changes in games.</li> </ul>"},{"location":"changelog-old/#105543-2020-10-16","title":"1.0.5543 - 2020-10-16","text":""},{"location":"changelog-old/#changed_244","title":"Changed","text":"<ul> <li>Improved texture/buffer modification detection and flushing methods.</li> <li>Fixes missing thumbnail pictures in many games as well as the passport photo on Animal Crossing: New Horizons.</li> <li>Fixes broken logic in Snipperclips/Plus, Pooplers, Shanky: The Vegan's Nightmare and potentially other games that use similar logic.</li> </ul>"},{"location":"changelog-old/#105525-2020-10-13","title":"1.0.5525 - 2020-10-13","text":""},{"location":"changelog-old/#fixed_256","title":"Fixed","text":"<ul> <li>Fixed LOP3 (cbuf) shader instruction encoding.</li> <li>Resolves rendering issues on DOOM 64. The game is now playable.</li> </ul>"},{"location":"changelog-old/#105523-2020-10-13","title":"1.0.5523 - 2020-10-13","text":""},{"location":"changelog-old/#changed_245","title":"Changed","text":"<ul> <li>Replaced \"Host FPS\" counter with GPU Command Queue Load reading \"FIFO %\".</li> </ul>"},{"location":"changelog-old/#105522-2020-10-13","title":"1.0.5522 - 2020-10-13","text":""},{"location":"changelog-old/#added_135","title":"Added","text":"<ul> <li>Implemented several 32-bit CPU instructions.</li> <li>Super Mario Galaxy is now bootable inside Super Mario 3D All-Stars.</li> <li>Fixes missing opcode crashes on Dies irae Amantes amentes and Sky Gamblers: Storm Raiders. Note: neither of these games are able to go in-game still, but Sky Gamblers: Storm Raiders now boots, playing music briefly at a black screen.</li> </ul>"},{"location":"changelog-old/#105517-2020-10-13","title":"1.0.5517 - 2020-10-13","text":""},{"location":"changelog-old/#fixed_257","title":"Fixed","text":"<ul> <li>Fixed incorrect OpenGL BlendFunc enumeration values</li> <li>The value of some OpenGL BlendFunc values were incorrect.</li> <li>Fixes broken shadows in Super Mario Galaxy, and potentially other games with similar behaviour.</li> </ul>"},{"location":"changelog-old/#105516-2020-10-13","title":"1.0.5516 - 2020-10-13","text":""},{"location":"changelog-old/#fixed_258","title":"Fixed","text":"<ul> <li>Fixed output component register ordering on pixel shaders</li> <li>In some instances, the incorrect register was being copied to an output component.</li> <li>Improves rendering in Super Mario Galaxy, and potentially other games with similar behaviour.</li> </ul>"},{"location":"changelog-old/#105515-2020-10-12","title":"1.0.5515 - 2020-10-12","text":""},{"location":"changelog-old/#fixed_259","title":"Fixed","text":"<ul> <li>Fixed a error when dual source blend was used.</li> <li>Fixes rendering inside the observatory on Super Mario Galaxy.</li> </ul>"},{"location":"changelog-old/#105514-2020-10-12","title":"1.0.5514 - 2020-10-12","text":""},{"location":"changelog-old/#fixed_260","title":"Fixed","text":"<ul> <li>Implemented LEA.HI shader instruction.</li> <li>Fixes corrupted colors on some characters on Super Mario Galaxy (example: Rosalina), and other graphical issues. Might also fix graphical issues on other games.</li> </ul>"},{"location":"changelog-old/#105513-2020-10-12","title":"1.0.5513 - 2020-10-12","text":""},{"location":"changelog-old/#fixed_261","title":"Fixed","text":"<ul> <li>Implemented support for constant buffer slot indexing, with the LDC shader instruction.</li> <li>Fixes some 3D models not rendering on Super Mario 3D All-Stars.</li> </ul>"},{"location":"changelog-old/#105499-2020-10-11","title":"1.0.5499 - 2020-10-11","text":""},{"location":"changelog-old/#fixed_262","title":"Fixed","text":"<ul> <li>Fixed NVDEC FFMPEG related crash that could occur when frame sizes change.</li> <li>Resolves random crashes in Super Mario 3D All-Stars main menu/launcher. May also fix similar crashes in other games.</li> </ul>"},{"location":"changelog-old/#105496-2020-10-10","title":"1.0.5496 - 2020-10-10","text":""},{"location":"changelog-old/#changed_246","title":"Changed","text":"<ul> <li>Disabled the async buffer in SurfaceFlinger.</li> <li>Fixes a memory corruption on Super Mario All-Stars 3D, which now has improved compatibility but still does not go in-game without modifications. May also fix crashes on other games.</li> </ul>"},{"location":"changelog-old/#105493-2020-10-09","title":"1.0.5493 - 2020-10-09","text":""},{"location":"changelog-old/#added_136","title":"Added","text":"<ul> <li>Added a confirmation dialog prompt to the user when attempting to close the emulator while a game is being emulated.</li> </ul>"},{"location":"changelog-old/#105492-2020-10-09","title":"1.0.5492 - 2020-10-09","text":""},{"location":"changelog-old/#fixed_263","title":"Fixed","text":"<ul> <li>Fixed an issue where attempting to stop emulation while playing an embedded game within a multi-game collection would instead cause emulation to restart.</li> </ul>"},{"location":"changelog-old/#105485-2020-10-02","title":"1.0.5485 - 2020-10-02","text":""},{"location":"changelog-old/#changed_247","title":"Changed","text":"<ul> <li>Improved BRX target detection heuristics.</li> <li>Koi no Hanasaku Hyakkaen now renders properly. This may also potentially affect other games.</li> </ul>"},{"location":"changelog-old/#105480-2020-10-01","title":"1.0.5480 - 2020-10-01","text":""},{"location":"changelog-old/#fixed_264","title":"Fixed","text":"<ul> <li>Support 2D array ASTC texture decoding.</li> <li>Fixes black objects on Donkey Kong Country: Tropical Freeze.</li> </ul>"},{"location":"changelog-old/#105476-2020-09-30","title":"1.0.5476 - 2020-09-30","text":""},{"location":"changelog-old/#fixed_265","title":"Fixed","text":"<ul> <li>Fixed a bug in GetStream. This function is not currently used but may be used in the future.</li> </ul>"},{"location":"changelog-old/#105468-2020-09-30","title":"1.0.5468 - 2020-09-30","text":""},{"location":"changelog-old/#changed_248","title":"Changed","text":"<ul> <li>Miscellaneous legacy CPU code cleanup.</li> </ul>"},{"location":"changelog-old/#105459-2020-09-29","title":"1.0.5459 - 2020-09-29","text":""},{"location":"changelog-old/#added_137","title":"Added","text":"<ul> <li>Implemented motion controls.</li> <li>See https://github.com/ryujinx-mirror/ryujinx/wiki/Ryujinx-Setup-&amp;-Configuration-Guide#motion-controls for a usage guide.</li> </ul>"},{"location":"changelog-old/#105457-2020-09-29","title":"1.0.5457 - 2020-09-29","text":""},{"location":"changelog-old/#changed_249","title":"Changed","text":"<ul> <li>Modified the auto-updater to not notify for an update if the Appveyor package is still building on the website.</li> </ul>"},{"location":"changelog-old/#105456-2020-09-29","title":"1.0.5456 - 2020-09-29","text":""},{"location":"changelog-old/#changed_250","title":"Changed","text":"<ul> <li>Modified one-dimensional texture handling to be instead treated as two-dimensional textures with a height of 1.</li> <li>Fixes fog/mist effects in Monster Hunter Generations Ultimate and potentially other one-dimensional texture situations.</li> </ul>"},{"location":"changelog-old/#105455-2020-09-29","title":"1.0.5455 - 2020-09-29","text":""},{"location":"changelog-old/#added_138","title":"Added","text":"<ul> <li>Implemented auto-updater functionality.</li> <li>Ryujinx will now check on startup for the latest official master build and prompt the user to download &amp; install it if a new version is found. It can also be performed by clicking Help &gt; Check for Updates.</li> <li>You may disable the 'Check for updates on launch' function in Options&gt; Settings &gt; General tab.</li> </ul>"},{"location":"changelog-old/#105442-2020-09-27","title":"1.0.5442 - 2020-09-27","text":""},{"location":"changelog-old/#added_139","title":"Added","text":"<ul> <li>Implemented a basic error applet.</li> <li>Fixes crashes in REKT and Ghost Blade HD, both of which are now considered playable.</li> <li>Adds certain necessary functionality for LDN.</li> </ul>"},{"location":"changelog-old/#105439-2020-09-26","title":"1.0.5439 - 2020-09-26","text":""},{"location":"changelog-old/#changed_251","title":"Changed","text":"<ul> <li>Changed texture copy handling to avoid issues with overlapping textures.</li> <li>Fixes a regression introduced in 1.0.5326 (PR 1408), resolving graphical issues in Professor Layton, Snack World, and potentially other games that use OpenGL on the guest.</li> </ul>"},{"location":"changelog-old/#105428-2020-09-25","title":"1.0.5428 - 2020-09-25","text":""},{"location":"changelog-old/#changed_252","title":"Changed","text":"<ul> <li>Isolated more active services to their own threads: SurfaceFlinger processes, HID, and Time services.</li> </ul>"},{"location":"changelog-old/#105418-2020-09-23","title":"1.0.5418 - 2020-09-23","text":""},{"location":"changelog-old/#changed_253","title":"Changed","text":"<ul> <li>Implemented small indexed draws and primitive topology override. This affects graphics emulation for games that use the Vulkan API on the Switch.</li> <li>Enables graphics to be rendered on Turok 2, Doom 64, and other games that use the Vulkan API.</li> <li>Miscellaneous minor gpu fixes.</li> </ul>"},{"location":"changelog-old/#105417-2020-09-23","title":"1.0.5417 - 2020-09-23","text":""},{"location":"changelog-old/#changed_254","title":"Changed","text":"<ul> <li>Return \"NotAvailable\" when no UserChannel data is present.</li> <li>Fixes a crashing regression in Splatoon 2 and Super Kirby Clash (among possible others) introduced in 1.0.5396 (PR 1560).</li> </ul>"},{"location":"changelog-old/#105414-2020-09-23","title":"1.0.5414 - 2020-09-23","text":""},{"location":"changelog-old/#changed_255","title":"Changed","text":"<ul> <li>Audio renderer services are now processed in a separate thread.</li> <li>Fixes audio stutter in certain conditions introduced in 1.0.5402 (PR 1447).</li> </ul>"},{"location":"changelog-old/#105402-2020-09-21","title":"1.0.5402 - 2020-09-21","text":""},{"location":"changelog-old/#changed_256","title":"Changed","text":"<ul> <li>This is part 1 of an intended 4 part IPC refactor. Part 1: Explicit IPC Servers to match Horizon IPC implementation and miscellaneous fixes.</li> <li>Fixes Ryujinx application hang on certain games when emulation is stopped or when the application is commanded to exit.</li> </ul>"},{"location":"changelog-old/#105398-2020-09-21","title":"1.0.5398 - 2020-09-21","text":""},{"location":"changelog-old/#fixed_266","title":"Fixed","text":"<ul> <li>Fixed a texture bug revealed by 1.0.5326 (PR 1408).</li> <li>Resolves graphical regressions in Hatsune Miku: Project DIVA Mega mix and a few other games.</li> </ul>"},{"location":"changelog-old/#105396-2020-09-20","title":"1.0.5396 - 2020-09-20","text":""},{"location":"changelog-old/#added_140","title":"Added","text":"<ul> <li>Implemented basic multi-program support.</li> <li>Adds basic support for loading multiple NCA's. Improves support for Super Mario 3D All-Stars. </li> </ul>"},{"location":"changelog-old/#105395-2020-09-20","title":"1.0.5395 - 2020-09-20","text":""},{"location":"changelog-old/#changed_257","title":"Changed","text":"<ul> <li>Align register index between output targets on fragment shaders</li> <li>Fixes behaviour in certain games where components would be incorrectly copied to fragment shader outputs. Improves Turok 2, and potentially other Vulkan-based games. </li> </ul>"},{"location":"changelog-old/#105391-2020-09-19","title":"1.0.5391 - 2020-09-19","text":""},{"location":"changelog-old/#added_141","title":"Added","text":"<ul> <li>Stubbed/implemented ListQualifiedUsers and SetTouchScreenConfiguration calls.</li> <li>Fixes missing service crashes in Clubhouse Games: 51 Worldwide Classics, Dr. Kawashima's Brain Training, Cyber Protocol, Bulletstorm: Duke of Switch Edition, Catherine Full Body, Truck &amp; Logistics Simulator, CONTRA: ROGUE CORPS, Warhammer 40,000: Space Wolf, Borderlands 2: Game of the Year Edition, Our Two Bedroom Story, Grandia HD Collection, XCOM 2 Collection, Kissed by the Highest Bidder, Love Letter from Thief X, Baldur's Gate and Baldur's Gate II: Enhanced Editions, Planescape: Torment and Icewind Dale: Enhanced Editions, Psikyo Shooting Stars Alpha, Psikyo Shooting Stars Bravo, LA-MULANA 1&amp;2, and possibly other games that are not yet tested in the Ryujinx game compatibility list.</li> </ul>"},{"location":"changelog-old/#105390-2020-09-19","title":"1.0.5390 - 2020-09-19","text":""},{"location":"changelog-old/#changed_258","title":"Changed","text":"<ul> <li>Moved the \"Open Logs Folder\" function/button out from the application's Settings window and instead placed it under the main window File &gt; menu.</li> </ul>"},{"location":"changelog-old/#105389-2020-09-19","title":"1.0.5389 - 2020-09-19","text":""},{"location":"changelog-old/#added_142","title":"Added","text":"<ul> <li>Stubbed/implemented GetCompletionEvent and AddPlayHistory calls.</li> <li>Fixes missing service crash in Worms W.M.D.</li> </ul>"},{"location":"changelog-old/#105388-2020-09-19","title":"1.0.5388 - 2020-09-19","text":""},{"location":"changelog-old/#added_143","title":"Added","text":"<ul> <li>Stubbed several Begin/EndBlockingHomeButton calls.</li> <li>Fixes network related crashes in ARMS.</li> </ul>"},{"location":"changelog-old/#105387-2020-09-19","title":"1.0.5387 - 2020-09-19","text":""},{"location":"changelog-old/#added_144","title":"Added","text":"<ul> <li>Stubbed SetShimLibraryVersion service call.</li> <li>Fixes missing service crash in Puzzle Book.</li> </ul>"},{"location":"changelog-old/#105386-2020-09-19","title":"1.0.5386 - 2020-09-19","text":""},{"location":"changelog-old/#fixed_267","title":"Fixed","text":"<ul> <li>Fixes stack overflow crash in a few games, including Blaster Master Zero 2 and Terraria.</li> </ul>"},{"location":"changelog-old/#105383-2020-09-19","title":"1.0.5383 - 2020-09-19","text":""},{"location":"changelog-old/#changed_259","title":"Changed","text":"<ul> <li>JIT optimization: Reorder blocks placing cold blocks at the end of the function.</li> <li>Might improve speed of some games slightly.</li> </ul>"},{"location":"changelog-old/#105381-2020-09-19","title":"1.0.5381 - 2020-09-19","text":""},{"location":"changelog-old/#fixed_268","title":"Fixed","text":"<ul> <li>Better viewport flipping method.</li> <li>Fixes upside down screen on some games on AMD, Intel and old NVIDIA GPUs. Example: Fire Emblem Three Houses on AMD.</li> <li>Better depth mode detection method.</li> <li>Fixes lighting issues in a few games, including Zelda Link's Awakening and Burnout Paradise Remastered.</li> </ul>"},{"location":"changelog-old/#105374-2020-09-19","title":"1.0.5374 - 2020-09-19","text":""},{"location":"changelog-old/#fixed_269","title":"Fixed","text":"<ul> <li>Fixes threshold for control stick buttons reported to games.</li> </ul>"},{"location":"changelog-old/#105346-2020-09-12","title":"1.0.5346 - 2020-09-12","text":""},{"location":"changelog-old/#fixed_270","title":"Fixed","text":"<ul> <li>Fixes debug Config.json using resolution scaling 2x by default.</li> </ul>"},{"location":"changelog-old/#105341-2020-09-11","title":"1.0.5341 - 2020-09-11","text":""},{"location":"changelog-old/#changed_260","title":"Changed","text":"<ul> <li>Miscellaneous CPU emulation code optimization.</li> </ul>"},{"location":"changelog-old/#105327-2020-09-10","title":"1.0.5327 - 2020-09-10","text":""},{"location":"changelog-old/#fixed_271","title":"Fixed","text":"<ul> <li>Allow swizzles to match with \"undefined\" components</li> <li>Fixes motion blur and depth of field in Burnout Paradise.</li> </ul>"},{"location":"changelog-old/#105326-2020-09-10","title":"1.0.5326 - 2020-09-10","text":""},{"location":"changelog-old/#fixed_272","title":"Fixed","text":"<ul> <li>Write-back texture data from memory when it falls out of the cache, and perform untracked buffer write-back.</li> <li>Fixes random texture corruption in Super Mario Odyssey (example: Black squares on Sand Kingdom).</li> <li>Fixes black screen on Mario Kart 8 Deluxe in some courses.</li> <li>Reduces or completely fix vertex explosions in some Unity games.</li> <li>Improves performance of games that performs buffer copies (such as aforementioned Unity games, may also give a small boost to Pok\u00e9mon games).</li> </ul>"},{"location":"changelog-old/#105306-2020-09-06","title":"1.0.5306 - 2020-09-06","text":""},{"location":"changelog-old/#changed_261","title":"Changed","text":"<ul> <li>Miscellaneous CPU emulation code optimization.</li> </ul>"},{"location":"changelog-old/#105305-2020-09-06","title":"1.0.5305 - 2020-09-06","text":""},{"location":"changelog-old/#fixed_273","title":"Fixed","text":"<ul> <li>Fixed issue with music playing on only the left channel in several games using REV8 including Fairy Tail, SEGA AGES Sonic the Hedgehog 2, Family Mysteries: Poisonous Promises, and Harukanaru Toki no Naka de 7.</li> </ul>"},{"location":"changelog-old/#105292-2020-09-05","title":"1.0.5292 - 2020-09-05","text":""},{"location":"changelog-old/#changed_262","title":"Changed","text":"<ul> <li>Removed redundant sentence in README.MD. No emulator code changes.</li> </ul>"},{"location":"changelog-old/#105271-2020-09-01","title":"1.0.5271 - 2020-09-01","text":""},{"location":"changelog-old/#changed_263","title":"Changed","text":"<ul> <li>Updated LibHac to version 0.12.0. General improvements to system stability and backend file system fixes &amp; enhancements.</li> <li>Support reading NCA0 files and decrypted NCAs.</li> <li>Improves the performance of some save data operations when large numbers of save data exist.</li> </ul>"},{"location":"changelog-old/#105270-2020-09-01","title":"1.0.5270 - 2020-09-01","text":""},{"location":"changelog-old/#fixed_274","title":"Fixed","text":"<ul> <li>Miscellaneous CPU code fixes.</li> <li>Resolves a PPTC related crash during PPTC compilation.</li> </ul>"},{"location":"changelog-old/#105269-2020-09-01","title":"1.0.5269 - 2020-09-01","text":""},{"location":"changelog-old/#fixed_275","title":"Fixed","text":"<ul> <li>Miscellaneous shader instruction fixes.</li> <li>Resolves incorrect dithering pattern in Super Mario Odyssey.</li> </ul>"},{"location":"changelog-old/#105266-2020-09-01","title":"1.0.5266 - 2020-09-01","text":""},{"location":"changelog-old/#changed_264","title":"Changed","text":"<ul> <li>Reworked in-application user error prompts regarding keys &amp; firmware to be more meaningful to the end user.</li> <li>Replaces KEYS.MD pop-up with a more appropriate message including a link to the setup guide.</li> </ul>"},{"location":"changelog-old/#105264-2020-09-01","title":"1.0.5264 - 2020-09-01","text":""},{"location":"changelog-old/#fixed_276","title":"Fixed","text":"<ul> <li>Fixed a regression with texture compatibility checks introduced in build 1.0.5258 (PR 1482)</li> </ul>"},{"location":"changelog-old/#105258-2020-08-31","title":"1.0.5258 - 2020-08-31","text":""},{"location":"changelog-old/#changed_265","title":"Changed","text":"<ul> <li>Miscellaneous GPU code refactoring/improvement.</li> </ul>"},{"location":"changelog-old/#105256-2020-08-31","title":"1.0.5256 - 2020-08-31","text":""},{"location":"changelog-old/#changed_266","title":"Changed","text":"<ul> <li>Miscellaneous CPU code optimization.</li> </ul>"},{"location":"changelog-old/#105255-2020-08-31","title":"1.0.5255 - 2020-08-31","text":""},{"location":"changelog-old/#added_145","title":"Added","text":"<ul> <li>Implemented fixed point variants Scvtf_S_Fixed &amp; Ucvtf_S_Fixed with Tests.</li> <li>Resolves missing opcode errors in a particular Switch homebrew application.</li> </ul>"},{"location":"changelog-old/#105251-2020-08-30","title":"1.0.5251 - 2020-08-30","text":""},{"location":"changelog-old/#changed_267","title":"Changed","text":"<ul> <li>Removed the unused Ryujinx.Debugger project.</li> </ul>"},{"location":"changelog-old/#105250-2020-08-30","title":"1.0.5250 - 2020-08-30","text":""},{"location":"changelog-old/#added_146","title":"Added","text":"<ul> <li>Ryujinx now allows launching with custom data directories i.e. \"portable mode\"</li> </ul>"},{"location":"changelog-old/#105249-2020-08-30","title":"1.0.5249 - 2020-08-30","text":""},{"location":"changelog-old/#changed_268","title":"Changed","text":"<ul> <li>Cleaned up the FUNDING.yml file</li> </ul>"},{"location":"changelog-old/#105248-2020-08-30","title":"1.0.5248 - 2020-08-30","text":""},{"location":"changelog-old/#changed_269","title":"Changed","text":"<ul> <li>Cleaned up and updated the readme file.</li> <li>No emulator code changes.</li> </ul>"},{"location":"changelog-old/#105246-2020-08-29","title":"1.0.5246 - 2020-08-29","text":""},{"location":"changelog-old/#fixed_277","title":"Fixed","text":"<ul> <li>Fixed a page count calculation regression introduced in 1.0.4453 (PR 856).</li> <li>Resolves a bug found in deko3d homebrew. There are no known games affected by the bug or this fix.</li> </ul>"},{"location":"changelog-old/#105239-2020-08-27","title":"1.0.5239 - 2020-08-27","text":""},{"location":"changelog-old/#fixed_278","title":"Fixed","text":"<ul> <li>Fixed inverted downmixing of center and LFE channels.</li> <li>Resolves missing background music in Mario Tennis Aces, missing voices in Fire Emblem: Three Houses and Resident Evil: Revelations, and other   missing audio in similarly affected games. </li> </ul>"},{"location":"changelog-old/#105221-2020-08-23","title":"1.0.5221 - 2020-08-23","text":""},{"location":"changelog-old/#changed_270","title":"Changed","text":"<ul> <li>HID now allows reconfiguration of controllers during runtime! No need to restart emulation.</li> <li>Controller Applet now supports multiple controllers</li> <li>Mario Tennis Aces console multiplayer now works properly. Other games that had similar issues with the controller applet should also be working now.</li> <li>Controller Applet now displays a Message dialog indicating config issues if any, and waits for user to correct them.</li> <li>HID now ignores Handheld config when Docked mode is enabled</li> <li>Auto-reassignment is dialed back (wasn't assigning valid configs most of the time anyway) to rely more on Controller Applet.</li> <li>Fun change: Adds official LED patterns to Player IDs</li> <li>Misc change: Hotkey toggles (such as Vsync) now only work when Emu window is focused.</li> <li>Controller Setup Window now only shows valid options for respective types e.g. prevents setting up Pro Controller to Handheld</li> </ul>"},{"location":"changelog-old/#105200-2020-08-19","title":"1.0.5200 - 2020-08-19","text":""},{"location":"changelog-old/#fixed_279","title":"Fixed","text":"<ul> <li>Fixed some build warnings and debug asserts caused by uninitialized fields on the VP9 decoder.</li> <li>Does not affect gameplay or performance in any way.</li> </ul>"},{"location":"changelog-old/#105191-2020-08-18","title":"1.0.5191 - 2020-08-18","text":""},{"location":"changelog-old/#added_147","title":"Added","text":"<ul> <li>Implemented IManagerForApplication calls and IAsyncContext.</li> <li>Fixes missing service crashes in many games, but nearly all of those games need further services implemented before they become bootable/playable.</li> </ul>"},{"location":"changelog-old/#105190-2020-08-18","title":"1.0.5190 - 2020-08-18","text":""},{"location":"changelog-old/#changed_271","title":"Changed","text":"<ul> <li>Implemented software surround downmixing.</li> <li>Fixes a crash when no audio renderer was created when stopping emulation.</li> <li>Disables support of 5.1 surround on OpenAL backend as Ryujinx cannot currently detect whether the hardware directly supports it.</li> </ul>"},{"location":"changelog-old/#105182-2020-08-17","title":"1.0.5182 - 2020-08-17","text":""},{"location":"changelog-old/#changed_272","title":"Changed","text":"<ul> <li>Implemented all Switch audio renderer functions (code name Amadeus).</li> <li>Resolves myriad audio issues, including: garbled audio in nearly every game that uses audren, softlock in Splatoon 2, slowness in NVDEC videos on Unity titles, loud effects that should be soft, super slow sounding audio during full speed gameplay, etc.  </li> </ul> <p>Known issues:  - Fire Emblem: Three Houses is missing voices in videos. - Games that utilize two simultaneous audio renderers will likely have issues until the audio out interface is rewritten; Crash Team Racing is the only known game to suffer from this. </p>"},{"location":"changelog-old/#105177-2020-08-14","title":"1.0.5177 - 2020-08-14","text":""},{"location":"changelog-old/#added_148","title":"Added","text":"<ul> <li>Added missing depth-color conversions in CopyTexture.</li> <li>Resolves an openGL error message being spammed, and fixes the broken blur and performance regressions in Zelda: Link's Awakening after BGRA support was added. Note: there are still additional graphical glitches in this game.</li> </ul>"},{"location":"changelog-old/#105175-2020-08-13","title":"1.0.5175 - 2020-08-13","text":""},{"location":"changelog-old/#fixed_280","title":"Fixed","text":"<ul> <li>The Purge PPTC cache option now purges all versioned PPTC caches for a particular game; previously it was only purging the PPTC cache for the currently selected game version e.g. 1.0.3.</li> </ul>"},{"location":"changelog-old/#105173-2020-08-13","title":"1.0.5173 - 2020-08-13","text":""},{"location":"changelog-old/#fixed_281","title":"Fixed","text":"<ul> <li>Fixed MacroJIT SubtractWithBorrow Alu Reg Operation.</li> <li>Resolves black screen &amp; memory leak issues with Duke Nukem 3D: 20<sup>th</sup> Anniversary World Tour (and possibly other games), and a crash on launch in Waifu Uncovered. </li> </ul>"},{"location":"changelog-old/#105171-2020-08-12","title":"1.0.5171 - 2020-08-12","text":""},{"location":"changelog-old/#added_149","title":"Added","text":"<ul> <li>Added VFMA/VFMS instructions.</li> <li>Fixes missing opcode crashes on Duke Nukem 3D: 20<sup>th</sup> Anniversary World Tour, STURMWIND EX, Cabela's: The Hunt - Championship Edition, and Goat Simulator.</li> </ul>"},{"location":"changelog-old/#changed_273","title":"Changed","text":"<ul> <li>Fixed VCVT_FI &amp; VCVT_RM. Added tests for VCVT_FI. Updated VRINT_RM &amp; VRINT_Z.</li> <li>Fixes missing graphics in several 32-bit titles including (but not limited to) SamuraiAces, and Duke Nukem 3D: 20<sup>th</sup> Anniversary World Tour.</li> </ul>"},{"location":"changelog-old/#105167-2020-08-12","title":"1.0.5167 - 2020-08-12","text":""},{"location":"changelog-old/#fixed_282","title":"Fixed","text":"<ul> <li>Fixed the InitializeBluetoothLe call which previously did not return any event handle.</li> </ul>"},{"location":"changelog-old/#105155-2020-08-09","title":"1.0.5155 - 2020-08-09","text":""},{"location":"changelog-old/#changed_274","title":"Changed","text":"<ul> <li>Changed default audio backend to be OpenAL by default. If OpenAL is not found, it will default to SoundIO.</li> <li>Resolves audio renderer crashes due to Dummy being selected by default.</li> </ul>"},{"location":"changelog-old/#105152-2020-08-09","title":"1.0.5152 - 2020-08-09","text":""},{"location":"changelog-old/#fixed_283","title":"Fixed","text":"<ul> <li>Incremented PPTC version, which was missed in 1.0.5144 (PR 1433).</li> </ul>"},{"location":"changelog-old/#105144-2020-08-08","title":"1.0.5144 - 2020-08-08","text":""},{"location":"changelog-old/#fixed_284","title":"Fixed","text":"<ul> <li>Miscellaneous CPU emulation fixes.</li> </ul>"},{"location":"changelog-old/#105143-2020-08-08","title":"1.0.5143 - 2020-08-08","text":""},{"location":"changelog-old/#added_150","title":"Added","text":"<ul> <li>Forwarded OpenSaveDataInfoReaderOnlyCacheStorage call to OpenSaveDataInfoReaderWithFilter.</li> <li>Fixes a missing service crash in Mortal Kombat 11. The game now boots to the title screen.</li> </ul>"},{"location":"changelog-old/#105142-2020-08-07","title":"1.0.5142 - 2020-08-07","text":""},{"location":"changelog-old/#added_151","title":"Added","text":"<ul> <li>Added issue templates on the Ryujinx GitHub site. No emulator code was changed.</li> </ul>"},{"location":"changelog-old/#105140-2020-08-07","title":"1.0.5140 - 2020-08-07","text":""},{"location":"changelog-old/#changed_275","title":"Changed","text":"<ul> <li>Renamed openGL debug logging option \"performance\" to \"slowdowns\" to reduce the likelihood of an end user, believing there to be some sort of associated performance gain in the emulator, errantly enabling the option.</li> </ul>"},{"location":"changelog-old/#105138-2020-08-06","title":"1.0.5138 - 2020-08-06","text":""},{"location":"changelog-old/#changed_276","title":"Changed","text":"<ul> <li>Silenced several build warnings (for those who build their own version of Ryujinx) and performed minor code cleanup.</li> </ul>"},{"location":"changelog-old/#105131-2020-08-04","title":"1.0.5131 - 2020-08-04","text":""},{"location":"changelog-old/#changed_277","title":"Changed","text":"<ul> <li>Miscellaneous CPU emulation code optimization. There should not be any noticeable changes in emulator performance.</li> </ul>"},{"location":"changelog-old/#105126-2020-08-03","title":"1.0.5126 - 2020-08-03","text":""},{"location":"changelog-old/#changed_278","title":"Changed","text":"<ul> <li>Rewrote the logger to optimize operation and reduce unnecessary overhead. Also removed SendVibrationXXX logs from standard output; they are now only present if debug logging is enabled.</li> </ul>"},{"location":"changelog-old/#105123-2020-08-02","title":"1.0.5123 - 2020-08-02","text":""},{"location":"changelog-old/#added_152","title":"Added","text":"<ul> <li>Implemented a Macro JIT.</li> <li>Improves the speed of GPU Macro execution by recompiling code on-demand; as a result, minor speed improvements may be seen in games that use instanced draws.</li> </ul>"},{"location":"changelog-old/#105122-2020-08-02","title":"1.0.5122 - 2020-08-02","text":""},{"location":"changelog-old/#added_153","title":"Added","text":"<ul> <li>Implemented software keyboard GTK frontend. </li> <li>Enables the user to enter a custom player name when prompted instead of having the default \"Ryujinx\" name hardcoded in, as well as input custom text any time the user is prompted throughout the game play experience.</li> </ul>"},{"location":"changelog-old/#105119-2020-08-02","title":"1.0.5119 - 2020-08-02","text":""},{"location":"changelog-old/#added_154","title":"Added","text":"<ul> <li>Facilitated OpenGL debug logging that can be configured via the GUI. This is for development use only.</li> </ul>"},{"location":"changelog-old/#105115-2020-08-01","title":"1.0.5115 - 2020-08-01","text":""},{"location":"changelog-old/#added_155","title":"Added","text":"<ul> <li>Implemented IServiceCreator::GetPlayHistoryRegistrationKey call.</li> <li>Fixes missing service crashes on Diablo III: Eternal Collection, BLAZBLUE CENTRALFICTION, The Escapists 2, and other games that utilize this call.</li> </ul>"},{"location":"changelog-old/#105105-2020-07-31","title":"1.0.5105 - 2020-07-31","text":""},{"location":"changelog-old/#added_156","title":"Added","text":"<ul> <li>Added stub for ReadSaveDataFileSystemExtraDataWithMaskBySaveDataAttribute call.</li> <li>Fixes missing service crash in Animal Crossing: New Horizons 1.4.0; \"ignore Missing Services\" no longer needs to be enabled.</li> </ul>"},{"location":"changelog-old/#105094-2020-07-30","title":"1.0.5094 - 2020-07-30","text":""},{"location":"changelog-old/#fixed_285","title":"Fixed","text":"<ul> <li>Fixed WMI exception errors on startup in edge cases e.g. where the WMI service is not running, etc.</li> </ul>"},{"location":"changelog-old/#105088-2020-07-30","title":"1.0.5088 - 2020-07-30","text":""},{"location":"changelog-old/#changed_279","title":"Changed","text":"<ul> <li>Changed logging to print the guest stack trace on several crash conditions, which will provide necessary troubleshooting information.</li> </ul>"},{"location":"changelog-old/#105087-2020-07-29","title":"1.0.5087 - 2020-07-29","text":""},{"location":"changelog-old/#changed_280","title":"Changed","text":"<ul> <li>Refactored shader translator ShaderConfig and reduced number of out args.</li> <li>Improves code without changing any functionality.</li> </ul>"},{"location":"changelog-old/#105086-2020-07-29","title":"1.0.5086 - 2020-07-29","text":""},{"location":"changelog-old/#changed_281","title":"Changed","text":"<ul> <li>Miscellaneous CPU emulation code optimization.</li> </ul>"},{"location":"changelog-old/#105072-2020-07-28","title":"1.0.5072 - 2020-07-28","text":""},{"location":"changelog-old/#fixed_286","title":"Fixed","text":"<ul> <li>Fixed a shader regression on Intel iGPUs (and possibly AMD GPUs) by reverting varying layout changes introduced in 1.0.4937 (PR 1370). NOTE: transform feedback is not going to work on Intel iGPUs in Windows.</li> </ul>"},{"location":"changelog-old/#105071-2020-07-28","title":"1.0.5071 - 2020-07-28","text":""},{"location":"changelog-old/#added_157","title":"Added","text":"<ul> <li>Implemented alpha test using legacy functions using an OpenGL compatibility profile. This will bridge the gap until alpha test is re-implemented via pixel shaders later on once a disk shader cache exists in Ryujinx.</li> <li>Fixes alpha test issues on games including Mega Man 11 (black eyes, etc.).</li> </ul>"},{"location":"changelog-old/#105070-2020-07-28","title":"1.0.5070 - 2020-07-28","text":""},{"location":"changelog-old/#added_158","title":"Added","text":"<ul> <li>Implemented VIC BGRA output surface format.</li> <li>Fixes swapped/incorrect colors during video decoding on games requiring it, including The Caligula Effect.</li> </ul>"},{"location":"changelog-old/#105049-2020-07-26","title":"1.0.5049 - 2020-07-26","text":""},{"location":"changelog-old/#added_159","title":"Added","text":"<ul> <li>Stubbed several eShop related calls.</li> <li>Fixes related missing service crashes on Pok\u00e9mon Caf\u00e9 Mix, Dragon Quest XI, Dead by Daylight, Ninjala, Super Kirby Clash, and a few others.</li> </ul>"},{"location":"changelog-old/#105048-2020-07-26","title":"1.0.5048 - 2020-07-26","text":""},{"location":"changelog-old/#added_160","title":"Added","text":"<ul> <li>Implemented the following calls of IAudioInManager: ListAudioIns, ListAudioInsAUuto, ListAudioInsAutoFiltered.</li> <li>Fixes related missing service crashes on 15+ games including Crysis Remastered, Torchlight 2, multiple Borderlands games, Baldur's Gate and Baldur's Gate II, Ion Fury, and Bioshock 2 Remastered.</li> </ul>"},{"location":"changelog-old/#105047-2020-07-26","title":"1.0.5047 - 2020-07-26","text":""},{"location":"changelog-old/#changed_282","title":"Changed","text":"<ul> <li>Polygon offset clamp value is now set by the game if the host supports it. Should not affect any games.</li> </ul>"},{"location":"changelog-old/#105044-2020-07-25","title":"1.0.5044 - 2020-07-25","text":""},{"location":"changelog-old/#added_161","title":"Added","text":"<ul> <li>Implemented BGRA texture support.</li> <li>Fixes incorrect texture colors (often manifesting as blue skin/blue tint issues) on affected games including (but not limited to) Valkyria Chronicles 4, Resident Evil 4, Onimusha Warlords, and Memories Off ~ Innocent Fille ~.</li> </ul>"},{"location":"changelog-old/#105034-2020-07-25","title":"1.0.5034 - 2020-07-25","text":""},{"location":"changelog-old/#fixed_287","title":"Fixed","text":"<ul> <li>Incremented PPTC version, which was missed in 1.0.5021 (PR 1410).</li> </ul>"},{"location":"changelog-old/#105030-2020-07-25","title":"1.0.5030 - 2020-07-25","text":""},{"location":"changelog-old/#changed_283","title":"Changed","text":"<ul> <li>GPU memory access related code cleanup.</li> </ul>"},{"location":"changelog-old/#105021-2020-07-24","title":"1.0.5021 - 2020-07-24","text":""},{"location":"changelog-old/#changed_284","title":"Changed","text":"<ul> <li>Minor CPU emulation fixes and code cleanup. </li> </ul>"},{"location":"changelog-old/#105011-2020-07-23","title":"1.0.5011 - 2020-07-23","text":""},{"location":"changelog-old/#added_162","title":"Added","text":"<ul> <li>Updated LibHac to version 0.11.3.</li> <li>Removes the timeout when deleting files from the local file system.</li> </ul>"},{"location":"changelog-old/#105010-2020-07-23","title":"1.0.5010 - 2020-07-23","text":""},{"location":"changelog-old/#changed_285","title":"Changed","text":"<ul> <li>Implemented GPFifo and made other changes and improvements to GPFifoClass and GPFifo semaphore implementation, respectively.</li> <li>Added a fast path for guest constant buffer updates.</li> <li>Brings significant performance boosts to games such as Diablo III: Eternal Collection that make heavy use of the functionality. </li> </ul>"},{"location":"changelog-old/#105004-2020-07-23","title":"1.0.5004 - 2020-07-23","text":""},{"location":"changelog-old/#fixed_288","title":"Fixed","text":"<ul> <li>Fixed full-screen toggle issues.</li> </ul>"},{"location":"changelog-old/#105003-2020-07-23","title":"1.0.5003 - 2020-07-23","text":""},{"location":"changelog-old/#added_163","title":"Added","text":"<ul> <li>Implemented GetIndirectLayerImageRequiredMemoryInfo call from vi service.</li> <li>Fixes missing service crashes in Dark Souls Remastered and God Eater 3.</li> </ul>"},{"location":"changelog-old/#105000-2020-07-21","title":"1.0.5000 - 2020-07-21","text":""},{"location":"changelog-old/#added_164","title":"Added","text":"<ul> <li>Implemented/stubbed some calls to the am service.</li> <li>Fixes crashes in Daemon X Machina, Jump Rope Challenge, Fate/EXTELLA LINK, FIFA 19/20, Super Kirby Clash, and several other games.</li> </ul>"},{"location":"changelog-old/#104987-2020-07-20","title":"1.0.4987 - 2020-07-20","text":""},{"location":"changelog-old/#changed_286","title":"Changed","text":"<ul> <li>Improved the display and sort order of time zones in Options &gt; Settings &gt; System tab.</li> </ul>"},{"location":"changelog-old/#104985-2020-07-20","title":"1.0.4985 - 2020-07-20","text":""},{"location":"changelog-old/#changed_287","title":"Changed","text":"<ul> <li>Reconfigured audio backend GUI to select OpenAL by default (if installed), and Dummy as the fallback.</li> <li>Fixes the inability to save any emulator settings until the audio backend had been selected.</li> </ul>"},{"location":"changelog-old/#104981-2020-07-20","title":"1.0.4981 - 2020-07-20","text":""},{"location":"changelog-old/#changed_288","title":"Changed","text":"<ul> <li>Fixed GL errors related to Point size, and implemented more Point parameters.</li> <li>Fixes some graphics effects in Super Mario Odyssey.</li> </ul>"},{"location":"changelog-old/#104980-2020-07-20","title":"1.0.4980 - 2020-07-20","text":""},{"location":"changelog-old/#fixed_289","title":"Fixed","text":"<ul> <li>Fixed an issue with IDeliveryCacheProgressService GetEvent introduced in 1.0.4948 (PR 1362).</li> <li>Fixes a regression in Super Smash Bros. Ultimate.</li> </ul>"},{"location":"changelog-old/#104969-2020-07-19","title":"1.0.4969 - 2020-07-19","text":""},{"location":"changelog-old/#fixed_290","title":"Fixed","text":"<ul> <li>Implemented a small part missing from 1.0.4964 (PR 1397), now ensuring that all HLE ipc sessions will be disposed when needed.</li> </ul>"},{"location":"changelog-old/#104964-2020-07-19","title":"1.0.4964 - 2020-07-19","text":""},{"location":"changelog-old/#changed_289","title":"Changed","text":"<ul> <li>Improved implementation of CreateTransferMemory and CloseHandle syscalls.</li> <li>Fixed session services not being disposed.</li> </ul>"},{"location":"changelog-old/#104963-2020-07-19","title":"1.0.4963 - 2020-07-19","text":""},{"location":"changelog-old/#added_165","title":"Added","text":"<ul> <li>Added VBIC, VTST, and VSRA 32-bit instructions.</li> <li>Fixes missing opcode crashes in several 32-bit games.</li> </ul>"},{"location":"changelog-old/#104957-2020-07-17","title":"1.0.4957 - 2020-07-17","text":""},{"location":"changelog-old/#changed_290","title":"Changed","text":"<ul> <li>No longer prints guest stack trace for svcBreak debug calls.</li> <li>Fixes issues on some games that call svcBreak with the debug flag set.</li> </ul>"},{"location":"changelog-old/#104952-2020-07-17","title":"1.0.4952 - 2020-07-17","text":""},{"location":"changelog-old/#fixed_291","title":"Fixed","text":"<ul> <li>Miscellaneous ARM32 instruction fixes.</li> <li>Fixes black screen issue on some 32-bit games.</li> </ul>"},{"location":"changelog-old/#104948-2020-07-16","title":"1.0.4948 - 2020-07-16","text":""},{"location":"changelog-old/#changed_291","title":"Changed","text":"<ul> <li>Updates the WaitSynchronization syscall implementation to match what the kernel does. Should not affect any games.</li> </ul>"},{"location":"changelog-old/#104947-2020-07-16","title":"1.0.4947 - 2020-07-16","text":""},{"location":"changelog-old/#added_166","title":"Added","text":"<ul> <li>Added Vadd and Vsub Wide CPU instructions.</li> <li>Fixes missing opcode crashes in Duke Nukem 3D: 20<sup>th</sup> Anniversary World Tour and other games.</li> </ul>"},{"location":"changelog-old/#104946-2020-07-16","title":"1.0.4946 - 2020-07-16","text":""},{"location":"changelog-old/#changed_292","title":"Changed","text":"<ul> <li>Improve kernel IPC related syscalls. Should not affect any games.</li> </ul>"},{"location":"changelog-old/#104945-2020-07-16","title":"1.0.4945 - 2020-07-16","text":""},{"location":"changelog-old/#fixed_292","title":"Fixed","text":"<ul> <li>Fixed resource limit reserve taking too long.</li> <li>Fixes games that suffered from the following error on boot: HLE.HostThread.0 KernelSvc PrintResult: SetHeapSize64 returned error ResLimitExceeded.</li> </ul>"},{"location":"changelog-old/#104941-2020-07-15","title":"1.0.4941 - 2020-07-15","text":""},{"location":"changelog-old/#fixed_293","title":"Fixed","text":"<ul> <li>Force transform feedback rebind after buffer modifications</li> <li>Fixes grass on XC2 and possibly resolves TFB issues in other games.</li> </ul>"},{"location":"changelog-old/#104938-2020-07-15","title":"1.0.4938 - 2020-07-15","text":""},{"location":"changelog-old/#fixed_294","title":"Fixed","text":"<ul> <li>Corrected a decode exception condition introduced in 1.0.4725 (PR 1298).</li> </ul>"},{"location":"changelog-old/#104937-2020-07-14","title":"1.0.4937 - 2020-07-14","text":""},{"location":"changelog-old/#added_167","title":"Added","text":"<ul> <li>Implemented partial transform feedback support.</li> <li>Fixes grass in Xenoblade Chronicles: Definitive Edition and resolves some TFB-related issues in other games.</li> </ul>"},{"location":"changelog-old/#104936-2020-07-14","title":"1.0.4936 - 2020-07-14","text":""},{"location":"changelog-old/#fixed_295","title":"Fixed","text":"<ul> <li>Fixes a crash involving the loading of mods when launching unpacked games.</li> </ul>"},{"location":"changelog-old/#104921-2020-07-13","title":"1.0.4921 - 2020-07-13","text":""},{"location":"changelog-old/#changed_293","title":"Changed","text":"<ul> <li>Modified depth stencil format copy compatibility check to check for equivalent color formats.</li> <li>Fixes broken fog on Pok\u00e9mon Sword/Shield and Super Mario Odyssey.</li> </ul>"},{"location":"changelog-old/#104920-2020-07-13","title":"1.0.4920 - 2020-07-13","text":""},{"location":"changelog-old/#changed_294","title":"Changed","text":"<ul> <li>Miscellaneous CPU instruction additions and fixes.</li> <li>Fixes issues in FATE/Extella and improves behavior in Snipperclips/Snipperclips Plus.</li> </ul>"},{"location":"changelog-old/#104918-2020-07-13","title":"1.0.4918 - 2020-07-13","text":""},{"location":"changelog-old/#fixed_296","title":"Fixed","text":"<ul> <li>Miscellaneous CPU instruction optimizations.</li> <li>Fixes issues in Monster Hunter (all versions) and Ni No Kuni (needs other instructions)</li> </ul>"},{"location":"changelog-old/#104916-2020-07-13","title":"1.0.4916 - 2020-07-13","text":""},{"location":"changelog-old/#fixed_297","title":"Fixed","text":"<ul> <li>Resolved a JIT issue where operand assignments were not getting cleaned up.</li> </ul>"},{"location":"changelog-old/#104914-2020-07-13","title":"1.0.4914 - 2020-07-13","text":""},{"location":"changelog-old/#fixed_298","title":"Fixed","text":"<ul> <li>Corrected a bug introduced in 1.0.4891 (PR 1359).</li> </ul>"},{"location":"changelog-old/#104909-2020-07-12","title":"1.0.4909 - 2020-07-12","text":""},{"location":"changelog-old/#changed_295","title":"Changed","text":"<ul> <li>Updated README.md.</li> </ul>"},{"location":"changelog-old/#104906-2020-07-11","title":"1.0.4906 - 2020-07-11","text":""},{"location":"changelog-old/#added_168","title":"Added","text":"<ul> <li>Implemented initial support for FMV/in-game videos (NVDEC).</li> </ul>"},{"location":"changelog-old/#104902-2020-07-10","title":"1.0.4902 - 2020-07-10","text":""},{"location":"changelog-old/#fixed_299","title":"Fixed","text":"<ul> <li>Corrected bug introduced in 1.0.4893 (PR 1358).</li> </ul>"},{"location":"changelog-old/#104893-2020-07-10","title":"1.0.4893 - 2020-07-10","text":""},{"location":"changelog-old/#changed_296","title":"Changed","text":"<ul> <li>Miscellaneous CPU optimization.</li> </ul>"},{"location":"changelog-old/#104891-2020-07-10","title":"1.0.4891 - 2020-07-10","text":""},{"location":"changelog-old/#changed_297","title":"Changed","text":"<ul> <li>Miscellaneous CPU optimization.</li> </ul>"},{"location":"changelog-old/#104889-2020-07-10","title":"1.0.4889 - 2020-07-10","text":""},{"location":"changelog-old/#added_169","title":"Added","text":"<ul> <li>Implemented logical operation registers &amp; functionality.</li> <li>Fixes interior lighting volumes in Xenoblade Chronicles 2 and Xenoblade Chronicles: Definitive Edition.</li> </ul>"},{"location":"changelog-old/#104880-2020-07-09","title":"1.0.4880 - 2020-07-09","text":""},{"location":"changelog-old/#added_170","title":"Added","text":"<ul> <li>Implemented modding support based on Atmosphere's implementation.</li> </ul>"},{"location":"changelog-old/#104876-2020-07-08","title":"1.0.4876 - 2020-07-08","text":""},{"location":"changelog-old/#fixed_300","title":"Fixed","text":"<ul> <li>Resolved issue where games were crashing on launch in Windows 7 after enabling PPTC.</li> </ul>"},{"location":"changelog-old/#104864-2020-07-06","title":"1.0.4864 - 2020-07-06","text":""},{"location":"changelog-old/#added_171","title":"Added","text":"<ul> <li>Added resolution scaling with GUI-configurable ratio.</li> </ul>"},{"location":"changelog-old/#104847-2020-07-04","title":"1.0.4847 - 2020-07-04","text":""},{"location":"changelog-old/#changed_298","title":"Changed","text":"<ul> <li>Added support for command 10104 &amp; 10105 and updated naming of the old variants to match Switchbrew.</li> <li>Fixes crash in Animal Crossing: New Horizons 1.3.0</li> </ul>"},{"location":"changelog-old/#104829-2020-07-03","title":"1.0.4829 - 2020-07-03","text":""},{"location":"changelog-old/#changed_299","title":"Changed","text":"<ul> <li>Reintroduced SoundIO as a fallback backend of OpenAL if OpenAL is not found.</li> </ul>"},{"location":"changelog-old/#104827-2020-07-03","title":"1.0.4827 - 2020-07-03","text":""},{"location":"changelog-old/#changed_300","title":"Changed","text":"<ul> <li>Fixed compilation warnings.</li> <li>Utilize new LibHac APIs for executable loading.</li> </ul>"},{"location":"changelog-old/#104826-2020-07-03","title":"1.0.4826 - 2020-07-03","text":""},{"location":"changelog-old/#added_172","title":"Added","text":"<ul> <li>Partially implemented LEA shader instruction.</li> <li>Extended bindless texture elimination optimization.</li> </ul>"},{"location":"changelog-old/#104825-2020-07-03","title":"1.0.4825 - 2020-07-03","text":""},{"location":"changelog-old/#fixed_301","title":"Fixed","text":"<ul> <li>Fixed copy from a buffer to a 3D texture when used for linear to block linear conversion.</li> <li>Improves rendering in Persona 5 Scramble and similar games.</li> </ul>"},{"location":"changelog-old/#104824-2020-07-03","title":"1.0.4824 - 2020-07-03","text":""},{"location":"changelog-old/#changed_301","title":"Changed","text":"<ul> <li>Game list reloads now only occur if a configuration change to game directories has been made.</li> </ul>"},{"location":"changelog-old/#104823-2020-07-03","title":"1.0.4823 - 2020-07-03","text":""},{"location":"changelog-old/#added_173","title":"Added","text":"<ul> <li>GUI update: it is now possible to choose the audio backend. </li> <li>The audio backend is set to OpenAL by default.</li> </ul>"},{"location":"changelog-old/#104822-2020-07-03","title":"1.0.4822 - 2020-07-03","text":""},{"location":"changelog-old/#added_174","title":"Added","text":"<ul> <li>Implemented new GUI options for managing PPTC cache files on a per-game basis.</li> </ul>"},{"location":"changelog-old/#104821-2020-07-03","title":"1.0.4821 - 2020-07-03","text":""},{"location":"changelog-old/#added_175","title":"Added","text":"<ul> <li>GUI update: it is now possible to add multiple game directories at once.</li> </ul>"},{"location":"changelog-old/#104820-2020-07-03","title":"1.0.4820 - 2020-07-03","text":""},{"location":"changelog-old/#added_176","title":"Added","text":"<ul> <li>Stubbed nifm IRequest GetAppletInfo to be consistent with current GetResult implementation.</li> <li>Fixes crash associated with unimplemented nifm IRequest on at least 31 games.</li> </ul>"},{"location":"changelog-old/#104819-2020-07-03","title":"1.0.4819 - 2020-07-03","text":""},{"location":"changelog-old/#added_177","title":"Added","text":"<ul> <li>Inline index buffer data is now supported.</li> <li>Fixes black screen issues on NinNin Days and other OpenGL games.</li> </ul>"},{"location":"changelog-old/#104818-2020-07-03","title":"1.0.4818 - 2020-07-03","text":""},{"location":"changelog-old/#fixed_302","title":"Fixed","text":"<ul> <li>Fixed compute restore of previous shader state.</li> <li>Improves lighting issues on a specific subset of games including Zelda: Link's Awakening.</li> </ul>"},{"location":"changelog-old/#104817-2020-07-03","title":"1.0.4817 - 2020-07-03","text":""},{"location":"changelog-old/#fixed_303","title":"Fixed","text":"<ul> <li>Fixed an issue with syncpoint implementation that could cause a deadlock in a specific scenario.</li> </ul>"},{"location":"changelog-old/#104816-2020-07-03","title":"1.0.4816 - 2020-07-03","text":""},{"location":"changelog-old/#fixed_304","title":"Fixed","text":"<ul> <li>Fixed an issue where bsd:u read was not writing in the IPC output buffer.</li> </ul>"},{"location":"changelog-old/#104796-2020-07-01","title":"1.0.4796 - 2020-07-01","text":""},{"location":"changelog-old/#changed_302","title":"Changed","text":"<ul> <li>Removed dummy LLE project from Github</li> </ul>"},{"location":"changelog-old/#104767-2020-06-26","title":"1.0.4767 - 2020-06-26","text":""},{"location":"changelog-old/#changed_303","title":"Changed","text":"<ul> <li>Games list GUI changes:</li> <li>Sort-by method is now persistent across application restarts.</li> <li>Removed unused SaveDataPath to speed up game list loading.</li> <li>Vertical scrollbar position now resets to the top when titles finish loading.</li> </ul>"},{"location":"changelog-old/#104761-2020-06-23","title":"1.0.4761 - 2020-06-23","text":""},{"location":"changelog-old/#added_178","title":"Added","text":"<ul> <li>Added VPMIN, VPMAX, VMVN (register).</li> </ul>"},{"location":"changelog-old/#fixed_305","title":"Fixed","text":"<ul> <li>VMVN (immediate) has been renamed from VMVN_I to VMVN_II to make way for the integer variant; it has also been fixed to use BitwiseNot rather than xor the input with itself.</li> </ul>"},{"location":"changelog-old/#104759-2020-06-23","title":"1.0.4759 - 2020-06-23","text":""},{"location":"changelog-old/#changed_304","title":"Changed","text":"<ul> <li>Import DLC title key from ticket when loading into content manager.</li> <li>Fixes crash due to DLC failing to decrypt.</li> <li>Removed profiled build task from Appveyor.</li> </ul>"},{"location":"changelog-old/#104753-2020-06-22","title":"1.0.4753 - 2020-06-22","text":""},{"location":"changelog-old/#added_179","title":"Added","text":"<ul> <li>Implemented DLC management window.</li> <li>DLC is now fully supported and able to be managed through the GUI.</li> </ul>"},{"location":"changelog-old/#104752-2020-06-22","title":"1.0.4752 - 2020-06-22","text":""},{"location":"changelog-old/#fixed_306","title":"Fixed","text":"<ul> <li>Copy the value of InputConfig to a new array before iterating. </li> <li>Fixes a rare exception crash. </li> </ul>"},{"location":"changelog-old/#104751-2020-06-22","title":"1.0.4751 - 2020-06-22","text":""},{"location":"changelog-old/#fixed_307","title":"Fixed","text":"<ul> <li>Fixed regression caused by wrong SB descriptor offset.</li> <li>Fixes crashes introduced in PR 924 on Tokyo Mirage Sessions.</li> </ul>"},{"location":"changelog-old/#104750-2020-06-22","title":"1.0.4750 - 2020-06-22","text":""},{"location":"changelog-old/#changed_305","title":"Changed","text":"<ul> <li>Update NRR related structures to match latest public research.</li> </ul>"},{"location":"changelog-old/#104740-2020-06-20","title":"1.0.4740 - 2020-06-20","text":""},{"location":"changelog-old/#added_180","title":"Added","text":"<ul> <li>Implemented aoc:u</li> <li>Supports loading AddOnContent - GUI to be implemented separately.</li> </ul>"},{"location":"changelog-old/#104739-2020-06-20","title":"1.0.4739 - 2020-06-20","text":""},{"location":"changelog-old/#changed_306","title":"Changed","text":"<ul> <li>Updated README.md file on Github.</li> <li>No Ryujinx code changes.</li> </ul>"},{"location":"changelog-old/#104728-2020-06-18","title":"1.0.4728 - 2020-06-18","text":""},{"location":"changelog-old/#fixed_308","title":"Fixed","text":"<ul> <li>Incremented PTC version</li> <li>Hotfix for previous build: fixed PTC cache not being rebuilt (this is required, as part of the JIT was changed).</li> </ul>"},{"location":"changelog-old/#104725-2020-06-17","title":"1.0.4725 - 2020-06-17","text":""},{"location":"changelog-old/#changed_307","title":"Changed","text":"<ul> <li>Branch cleanup: added exit blocks to reduce redundant tail continues; </li> <li>May slightly improve performance for some games.</li> </ul>"},{"location":"changelog-old/#104709-2020-06-16","title":"1.0.4709 - 2020-06-16","text":""},{"location":"changelog-old/#added_181","title":"Added","text":"<ul> <li>New Feature Addition: Profiled Persistent Translation Cache </li> <li>Reduces game load times by up to 70% after cache has been generated: two consecutive launches to title screen or beyond, then improvements are realized permanently on third launch and any future launches.</li> <li>This option must be enabled in Options &gt; Settings &gt; System &gt; Enable Profiled Persistent Translation Cache.</li> </ul>"},{"location":"changelog-old/#104697-2020-06-14","title":"1.0.4697 - 2020-06-14","text":""},{"location":"changelog-old/#fixed_309","title":"Fixed","text":"<ul> <li>Fixed an issue where part of the VABS instruction would be parsed as an input register. </li> <li>Resolved a particular DEADLY PREMONITION Origins missing opcode error; the instruction was not missing but was instead parsed incorrectly. </li> </ul>"},{"location":"changelog-old/#104696-2020-06-14","title":"1.0.4696 - 2020-06-14","text":""},{"location":"changelog-old/#changed_308","title":"Changed","text":"<ul> <li>LayoutConverter has separate optimizations for LinearStrided and BlockLinear. MethodCopyBuffer now determines the range that will be affected, and uses a faster per pixel copy and offset calculation. </li> <li>This should increase performance on Nintendo Switch Online: NES and Super NES games, as well as mitigate dropped frames during large black screen (nvdec) videos.</li> </ul>"},{"location":"changelog-old/#104687-2020-06-09","title":"1.0.4687 - 2020-06-09","text":""},{"location":"changelog-old/#changed_309","title":"Changed","text":"<ul> <li>Interacting with the console window no longer affects the emulation.</li> <li>This can reduce cases where the game deadlocks or crashes because the console is in Select mode or is manually scrolled.</li> </ul>"},{"location":"changelog-old/#104683-2020-06-06","title":"1.0.4683 - 2020-06-06","text":""},{"location":"changelog-old/#changed_310","title":"Changed","text":"<ul> <li>Stubbed ssl ISslContext: 4 (ImportServerPki) service.</li> <li>Fixed missing service crashes on Minecraft Dungeons and Rocket League.</li> </ul>"},{"location":"changelog-old/#104682-2020-06-05","title":"1.0.4682 - 2020-06-05","text":""},{"location":"changelog-old/#added_182","title":"Added","text":"<ul> <li>Added Pclmulqdq intrinsic</li> <li>Implemented crc32 in terms of pclmulqdq, which improves performance in some games when performing data integrity verification.</li> </ul>"},{"location":"changelog/","title":"Ryujinx Changelog","text":"<p>All updates to the Ryujinx official master build will be documented in this file.</p> <p>For 1.0.x releases, see here.</p>"},{"location":"changelog/#111403-2024-10-01","title":"1.1.1403 - 2024-10-01","text":""},{"location":"changelog/#fixed","title":"Fixed:","text":"<ul> <li>Update audio renderer to REV13: Add support for compressor statistics and volume reset.</li> <li>Allows Trouble Magia to go in-game.</li> </ul>"},{"location":"changelog/#111402-2024-09-30","title":"1.1.1402 - 2024-09-30","text":""},{"location":"changelog/#fixed_1","title":"Fixed:","text":"<ul> <li>Do not try to create a texture pool if shader does not use textures.</li> <li>Fixes CrossCode and Tales of Vesperia: Definitive Edition crashing on boot when loading a shader cache.</li> </ul>"},{"location":"changelog/#111401-2024-09-28","title":"1.1.1401 - 2024-09-28","text":""},{"location":"changelog/#fixed_2","title":"Fixed:","text":"<ul> <li>SDL: set app name.</li> <li>Fixes application name showing as \"SDL Application\" instead of \"Ryujinx\" on some platforms in volume control menus.</li> </ul>"},{"location":"changelog/#111400-2024-09-26","title":"1.1.1400 - 2024-09-26","text":""},{"location":"changelog/#fixed_3","title":"Fixed:","text":"<ul> <li>Convert MaxTextureCacheCapacity to Dynamic MaxTextureCacheCapacity for High Resolution Mod support.</li> <li>Allows usage of mods that make games run at higher resolutions than 4k, such as the 8k option in the Ultracam mod for The Legend of Zelda: Tears of the Kingdom (these mods require \"Expand DRAM to 8GB\" to be enabled).</li> <li>Fixes crashes and low performance in certain games when using high resolution mods.</li> </ul>"},{"location":"changelog/#111399-2024-09-26","title":"1.1.1399 - 2024-09-26","text":""},{"location":"changelog/#fixed_4","title":"Fixed:","text":"<ul> <li>GPU: Ensure all clip distances are initialized when used.</li> <li>Fixes half-screen rendering on AMD GPUs in The Legend of Zelda: Echoes of Wisdom.</li> </ul>"},{"location":"changelog/#111398-2024-09-22","title":"1.1.1398 - 2024-09-22","text":""},{"location":"changelog/#fixed_5","title":"Fixed:","text":"<ul> <li>Fix quads draws after DrawTexture on Vulkan.</li> <li>Fixes rendering in FUZE4 when using Vulkan.</li> </ul>"},{"location":"changelog/#111397-2024-09-20","title":"1.1.1397 - 2024-09-20","text":""},{"location":"changelog/#fixed_6","title":"Fixed:","text":"<ul> <li>Shader: Assume the only remaining source is the right one when all others are undefined.</li> <li>Fixes character model rendering in Romancing SaGa 2: Revenge of the Seven Demo.</li> </ul>"},{"location":"changelog/#111396-2024-09-19","title":"1.1.1396 - 2024-09-19","text":""},{"location":"changelog/#fixed_7","title":"Fixed:","text":"<ul> <li>Add support for sampler sRGB disable.</li> <li>Fixes the image being too dark in Cassette Beasts intro logos, Charge Kid, OlliOlli: Switch Stance, Sphinx and the Cursed Mummy, and The Bard's Tale ARPG.</li> </ul>"},{"location":"changelog/#111395-2024-09-18","title":"1.1.1395 - 2024-09-18","text":""},{"location":"changelog/#fixed_8","title":"Fixed:","text":"<ul> <li>Replace passing by IMemoryOwner with passing by concrete MemoryOwner. <li>Code cleanup. No expected user-facing changes.</li>"},{"location":"changelog/#111394-2024-09-18","title":"1.1.1394 - 2024-09-18","text":""},{"location":"changelog/#fixed_9","title":"Fixed:","text":"<ul> <li>Implement support for shader ATOM.EXCH instruction.</li> <li>Fixes missing reflections in Lollipop Chainsaw RePOP.</li> </ul>"},{"location":"changelog/#111393-2024-09-17","title":"1.1.1393 - 2024-09-17","text":""},{"location":"changelog/#changed","title":"Changed:","text":"<ul> <li>Revert \"Ava: Wait for CheckLaunchState() to complete to handle exceptions properly\".</li> <li>Reverts the change in 1.1.1391 as it broke the UI.</li> </ul>"},{"location":"changelog/#111392-2024-09-17","title":"1.1.1392 - 2024-09-17","text":""},{"location":"changelog/#fixed_10","title":"Fixed:","text":"<ul> <li>Change image format view handling to allow view incompatible formats.</li> <li>Fixes Lollipop Chainsaw RePOP crashing with a device loss error.</li> </ul>"},{"location":"changelog/#111391-2024-09-17","title":"1.1.1391 - 2024-09-17","text":""},{"location":"changelog/#fixed_11","title":"Fixed:","text":"<ul> <li>Ava: Wait for CheckLaunchState() to complete to handle exceptions properly.</li> <li>Fixes an issue where the UI would freeze instead of handling an exception when launching a game directly from command line or from a shortcut.</li> </ul>"},{"location":"changelog/#111390-2024-09-17","title":"1.1.1390 - 2024-09-17","text":""},{"location":"changelog/#fixed_12","title":"Fixed:","text":"<ul> <li>Add area sampling scaler to allow for super-sampled anti-aliasing.</li> <li>Under graphics settings &gt; scaling filter, adds a new option for area scaling, which will function as SSAA when the rendering resolution is 2x (or more) higher than the screen resolution.</li> </ul>"},{"location":"changelog/#111389-2024-09-17","title":"1.1.1389 - 2024-09-17","text":""},{"location":"changelog/#changed_1","title":"Changed:","text":"<ul> <li>Change 6GB DRAM expansion to 8GB.</li> <li>Changes the DRAM expansion hack to use 8GB instead of the 6GB it previously used, and renames the setting back to what it was.</li> <li>Pok\u00e9mon Legends Arceus and Pok\u00e9mon Scarlet/Violet will no longer crash with the DRAM expansion enabled, allowing mods for these games that required this option to be used again.</li> </ul>"},{"location":"changelog/#111388-2024-09-15","title":"1.1.1388 - 2024-09-15","text":""},{"location":"changelog/#fixed_13","title":"Fixed:","text":"<ul> <li>Implement fast DMA texture to texture copy.</li> <li>Massively improves performance (around 2x as much) in Castlevania Dominus Collection.</li> </ul>"},{"location":"changelog/#111387-2024-09-15","title":"1.1.1387 - 2024-09-15","text":""},{"location":"changelog/#fixed_14","title":"Fixed:","text":"<ul> <li>Make GetFunctionPointerForDelegate as explicit as possible.</li> <li>Required for AOT support in the future. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111386-2024-09-12","title":"1.1.1386 - 2024-09-12","text":""},{"location":"changelog/#fixed_15","title":"Fixed:","text":"<ul> <li>Implement Arm32 VSHLL and QADD16 instructions.</li> <li>Allows \"The Legend of Sword and Fairy\" to go in-game.</li> </ul>"},{"location":"changelog/#111385-2024-09-01","title":"1.1.1385 - 2024-09-01","text":""},{"location":"changelog/#fixed_16","title":"Fixed:","text":"<ul> <li>Vulkan: Feedback loop detection and barriers.</li> <li>On RDNA3 (RX 7000 series) AMD graphics cards, fixes purple lines seen across geometry in The Legend of Zelda: Breath of the Wild, Tears of the Kingdom, and likely other games that had graphics issues specific to these GPUs.</li> <li>On Nvidia RTX 2000/3000/4000 GPUs, fixes blocky water artifacts in Mario Golf: Super Rush, Splatoon 3, and alleviates (but does not fix) the issue in Team Sonic Racing (v1.0.0).<ul> <li>On Nvidia RTX 3000 GPUs, fixes flickering and missing body parts in Kirby's Dream Buffet, and fixes flickering in Mario + Rabbids: Sparks of Hope. </li> </ul> </li> </ul>"},{"location":"changelog/#111384-2024-09-01","title":"1.1.1384 - 2024-09-01","text":""},{"location":"changelog/#fixed_17","title":"Fixed:","text":"<ul> <li>Fix incorrect depth texture 3D flag.</li> <li>Fixes a crash in Neverwinter Nights: Enhanced Edition.</li> </ul>"},{"location":"changelog/#111383-2024-09-01","title":"1.1.1383 - 2024-09-01","text":""},{"location":"changelog/#fixed_18","title":"Fixed:","text":"<ul> <li>Vulkan: Update Silk.NET to 2.21.</li> <li>Updates Silk.NET dependencies and Vulkan extensions. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111382-2024-08-31","title":"1.1.1382 - 2024-08-31","text":""},{"location":"changelog/#fixed_19","title":"Fixed:","text":"<ul> <li>Make HLE project AOT friendly.</li> <li>No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111381-2024-08-31","title":"1.1.1381 - 2024-08-31","text":""},{"location":"changelog/#fixed_20","title":"Fixed:","text":"<ul> <li>Replace ImageSharp with SkiaSharp everywhere.</li> <li>Fixes text inputs in games not allowing more than one character to be typed.</li> </ul>"},{"location":"changelog/#111380-2024-08-27","title":"1.1.1380 - 2024-08-27","text":""},{"location":"changelog/#fixed_21","title":"Fixed:","text":"<ul> <li>Fix deadlock in background translation thread shutdown.</li> <li>Fixes an issue where Ryujinx would sometimes freeze and stop responding when trying to stop the emulation.</li> </ul>"},{"location":"changelog/#111379-2024-08-21","title":"1.1.1379 - 2024-08-21","text":""},{"location":"changelog/#fixed_22","title":"Fixed:","text":"<ul> <li>nuget: bump DynamicData from 9.0.1 to 9.0.4.</li> <li>Updates the DynamicData dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111378-2024-08-20","title":"1.1.1378 - 2024-08-20","text":""},{"location":"changelog/#fixed_23","title":"Fixed:","text":"<ul> <li>Fix NRE when using image array from constant buffer.</li> <li>Fixes a crash in World of Goo 2, though the game still does not work due to another issue.</li> </ul>"},{"location":"changelog/#111377-2024-08-20","title":"1.1.1377 - 2024-08-20","text":""},{"location":"changelog/#fixed_24","title":"Fixed:","text":"<ul> <li>nuget: bump ImageSharp from 2.1.8 to 2.1.9.</li> <li>Updates the SixLabors.ImageSharp dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111376-2024-08-17","title":"1.1.1376 - 2024-08-17","text":""},{"location":"changelog/#fixed_25","title":"Fixed:","text":"<ul> <li>nim:eca : Stub CreateServerInterface2.</li> <li>Allows THE NEW DENPA MEN to go in-game without \"Ignore Missing Services\".</li> </ul>"},{"location":"changelog/#111375-2024-08-13","title":"1.1.1375 - 2024-08-13","text":""},{"location":"changelog/#fixed_26","title":"Fixed:","text":"<ul> <li>Fix arbitrary game ordering when sorting by Favorites.</li> <li>Favorite games will now be sorted alphabetically on the games list.</li> </ul>"},{"location":"changelog/#111374-2024-08-12","title":"1.1.1374 - 2024-08-12","text":""},{"location":"changelog/#fixed_27","title":"Fixed:","text":"<ul> <li>Clamp amount of mipmap levels to max allowed for all backends.</li> <li>On AMD graphics cards using Vulkan, fixes crashes when running certain mods, such as character swaps in Mario Kart 8 Deluxe.</li> </ul>"},{"location":"changelog/#111373-2024-08-08","title":"1.1.1373 - 2024-08-08","text":""},{"location":"changelog/#added","title":"Added:","text":"<ul> <li>Implement UQADD16, UQADD8, UQSUB16, UQSUB8, VQRDMULH, VSLI and VSWP Arm32 instructions.</li> <li>Fixes DarkStar One crashing on non-ARM systems and shaky screen on ARM systems.</li> <li>May allow 12 Labours of Hercules II: The Cretan Bull to go in-game.</li> </ul>"},{"location":"changelog/#111372-2024-08-05","title":"1.1.1372 - 2024-08-05","text":""},{"location":"changelog/#fixed_28","title":"Fixed:","text":"<ul> <li>Replace and remove obsolete ByteMemoryPool type.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111371-2024-08-05","title":"1.1.1371 - 2024-08-05","text":""},{"location":"changelog/#fixed_29","title":"Fixed:","text":"<ul> <li>Fix same textures with unmapped start being considered different.</li> <li>Fixes The Legend of Heroes: Kuro no Kiseki II crashing shortly after gameplay starts.</li> </ul>"},{"location":"changelog/#111370-2024-08-04","title":"1.1.1370 - 2024-08-04","text":""},{"location":"changelog/#fixed_30","title":"Fixed:","text":"<ul> <li>Fix LocaleExtension SetRawSource usages + language perf improvement.</li> <li>Fixes a small UI freeze when changing the UI language.</li> </ul>"},{"location":"changelog/#111369-2024-08-04","title":"1.1.1369 - 2024-08-04","text":""},{"location":"changelog/#fixed_31","title":"Fixed:","text":"<ul> <li>Infra: Update Microsoft.IdentityModel.JsonWebTokens.</li> <li>Updates the Microsoft.IdentityModel.JsonWebTokens dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111368-2024-08-03","title":"1.1.1368 - 2024-08-03","text":""},{"location":"changelog/#fixed_32","title":"Fixed:","text":"<ul> <li>Avoid race conditions while launching games directly from the command line.</li> <li>Fixes games not booting when using shortcuts or launch arguments.</li> </ul>"},{"location":"changelog/#111367-2024-08-03","title":"1.1.1367 - 2024-08-03","text":""},{"location":"changelog/#fixed_33","title":"Fixed:","text":"<ul> <li>nuget: bump DynamicData from 8.4.1 to 9.0.1.</li> <li>Updates the DynamicData dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111366-2024-08-03","title":"1.1.1366 - 2024-08-03","text":""},{"location":"changelog/#fixed_34","title":"Fixed:","text":"<ul> <li>replace ByteMemoryPool usage in Ryujinx.Graphics.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111365-2024-08-03","title":"1.1.1365 - 2024-08-03","text":""},{"location":"changelog/#fixed_35","title":"Fixed:","text":"<ul> <li>Fix FileNotFoundException in TryGetApplicationsFromFile() and improve loading applications.</li> <li>Fixes crashes when trying to load files from bad symlinks, non-existent files or hidden subdirectories.</li> </ul>"},{"location":"changelog/#111364-2024-07-31","title":"1.1.1364 - 2024-07-31","text":""},{"location":"changelog/#fixed_36","title":"Fixed:","text":"<ul> <li>Fix off-by-one on audio renderer PerformanceManager.GetNextEntry.</li> <li>Fixes Kuro no Kiseki II crashing on startup.</li> </ul>"},{"location":"changelog/#111363-2024-07-30","title":"1.1.1363 - 2024-07-30","text":""},{"location":"changelog/#fixed_37","title":"Fixed:","text":"<ul> <li>Fix shader RegisterUsage pass only taking first operation dest into account.</li> <li>Fixes red tint on THE NEW DENPA MEN. (Note that the game still won't run without \"Ignore Missing Services\".)</li> </ul>"},{"location":"changelog/#111362-2024-07-30","title":"1.1.1362 - 2024-07-30","text":""},{"location":"changelog/#fixed_38","title":"Fixed:","text":"<ul> <li>Vulkan: Force topology to PatchList for Tessellation.</li> <li>On AMD graphics cards, fixes a crash on floor 15 of Luigi's Mansion 3.</li> </ul>"},{"location":"changelog/#111361-2024-07-25","title":"1.1.1361 - 2024-07-25","text":""},{"location":"changelog/#fixed_39","title":"Fixed:","text":"<ul> <li>Ava UI: Handle updates containing non numeric characters.</li> <li>Fixes an issue where the title update manager would fail to display updates if they contained letters (for example, v1.0.5A).</li> </ul>"},{"location":"changelog/#111360-2024-07-25","title":"1.1.1360 - 2024-07-25","text":""},{"location":"changelog/#fixed_40","title":"Fixed:","text":"<ul> <li>Vulkan: Add missing barriers for texture to buffer copy.</li> <li>Fixes a regression from 1.1.1352 exclusively affecting AMD graphics cards, which caused the water in The Legend of Zelda: Breath of the Wild to turn white.</li> </ul>"},{"location":"changelog/#111359-2024-07-22","title":"1.1.1359 - 2024-07-22","text":""},{"location":"changelog/#fixed_41","title":"Fixed:","text":"<ul> <li>Update kernel GetInfo SVC for firmware 18.0.0.</li> <li>Allows Nintendo 64 NSO, or anything using the JIT service, to work with firmware 18.0.0+.</li> </ul>"},{"location":"changelog/#111358-2024-07-21","title":"1.1.1358 - 2024-07-21","text":""},{"location":"changelog/#fixed_42","title":"Fixed:","text":"<ul> <li>Fix checking for the wrong metadata files for applications launched with a different program index.</li> <li>Fixes a regression from 1.1.1350 that caused updates to not apply for games that get launched with different program indices, such as Super Mario 3D All-Stars.</li> <li>Fixes an issue where the emulator wouldn't apply DLC to these same games.</li> </ul>"},{"location":"changelog/#111357-2024-07-20","title":"1.1.1357 - 2024-07-20","text":""},{"location":"changelog/#fixed_43","title":"Fixed:","text":"<ul> <li>Make sure TryGetApplicationsFromFile() doesn't throw exceptions anymore.</li> <li>Fixes remaining instances of crashing on loading invalid game files onto the games list since 1.1.1350.</li> </ul>"},{"location":"changelog/#111356-2024-07-20","title":"1.1.1356 - 2024-07-20","text":""},{"location":"changelog/#fixed_44","title":"Fixed:","text":"<ul> <li>Fix Skia saving screenshot with transparent background and incorrect origin.</li> <li>Fixes a regression from 1.1.1346 causing emulator screenshots to save as blank image files.</li> </ul>"},{"location":"changelog/#111355-2024-07-20","title":"1.1.1355 - 2024-07-20","text":""},{"location":"changelog/#fixed_45","title":"Fixed:","text":"<ul> <li>Unlink server sessions from multi-wait when service stops processing requests.</li> <li>Fixes an assert on debug builds when emulation is stopped. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111354-2024-07-19","title":"1.1.1354 - 2024-07-19","text":""},{"location":"changelog/#fixed_46","title":"Fixed:","text":"<ul> <li>Ava UI: Auto select newly added updates &amp; DLC.</li> <li>Updates and DLC will now be automatically enabled on the update and DLC managers when the files are first added to these menus.</li> </ul>"},{"location":"changelog/#111353-2024-07-18","title":"1.1.1353 - 2024-07-18","text":""},{"location":"changelog/#fixed_47","title":"Fixed:","text":"<ul> <li>Add missing Buffer attribute on NGC Check method.</li> <li>Fixes a crash in Teenage Mutant Ninja Turtles: Splintered Fate, and other games that do profanity filter checks and target firmware 16.0.0+.</li> </ul>"},{"location":"changelog/#111352-2024-07-17","title":"1.1.1352 - 2024-07-17","text":""},{"location":"changelog/#fixed_48","title":"Fixed:","text":"<ul> <li>Vulkan: Defer guest barriers, and improve image barrier timings.</li> <li>On Nvidia Ampere (and probably newer GPUs), fixes flickering artifacts in Cotton Guardian Force Saturn Tribute collection.</li> <li>On Snapdragon X Elite Adreno GPU, fixes rendering issues in several games, including Super Mario Odyssey.</li> </ul>"},{"location":"changelog/#111351-2024-07-17","title":"1.1.1351 - 2024-07-17","text":""},{"location":"changelog/#fixed_49","title":"Fixed:","text":"<ul> <li>Catch exceptions when loading applications from invalid NSPs.</li> <li>Fixes a regression from 1.1.1350 that caused the emulator to crash if an invalid game was loaded onto the game list.</li> </ul>"},{"location":"changelog/#111350-2024-07-16","title":"1.1.1350 - 2024-07-16","text":""},{"location":"changelog/#added_1","title":"Added:","text":"<ul> <li>Add support for multi game XCIs (second try).</li> <li>Implements loader support for XCI packages that contain multiple title entries.</li> <li>Fixes recognition of XCI files that contain title updates alongside the base game.</li> </ul>"},{"location":"changelog/#111349-2024-07-16","title":"1.1.1349 - 2024-07-16","text":""},{"location":"changelog/#changed_2","title":"Changed:","text":"<ul> <li>Remove CommandBufferScoped Dependencies.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111348-2024-07-15","title":"1.1.1348 - 2024-07-15","text":""},{"location":"changelog/#fixed_50","title":"Fixed:","text":"<ul> <li>misc: Re-order and manually update DriverID to name.</li> <li>NVK will now be properly displayed as the GPU driver on the status bar.</li> </ul>"},{"location":"changelog/#111347-2024-07-15","title":"1.1.1347 - 2024-07-15","text":""},{"location":"changelog/#fixed_51","title":"Fixed:","text":"<ul> <li>replace ByteMemoryPool usage in Ryujinx.HLE.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111346-2024-07-14","title":"1.1.1346 - 2024-07-14","text":""},{"location":"changelog/#fixed_52","title":"Fixed:","text":"<ul> <li>Use SkiaSharp for Avalonia in place of ImageSharp.</li> <li>Updates the Avalonia UI project to use SkiaSharp for image processing, replacing the previously used SixLabors ImageSharp library. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111345-2024-07-10","title":"1.1.1345 - 2024-07-10","text":""},{"location":"changelog/#fixed_53","title":"Fixed:","text":"<ul> <li>Use draw clear on Adreno, instead of vkCmdClearAttachments.</li> <li>Works around an Adreno driver bug causing a race condition when calling vkCmdClearAttachments.</li> <li>Fixes incorrect Cascade Kingdom waterfall rendering and shadow flickering in Super Mario Odyssey.</li> <li>Fixes Astral Chain freezing on boot.</li> </ul>"},{"location":"changelog/#111344-2024-07-10","title":"1.1.1344 - 2024-07-10","text":""},{"location":"changelog/#fixed_54","title":"Fixed:","text":"<ul> <li>Force dynamic state update after rasterizer discard disable on Adreno.</li> <li>On Adreno drivers, significantly improves rendering in Xenoblade Chronicles 2.</li> </ul>"},{"location":"changelog/#111343-2024-07-07","title":"1.1.1343 - 2024-07-07","text":""},{"location":"changelog/#fixed_55","title":"Fixed:","text":"<ul> <li>Disallow concurrent fence waits on Adreno.</li> <li>Works around an Adreno driver bug when waiting on a fence from multiple threads.</li> <li>Fixes crashes in a variety of titles including The Legend of Zelda: Tears of the Kingdom at boot.</li> </ul>"},{"location":"changelog/#111342-2024-07-07","title":"1.1.1342 - 2024-07-07","text":""},{"location":"changelog/#fixed_56","title":"Fixed:","text":"<ul> <li>Disable descriptor set template updates for buffer textures on Adreno.</li> <li>Works around an Adreno driver bug causing crashes in UE4 games (&amp; others) such as Mario + Rabbids: Sparks of Hope.</li> </ul>"},{"location":"changelog/#111341-2024-07-07","title":"1.1.1341 - 2024-07-07","text":""},{"location":"changelog/#fixed_57","title":"Fixed:","text":"<ul> <li>Force Vulkan swapchain re-creation when window size changes.</li> <li>Fixes an issue on Adreno GPUs where the renderer would not match the size of the window after a re-size.</li> <li>No other vendors should be impacted.</li> </ul>"},{"location":"changelog/#111340-2024-06-26","title":"1.1.1340 - 2024-06-26","text":""},{"location":"changelog/#fixed_58","title":"Fixed:","text":"<ul> <li>Resolve some Vulkan validation errors.</li> <li>No known changes in games.</li> </ul>"},{"location":"changelog/#111339-2024-06-26","title":"1.1.1339 - 2024-06-26","text":""},{"location":"changelog/#fixed_59","title":"Fixed:","text":"<ul> <li>discord: Fix TruncateToByteLength() not taking the string length into account before trimming.</li> <li>Fixes a regression from 1.1.1303 that caused Yu-Gi-Oh! RUSH DUEL: Saikyo Battle Royale to crash on boot.</li> </ul>"},{"location":"changelog/#111338-2024-06-26","title":"1.1.1338 - 2024-06-26","text":""},{"location":"changelog/#fixed_60","title":"Fixed:","text":"<ul> <li>nuget: bump Microsoft.IdentityModel.JsonWebTokens from 7.6.0 to 7.6.2.</li> <li>Updates the Microsoft.IdentityModel.JsonWebTokens dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111337-2024-06-25","title":"1.1.1337 - 2024-06-25","text":""},{"location":"changelog/#fixed_61","title":"Fixed:","text":"<ul> <li>SetProcessMemoryPermission address and size are always 64-bit.</li> <li>No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111336-2024-06-19","title":"1.1.1336 - 2024-06-19","text":""},{"location":"changelog/#fixed_62","title":"Fixed:","text":"<ul> <li>JIT: Coalesce copies on LSRA with simple register preferencing.</li> <li>Slightly reduces the size of code generated by the emulator, though performance change will likely not be noticeable.</li> </ul>"},{"location":"changelog/#111335-2024-06-19","title":"1.1.1335 - 2024-06-19","text":""},{"location":"changelog/#fixed_63","title":"Fixed:","text":"<ul> <li>JIT: Ensure entry block has no predecessors on RegisterUsage pass.</li> <li>Code cleanup. May be required for future features. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111334-2024-06-16","title":"1.1.1334 - 2024-06-16","text":""},{"location":"changelog/#fixed_64","title":"Fixed:","text":"<ul> <li>Clear pooled memory on return when used to hold object references.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111333-2024-06-16","title":"1.1.1333 - 2024-06-16","text":""},{"location":"changelog/#fixed_65","title":"Fixed:","text":"<ul> <li>Extend bindless elimination to catch a few more specific cases.</li> <li>Fixes smoke effects in Hogwarts Legacy and It Takes Two. May possibly fix particle effects in Tales of Kenzera: ZAU and other UE games.</li> <li>Fixes vertex explosions on ice effects in Mortal Kombat 1.</li> <li>Fixes log warnings in Shin Megami Tensei V: Vengeance.</li> </ul>"},{"location":"changelog/#111332-2024-06-16","title":"1.1.1332 - 2024-06-16","text":""},{"location":"changelog/#fixed_66","title":"Fixed:","text":"<ul> <li>Replace ByteMemoryPool in Audio projects.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111331-2024-06-16","title":"1.1.1331 - 2024-06-16","text":""},{"location":"changelog/#fixed_67","title":"Fixed:","text":"<ul> <li>nuget: bump Microsoft.IO.RecyclableMemoryStream from 3.0.0 to 3.0.1.</li> <li>Updates the Microsoft.IO.RecyclableMemoryStream dependency. No expected changes in games.</li> </ul>"},{"location":"changelog/#111330-2024-06-02","title":"1.1.1330 - 2024-06-02","text":""},{"location":"changelog/#fixed_68","title":"Fixed:","text":"<ul> <li>Vulkan separate descriptor set fixes.</li> <li>Fixes invisible characters on Intel GPUs in Paper Mario: The Thousand Year Door. </li> </ul>"},{"location":"changelog/#111329-2024-06-02","title":"1.1.1329 - 2024-06-02","text":""},{"location":"changelog/#fixed_69","title":"Fixed:","text":"<ul> <li>GPU: Remove unused dynamic state and pipeline settings.</li> <li>Code cleanup. No expected user-facing changes. </li> </ul>"},{"location":"changelog/#111328-2024-06-02","title":"1.1.1328 - 2024-06-02","text":""},{"location":"changelog/#fixed_70","title":"Fixed:","text":"<ul> <li>New pooled memory types.</li> <li>Reduces memory allocations done by the emulator. Likely no noticeable changes during normal gameplay.</li> </ul>"},{"location":"changelog/#111327-2024-06-02","title":"1.1.1327 - 2024-06-02","text":""},{"location":"changelog/#fixed_71","title":"Fixed:","text":"<ul> <li>Avoid inexact read with 'Stream.Read'.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111326-2024-06-02","title":"1.1.1326 - 2024-06-02","text":""},{"location":"changelog/#fixed_72","title":"Fixed:","text":"<ul> <li>nuget: bump Microsoft.IdentityModel.JsonWebTokens from 7.5.2 to 7.6.0.</li> <li>Updates the Microsoft.IdentityModel.JsonWebTokens dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111325-2024-05-26","title":"1.1.1325 - 2024-05-26","text":""},{"location":"changelog/#fixed_73","title":"Fixed:","text":"<ul> <li>Vulkan: Extend full bindless to cover cases with phi nodes.</li> <li>Resolves black or missing textures and animations in Paper Mario: The Thousand Year Door such as save boxes, coins and boat transitions.</li> <li>Fixes the missing floor textures in No Man's Sky.</li> </ul> <p>*Note that there will be some \"new\" bugs on some affected surfaces on AMD GPUs that were not visible prior to this change.</p>"},{"location":"changelog/#111324-2024-05-26","title":"1.1.1324 - 2024-05-26","text":""},{"location":"changelog/#changed_3","title":"Changed:","text":"<ul> <li>Change disk shader cache compression algorithm to Brotli (RFC 7932)</li> <li>Improves the speed of the \"Packaging shaders\" stage of a disk cache rebuild by up to 40%.</li> </ul>"},{"location":"changelog/#111323-2024-05-26","title":"1.1.1323 - 2024-05-26","text":""},{"location":"changelog/#fixed_74","title":"Fixed:","text":"<ul> <li>Allow texture arrays to use separate descriptor sets on Vulkan.</li> <li>Fixes a performance regression (mostly on macOS) caused by 1.1.1291 in games that use bindless textures from storage buffers.</li> <li>Example titles are Mario Party Superstars and Penny's Big Breakaway.</li> </ul>"},{"location":"changelog/#111322-2024-05-24","title":"1.1.1322 - 2024-05-24","text":""},{"location":"changelog/#fixed_75","title":"Fixed:","text":"<ul> <li>nuget: bump Microsoft.IdentityModel.JsonWebTokens from 7.5.1 to 7.5.2.</li> <li>Updates the Microsoft.IdentityModel.JsonWebTokens dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111321-2024-05-23","title":"1.1.1321 - 2024-05-23","text":""},{"location":"changelog/#fixed_76","title":"Fixed:","text":"<ul> <li>Workaround bug on logic op with float framebuffer.</li> <li>On Intel Vulkan, fixes the black screen in specific areas in Paper Mario: The Thousand-Year Door. Note that the game will still crash on Windows on Intel GPUs, so this improvement is only visible on Linux.</li> </ul>"},{"location":"changelog/#111320-2024-05-23","title":"1.1.1320 - 2024-05-23","text":""},{"location":"changelog/#fixed_77","title":"Fixed:","text":"<ul> <li>Workaround AMD bug on logic op with float framebuffer.</li> <li>On AMD Vulkan, fixes the black screen in specific areas in Paper Mario: The Thousand-Year Door.</li> </ul>"},{"location":"changelog/#111319-2024-05-22","title":"1.1.1319 - 2024-05-22","text":""},{"location":"changelog/#changed_4","title":"Changed:","text":"<ul> <li>Kernel: Wake cores from idle directly rather than through a host thread.</li> <li>Slightly improves performance in titles with inefficient threading implementations.</li> <li>Improves performance in Pok\u00e9mon Legends Arceus on low core count devices like the Steam Deck by up to 20%, or reduces power consumption by up to 40% at equal performance.</li> </ul>"},{"location":"changelog/#111318-2024-05-20","title":"1.1.1318 - 2024-05-20","text":""},{"location":"changelog/#fixed_78","title":"Fixed:","text":"<ul> <li>Updating Concentus dependency to speed up Opus decoding.</li> <li>May slightly reduce CPU usage in games that use Opus, such as Pok\u00e9mon Legends Arceus.</li> </ul>"},{"location":"changelog/#111317-2024-05-19","title":"1.1.1317 - 2024-05-19","text":""},{"location":"changelog/#fixed_79","title":"Fixed:","text":"<ul> <li>GPU: Migrate buffers on GPU project, pre-emptively flush device local mappings.</li> <li>Improves performance on systems with dedicated GPUs in Catherine Full Body, Hyrule Warriors: Age of Calamity v1.0.0, Pok\u00e9mon Scarlet/Violet, The Legend of Zelda: Breath of the Wild and Tears of the Kingdom.</li> <li>Fixes character shadows being too dark on the equip screen in Splatoon 3.</li> </ul>"},{"location":"changelog/#111316-2024-05-17","title":"1.1.1316 - 2024-05-17","text":""},{"location":"changelog/#fixed_80","title":"Fixed:","text":"<ul> <li>HID: Fix another NullReferenceException when unblocking input updates.</li> <li>Fixes another instance of crashing after using the software keyboard, caused by 1.1.1315.</li> </ul>"},{"location":"changelog/#111315-2024-05-17","title":"1.1.1315 - 2024-05-17","text":""},{"location":"changelog/#fixed_81","title":"Fixed:","text":"<ul> <li>Disable keyboard controller input while swkbd is open (foreground) (second attempt).</li> <li>Redo of 1.1.1307. Should also fix the crashing caused by the original change.</li> </ul>"},{"location":"changelog/#111314-2024-05-17","title":"1.1.1314 - 2024-05-17","text":""},{"location":"changelog/#fixed_82","title":"Fixed:","text":"<ul> <li>Update audio renderer to REV12: Add support for splitter biquad filter.</li> <li>Allows Animal Well to run.</li> <li>Fixes Charon's voice in Spiritfarer.</li> </ul>"},{"location":"changelog/#111313-2024-05-16","title":"1.1.1313 - 2024-05-16","text":""},{"location":"changelog/#fixed_83","title":"Fixed:","text":"<ul> <li>misc: Change Deflate compression level to Fastest.</li> <li>Speeds up shader packaging process by up to 14x. Shader packaging occurs after GPU driver updates, switching between Vulkan and OpenGL, or significant changes to Ryujinx's GPU code. Note that shader caches will have slightly larger file sizes after this change.</li> </ul>"},{"location":"changelog/#111312-2024-05-16","title":"1.1.1312 - 2024-05-16","text":""},{"location":"changelog/#fixed_84","title":"Fixed:","text":"<ul> <li>Improves some log messages and fixes a typo.</li> <li>Makes the logging messages for missing game directories and files clearer.</li> </ul>"},{"location":"changelog/#111311-2024-05-15","title":"1.1.1311 - 2024-05-15","text":""},{"location":"changelog/#fixed_85","title":"Fixed:","text":"<ul> <li>Revert \"Disable keyboard controller input while swkbd is open (foreground)\".</li> <li>Reverts the change in 1.1.1307 due to it causing crashes in some games which use the software keyboard.</li> </ul>"},{"location":"changelog/#111310-2024-05-14","title":"1.1.1310 - 2024-05-14","text":""},{"location":"changelog/#fixed_86","title":"Fixed:","text":"<ul> <li>New Crowdin updates.</li> <li>Updates Avalonia GUI localizations with the latest changes from Crowdin.</li> </ul>"},{"location":"changelog/#111309-2024-05-14","title":"1.1.1309 - 2024-05-14","text":""},{"location":"changelog/#fixed_87","title":"Fixed:","text":"<ul> <li>Bump Avalonia.Svg.</li> <li>Updates the Avalonia.Svg dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111308-2024-05-14","title":"1.1.1308 - 2024-05-14","text":""},{"location":"changelog/#fixed_88","title":"Fixed:","text":"<ul> <li>Add missing lock on texture cache UpdateMapping method.</li> <li>Fixes a crash in Harmony: The Fall of Reverie upon entering the Naiads.</li> </ul>"},{"location":"changelog/#111307-2024-05-14","title":"1.1.1307 - 2024-05-14","text":""},{"location":"changelog/#fixed_89","title":"Fixed:","text":"<ul> <li>Disable keyboard controller input while swkbd is open (foreground).</li> <li>Fixes an issue where playing Stardew Valley with a keyboard would cause the software keyboard prompt not to close.</li> </ul>"},{"location":"changelog/#111306-2024-05-14","title":"1.1.1306 - 2024-05-14","text":""},{"location":"changelog/#fixed_90","title":"Fixed:","text":"<ul> <li>Make TextureGroup.ClearModified thread safe.</li> <li>Fixes crashes in Europa (Demo).</li> </ul>"},{"location":"changelog/#111305-2024-05-14","title":"1.1.1305 - 2024-05-14","text":""},{"location":"changelog/#added_2","title":"Added:","text":"<ul> <li>Add the \"Auto\" theme option in setting.</li> <li>Adds an option for Avalonia to follow OS theme (light or dark).</li> </ul>"},{"location":"changelog/#111304-2024-05-14","title":"1.1.1304 - 2024-05-14","text":""},{"location":"changelog/#fixed_91","title":"Fixed:","text":"<ul> <li>Add support for bindless textures from storage buffer on Vulkan.</li> <li>Fixes rendering in Castle Crashers Remastered.</li> <li>Fixes missing shadows in certain minigames in Mario Party Superstars.</li> </ul>"},{"location":"changelog/#111303-2024-05-14","title":"1.1.1303 - 2024-05-14","text":""},{"location":"changelog/#fixed_92","title":"Fixed:","text":"<ul> <li>discordRPC: Truncate game title and details if they exceed Discord byte limit.</li> <li>Fixes an issue where Discord RPC caused Ryujinx to crash if a game's title was longer than 128 characters.</li> </ul>"},{"location":"changelog/#111302-2024-05-14","title":"1.1.1302 - 2024-05-14","text":""},{"location":"changelog/#fixed_93","title":"Fixed:","text":"<ul> <li>HID: Stub IHidServer: 134 (SetNpadAnalogStickUseCenterClamp).</li> <li>Allows eBaseball Powerful Pro Yakyuu 2020, Pawapoke R,  WBSC eBASEBALL: Power Pros, and possibly other \"Power Pro\" games to boot without \"Ignore Missing Services\".</li> </ul>"},{"location":"changelog/#111301-2024-05-14","title":"1.1.1301 - 2024-05-14","text":""},{"location":"changelog/#fixed_94","title":"Fixed:","text":"<ul> <li>Update outdated Windows version warning.</li> <li>Updates the warning message displayed when an unsupported Windows version is detected.</li> </ul>"},{"location":"changelog/#111300-2024-05-14","title":"1.1.1300 - 2024-05-14","text":""},{"location":"changelog/#fixed_95","title":"Fixed:","text":"<ul> <li>Add Linux-specific files to local builds.</li> <li>Ensures Linux-specific files are copied to the output directory when building locally. Useful for testing certain changes.</li> </ul>"},{"location":"changelog/#111299-2024-05-14","title":"1.1.1299 - 2024-05-14","text":""},{"location":"changelog/#fixed_96","title":"Fixed:","text":"<ul> <li>infra: Update ReSharper's DotSettings.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111298-2024-05-08","title":"1.1.1298 - 2024-05-08","text":""},{"location":"changelog/#fixed_97","title":"Fixed:","text":"<ul> <li>Replace \"List.ForEach\" for \"foreach\".</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111297-2024-05-02","title":"1.1.1297 - 2024-05-02","text":""},{"location":"changelog/#fixed_98","title":"Fixed:","text":"<ul> <li>Fix system dateTime loading in Avalonia LoadCurrentConfiguration.</li> <li>Fixes an issue where trying to change the time to an older date in the Avalonia UI caused the emulator to crash.</li> </ul>"},{"location":"changelog/#111296-2024-05-01","title":"1.1.1296 - 2024-05-01","text":""},{"location":"changelog/#fixed_99","title":"Fixed:","text":"<ul> <li>UI: Fix some MainWindow bugs and implement menubar items to change window size.</li> <li>You can now set the emulator window size to 720p or 1080p from View &gt; Window Size.</li> <li>Window dimensions will no longer be saved when exiting from a maximized state, which caused the size to be reset every time.</li> <li>Fixes an issue where the window startup location would reset to the middle of the screen.</li> </ul>"},{"location":"changelog/#111295-2024-04-29","title":"1.1.1295 - 2024-04-29","text":""},{"location":"changelog/#fixed_100","title":"Fixed:","text":"<ul> <li>Fix Alt key appearing as Control in settings menus.</li> <li>Fixes an issue where the \"Alt\" key would display on the UI as \"Control\" when bound.</li> </ul>"},{"location":"changelog/#111294-2024-04-28","title":"1.1.1294 - 2024-04-28","text":""},{"location":"changelog/#fixed_101","title":"Fixed:","text":"<ul> <li>Fix cursor states on Windows.</li> <li>Prevents the cursor from disappearing during the emulator's game loading screen.</li> <li>Fixes an issue wherein the emulator window could not be resized due to the cursor flickering.</li> <li>Fixes an issue which caused the cursor to disappear over submenus while cursor was set to always hide. </li> <li>Fixes an issue where the check for whether the cursor was within the active window did not take into account the windows position, leading to situations where it would hide where it shouldn't.</li> </ul>"},{"location":"changelog/#111293-2024-04-28","title":"1.1.1293 - 2024-04-28","text":""},{"location":"changelog/#fixed_102","title":"Fixed:","text":"<ul> <li>Fix direct keyboard not working when using a controller.</li> <li>Allows the Ultracam benchmark tool for The Legend of Zelda: Tears of the Kingdom to be used without setting a keyboard as the controller. </li> <li>Allows Deltarune, Undertale, SpongeBob SquarePants: The Cosmic Shake, and likely other games to be played with direct keyboard controls.</li> </ul>"},{"location":"changelog/#111292-2024-04-28","title":"1.1.1292 - 2024-04-28","text":""},{"location":"changelog/#fixed_103","title":"Fixed:","text":"<ul> <li>HID: Correct direct mouse deltas.</li> <li>Fixes mouse aiming in Quake, SpongeBob SquarePants: The Cosmic Shake, and likely the few other games that support mouse controls on the Switch. </li> </ul>"},{"location":"changelog/#111291-2024-04-22","title":"1.1.1291 - 2024-04-22","text":""},{"location":"changelog/#fixed_104","title":"Fixed:","text":"<ul> <li>Add support for bindless textures from shader input (vertex buffer) on Vulkan.</li> <li>On Vulkan, fixes the following:</li> <li>Fixes rendering in mofumofusensen.</li> <li>Fixes missing graphics in PAC-MAN 99, TETRIS 99 and Super Mario Bros. 35.</li> <li>Fixes missing backgrounds in even if TEMPEST, Enchanted in the Moonlight, My Last First Kiss, Irresistible Mistakes, Diabolik Lovers games and likely other visual novels from Voltage.</li> <li>Fixes missing coins in WarioWare: Get It Together.</li> <li>Fixes missing player indicators and radars in FIFA games.</li> </ul>"},{"location":"changelog/#111290-2024-04-21","title":"1.1.1290 - 2024-04-21","text":""},{"location":"changelog/#fixed_105","title":"Fixed:","text":"<ul> <li>Implement MemoryManagerHostTracked.GetReadOnlySequence().</li> <li>Fixes a regression from 1.1.1289 that caused games on macOS to crash on boot. </li> </ul>"},{"location":"changelog/#111289-2024-04-21","title":"1.1.1289 - 2024-04-21","text":""},{"location":"changelog/#changed_5","title":"Changed:","text":"<ul> <li>Use pooled memory and avoid memory copies.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111288-2024-04-21","title":"1.1.1288 - 2024-04-21","text":""},{"location":"changelog/#fixed_106","title":"Fixed:","text":"<ul> <li>End render target lifetime on syncpoint increment.</li> <li>Fixes Balatro crashing on boot.</li> <li>Fixes a regression in Pizza Tower causing a random crash on boot.</li> </ul>"},{"location":"changelog/#111287-2024-04-19","title":"1.1.1287 - 2024-04-19","text":""},{"location":"changelog/#fixed_107","title":"Fixed:","text":"<ul> <li>chore: remove repetitive words.</li> <li>Code cleanup. No expected user-facing changes. </li> </ul>"},{"location":"changelog/#111286-2024-04-19","title":"1.1.1286 - 2024-04-19","text":""},{"location":"changelog/#fixed_108","title":"Fixed:","text":"<ul> <li>Do not compare Span to 'null' or 'default'. <li>Code cleanup. No expected user-facing changes. </li>"},{"location":"changelog/#111285-2024-04-19","title":"1.1.1285 - 2024-04-19","text":""},{"location":"changelog/#fixed_109","title":"Fixed:","text":"<ul> <li>Update to new standard for volatility operations.</li> <li>Code cleanup. No expected user-facing changes. </li> </ul>"},{"location":"changelog/#111284-2024-04-18","title":"1.1.1284 - 2024-04-18","text":""},{"location":"changelog/#fixed_110","title":"Fixed:","text":"<ul> <li>Fix unmapped address check when reading texture handles.</li> <li>Fixes a regression likely from 1.1.1098 that caused Sniper Elite 3 to crash on launch.</li> </ul>"},{"location":"changelog/#111283-2024-04-18","title":"1.1.1283 - 2024-04-18","text":""},{"location":"changelog/#fixed_111","title":"Fixed:","text":"<ul> <li>Update \"SixLabors.ImageSharp\" to fix vulnerabilities.</li> <li>Updates the SixLabors.ImageSharp dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111282-2024-04-17","title":"1.1.1282 - 2024-04-17","text":""},{"location":"changelog/#fixed_112","title":"Fixed:","text":"<ul> <li>Ava UI: Input Menu Refactor.</li> <li>Refactors the input menu code.</li> <li>Platform-specific keys (for instance, the Windows key) will now display properly when a button is bound to them.</li> <li>Allows keys to be localized.</li> </ul>"},{"location":"changelog/#111281-2024-04-15","title":"1.1.1281 - 2024-04-15","text":""},{"location":"changelog/#fixed_113","title":"Fixed:","text":"<ul> <li>Fix crash when changing controller config.</li> <li>Fixes a crash that occurred when switching from an input device without motion (i.e. a keyboard) to a controller with motion support while a game is running. </li> </ul>"},{"location":"changelog/#111280-2024-04-14","title":"1.1.1280 - 2024-04-14","text":""},{"location":"changelog/#fixed_114","title":"Fixed:","text":"<ul> <li>Texture loading: reduce memory allocations.</li> <li>Code cleanup. No expected user-facing changes. </li> </ul>"},{"location":"changelog/#111279-2024-04-11","title":"1.1.1279 - 2024-04-11","text":""},{"location":"changelog/#fixed_115","title":"Fixed:","text":"<ul> <li>Account for swapchain image count change after re-creation.</li> <li>Fixes a crash on AMD proprietary drivers on Linux when VSync is toggled. </li> </ul>"},{"location":"changelog/#111278-2024-04-11","title":"1.1.1278 - 2024-04-11","text":""},{"location":"changelog/#fixed_116","title":"Fixed:","text":"<ul> <li>Allow BSD sockets Poll to exit when emulation ends.</li> <li>Fixes a freeze when trying to stop emulation and/or close the emulator on Penny's Big Breakaway, and possibly on other games that use sockets with Poll.</li> </ul>"},{"location":"changelog/#111277-2024-04-10","title":"1.1.1277 - 2024-04-10","text":""},{"location":"changelog/#fixed_117","title":"Fixed:","text":"<ul> <li>Revert \"Update StoreConstantToMemory to match StoreConstantToAddress on value read\".</li> <li>Reverts the previous change. The specified cheats were invalid and should not be loaded at all.</li> </ul>"},{"location":"changelog/#111276-2024-04-10","title":"1.1.1276 - 2024-04-10","text":""},{"location":"changelog/#fixed_118","title":"Fixed:","text":"<ul> <li>Update StoreConstantToMemory to match StoreConstantToAddress on value read.</li> <li>Fixes some cheats with instructions starting with 6XXXXXXX failing to load, specifically when the cheat has bit width equal to 1, 2 or 4, and only one 32-bit value.</li> </ul>"},{"location":"changelog/#111275-2024-04-10","title":"1.1.1275 - 2024-04-10","text":""},{"location":"changelog/#fixed_119","title":"Fixed:","text":"<ul> <li>Ava UI: Prevent Status Bar Backend Update.</li> <li>Fixes an issue where the GPU displayed on the status bar would change if the graphics backend setting was changed while a game was running.</li> </ul>"},{"location":"changelog/#111274-2024-04-10","title":"1.1.1274 - 2024-04-10","text":""},{"location":"changelog/#fixed_120","title":"Fixed:","text":"<ul> <li>nuget: bump Microsoft.IdentityModel.JsonWebTokens from 7.4.0 to 7.5.1.</li> <li>Updates the Microsoft.IdentityModel.JsonWebTokens dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111273-2024-04-10","title":"1.1.1273 - 2024-04-10","text":""},{"location":"changelog/#fixed_121","title":"Fixed:","text":"<ul> <li>Fix input consumed by audio renderer SplitterState.Update.</li> <li>Fixes a regression from 1.1.1265 that caused crashing in Resident Evil after cinematics. Possibly affected other games.</li> </ul>"},{"location":"changelog/#111272-2024-04-09","title":"1.1.1272 - 2024-04-09","text":""},{"location":"changelog/#fixed_122","title":"Fixed:","text":"<ul> <li>CPU: Produce non-inf results for RSQRTE instruction with subnormal inputs.</li> <li>Fixes terrain randomly disappearing in Penny's Big Breakaway.</li> </ul>"},{"location":"changelog/#111271-2024-04-09","title":"1.1.1271 - 2024-04-09","text":""},{"location":"changelog/#fixed_123","title":"Fixed:","text":"<ul> <li>Use ResScaleUnsupported flag for texture arrays.</li> <li>Fixes rendering glitches in Penny's Big Breakaway when using resolution scale, however the game will no longer scale.</li> </ul>"},{"location":"changelog/#111270-2024-04-09","title":"1.1.1270 - 2024-04-09","text":""},{"location":"changelog/#fixed_124","title":"Fixed:","text":"<ul> <li>Fast D32S8 2D depth texture copy.</li> <li>Improves performance in Penny's Big Breakaway by up to 1500%.</li> </ul>"},{"location":"changelog/#111269-2024-04-08","title":"1.1.1269 - 2024-04-08","text":""},{"location":"changelog/#fixed_125","title":"Fixed:","text":"<ul> <li>Pin audio renderer update output buffers.</li> <li>Fixes a regression from 1.1.1265 that caused crashes in several games.</li> </ul>"},{"location":"changelog/#111268-2024-04-08","title":"1.1.1268 - 2024-04-08","text":""},{"location":"changelog/#fixed_126","title":"Fixed:","text":"<ul> <li>gui: Disable CLI setting persistence for HW-accelerated GUI.</li> <li>CLI argument to enable UI software rendering no longer persists in config state.</li> </ul>"},{"location":"changelog/#111267-2024-04-07","title":"1.1.1267 - 2024-04-07","text":""},{"location":"changelog/#added_3","title":"Added:","text":"<ul> <li>Add support for large sampler arrays on Vulkan.</li> <li>Fixes black textures present in most of Hogwarts Legacy.</li> <li>Fixes most graphical rendering in Penny's Big Breakaway.</li> <li>Fixes grass and other particle effects appearing blocky in The Legend of Zelda: Skyward Sword HD.</li> </ul>"},{"location":"changelog/#111266-2024-04-07","title":"1.1.1266 - 2024-04-07","text":""},{"location":"changelog/#fixed_127","title":"Fixed:","text":"<ul> <li>Fix PC alignment for ADR thumb instruction.</li> <li>Ni no Kuni Wrath of the White Witch will no longer render a black background when the 1.0.2 update applied.</li> </ul>"},{"location":"changelog/#111265-2024-04-07","title":"1.1.1265 - 2024-04-07","text":""},{"location":"changelog/#changed_6","title":"Changed:","text":"<ul> <li>Audio rendering: reduce memory allocations.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111264-2024-04-07","title":"1.1.1264 - 2024-04-07","text":""},{"location":"changelog/#changed_7","title":"Changed:","text":"<ul> <li>Enhance Error Handling with Try-Pattern Refactoring.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111263-2024-04-07","title":"1.1.1263 - 2024-04-07","text":""},{"location":"changelog/#changed_8","title":"Changed:","text":"<ul> <li>Replacing the try-catch block with null-conditional and null-coalescing operators.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111262-2024-04-06","title":"1.1.1262 - 2024-04-06","text":""},{"location":"changelog/#added_4","title":"Added:","text":"<ul> <li>misc: Add ANGLE configuration option to JSON and CLI.</li> <li>Adds command line arguments to change how the UI will be rendered --software-gui = Avalonia will use software rendering. --hardware-gui = Avalonia will use ANGLE/GLX rendering.</li> <li>Should help with using Renderdoc to debug graphics issues. No user-facing changes.</li> </ul>"},{"location":"changelog/#111261-2024-04-06","title":"1.1.1261 - 2024-04-06","text":""},{"location":"changelog/#fixed_128","title":"Fixed:","text":"<ul> <li>Delete old 16KB page workarounds.</li> <li>Deletes unused code. No user-facing changes.</li> </ul>"},{"location":"changelog/#111260-2024-04-06","title":"1.1.1260 - 2024-04-06","text":""},{"location":"changelog/#fixed_129","title":"Fixed:","text":"<ul> <li>Vulkan: Fix swapchain image view leak.</li> <li>Fixes two regressions from 1.1.1154, though it's unknown what games might have been visibly affected.</li> </ul>"},{"location":"changelog/#111259-2024-04-06","title":"1.1.1259 - 2024-04-06","text":""},{"location":"changelog/#fixed_130","title":"Fixed:","text":"<ul> <li>Vulkan: Skip draws for patches topology without a tessellation shader.</li> <li>On AMD graphics cards, fixes a crash in Luigi's Mansion 3 on the sand level.</li> </ul>"},{"location":"changelog/#111258-2024-04-06","title":"1.1.1258 - 2024-04-06","text":""},{"location":"changelog/#fixed_131","title":"Fixed:","text":"<ul> <li>nuget: bump DynamicData from 8.3.27 to 8.4.1.</li> <li>Updates the DynamicData dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111257-2024-04-06","title":"1.1.1257 - 2024-04-06","text":""},{"location":"changelog/#added_5","title":"Added:","text":"<ul> <li>Add mod enablement status in the log message.</li> <li>Displays what mods are enabled in the logs and logging console. Intended to help with troubleshooting.</li> </ul>"},{"location":"changelog/#111256-2024-04-06","title":"1.1.1256 - 2024-04-06","text":""},{"location":"changelog/#changed_9","title":"Changed:","text":"<ul> <li>Remove Unnecessary Category from Docs ReadME.</li> </ul>"},{"location":"changelog/#111255-2024-04-06","title":"1.1.1255 - 2024-04-06","text":""},{"location":"changelog/#fixed_132","title":"Fixed:","text":"<ul> <li>\"Task.Wait()\" synchronously blocks, use \"await\" instead.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111254-2024-04-05","title":"1.1.1254 - 2024-04-05","text":""},{"location":"changelog/#fixed_133","title":"Fixed:","text":"<ul> <li>ts: Migrate service to Horizon project.</li> <li>Allows nx-hbmenu to boot.</li> </ul>"},{"location":"changelog/#111253-2024-04-05","title":"1.1.1253 - 2024-04-05","text":""},{"location":"changelog/#fixed_134","title":"Fixed:","text":"<ul> <li>Ignore diacritics on game search.</li> <li>When searching on the games list, allows \"pokemon\" to display Pok\u00e9mon games, for instance.</li> </ul>"},{"location":"changelog/#111252-2024-04-05","title":"1.1.1252 - 2024-04-05","text":""},{"location":"changelog/#fixed_135","title":"Fixed:","text":"<ul> <li>Add missing ModWindowTitle locale key.</li> <li>Fixes the title for the mod manager window.</li> </ul>"},{"location":"changelog/#111251-2024-04-05","title":"1.1.1251 - 2024-04-05","text":""},{"location":"changelog/#added_6","title":"Added:","text":"<ul> <li>Add support to IVirtualMemoryManager for zero-copy reads.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111250-2024-04-03","title":"1.1.1250 - 2024-04-03","text":""},{"location":"changelog/#fixed_136","title":"Fixed:","text":"<ul> <li>Stop clearing Modified flag on DiscardData.</li> <li>Fixes a regression from 1.1.1024 which sank character models into the ground in Easy Come Easy Golf.</li> </ul>"},{"location":"changelog/#111249-2024-04-02","title":"1.1.1249 - 2024-04-02","text":""},{"location":"changelog/#fixed_137","title":"Fixed:","text":"<ul> <li>New Crowdin updates.</li> <li>Updates Avalonia GUI localizations with the latest changes from Crowdin.</li> </ul>"},{"location":"changelog/#111248-2024-03-27","title":"1.1.1248 - 2024-03-27","text":""},{"location":"changelog/#changed_10","title":"Changed:","text":"<ul> <li>UI: Friendly driver name reporting.</li> <li>Makes graphics driver names on the bottom status bar easier to read.</li> </ul>"},{"location":"changelog/#111247-2024-03-26","title":"1.1.1247 - 2024-03-26","text":""},{"location":"changelog/#added_7","title":"Added:","text":"<ul> <li>Implement host tracked memory manager mode.</li> <li>Changes host memory manager modes on ARM to a better tailored version for ARM systems with 16KB page sizes.</li> <li>On macOS, fixes:<ul> <li>Vertex explosions in Shin Megami Tensei V.</li> <li>MKTV thumbnails in Mario Kart 8 Deluxe.</li> <li>Album photos not displaying correctly in The Legend of Zelda: Breath of the Wild.</li> <li>Random crashes in Pok\u00e9mon Legends Arceus with hypervisor disabled.</li> <li>Crashes on boot with hypervisor disabled in Master Detective Archives: Rain Code, Super Mario Bros. Wonder and The Legend of Zelda: Tears of the Kingdom.</li> <li>Improves performance in games when hypervisor is disabled, most notably in Mario Kart 8 Deluxe (32-bit game, can't use hypervisor) and Super Mario Odyssey. This also means that games which would softlock, freeze or crash (such as Pok\u00e9mon games) will be a lot more playable with hypervisor disabled.</li> </ul> </li> </ul>"},{"location":"changelog/#111246-2024-03-26","title":"1.1.1246 - 2024-03-26","text":""},{"location":"changelog/#fixed_138","title":"Fixed:","text":"<ul> <li>Vulkan: Recreate swapchain correctly when toggling VSync.</li> <li>Fixes an issue where, under certain conditions, toggling VSync via hotkey while in-game would not uncap the framerate beyond the monitor's refresh rate.</li> </ul>"},{"location":"changelog/#111245-2024-03-26","title":"1.1.1245 - 2024-03-26","text":""},{"location":"changelog/#fixed_139","title":"Fixed:","text":"<ul> <li>Disable push descriptors for Intel ARC GPUs on Windows.</li> <li>Fixes Intel Arc graphics cards crashing on several games since 1.1.1198.</li> </ul>"},{"location":"changelog/#111244-2024-03-23","title":"1.1.1244 - 2024-03-23","text":""},{"location":"changelog/#fixed_140","title":"Fixed:","text":"<ul> <li>New gamecard icons.</li> <li>Changes gamecard icons displayed on the games list for applications without icons.</li> </ul>"},{"location":"changelog/#111243-2024-03-23","title":"1.1.1243 - 2024-03-23","text":""},{"location":"changelog/#fixed_141","title":"Fixed:","text":"<ul> <li>Add a few missing locale strings on Avalonia.</li> <li>Makes more UI elements localizable.</li> </ul>"},{"location":"changelog/#111242-2024-03-21","title":"1.1.1242 - 2024-03-21","text":""},{"location":"changelog/#fixed_142","title":"Fixed:","text":"<ul> <li>Updates the default value for BufferedQuery.</li> <li>Fixes RDNA3 graphics cards (RX 7000 series) freezing on some UE4 games, such as Shin Megami Tensei V.</li> </ul>"},{"location":"changelog/#111241-2024-03-21","title":"1.1.1241 - 2024-03-21","text":""},{"location":"changelog/#fixed_143","title":"Fixed:","text":"<ul> <li>[UI] Fix Display Name Translations &amp; Update some Chinese Translations.</li> </ul>"},{"location":"changelog/#111240-2024-03-20","title":"1.1.1240 - 2024-03-20","text":""},{"location":"changelog/#fixed_144","title":"Fixed:","text":"<ul> <li>New Crowdin updates.</li> <li>Updates the Avalonia UI translations and adds Arabic and Thai languages.</li> </ul>"},{"location":"changelog/#111239-2024-03-16","title":"1.1.1239 - 2024-03-16","text":""},{"location":"changelog/#fixed_145","title":"Fixed:","text":"<ul> <li>nuget: bump Microsoft.CodeAnalysis.CSharp from 4.8.0 to 4.9.2.</li> <li>Updates the Microsoft.CodeAnalysis.CSharp. dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111238-2024-03-16","title":"1.1.1238 - 2024-03-16","text":""},{"location":"changelog/#fixed_146","title":"Fixed:","text":"<ul> <li>Ava UI: Fix locale crash.</li> <li>Fixes a UI crash when an invalid locale value is taken from system, or present in config.</li> </ul>"},{"location":"changelog/#111237-2024-03-16","title":"1.1.1237 - 2024-03-16","text":""},{"location":"changelog/#fixed_147","title":"Fixed:","text":"<ul> <li>Ava UI: Content Dialog Fixes.</li> <li>Fixes a macOS-specific error: \"Can't have a toolbar in a window with  as its borderView\", though this did not affect emulator functionality."},{"location":"changelog/#111236-2024-03-16","title":"1.1.1236 - 2024-03-16","text":""},{"location":"changelog/#fixed_148","title":"Fixed:","text":"<ul> <li>nuget: bump Microsoft.IdentityModel.JsonWebTokens from 7.3.0 to 7.4.0.</li> <li>Updates the Microsoft.IdentityModel.JsonWebTokens dependency. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111235-2024-03-16","title":"1.1.1235 - 2024-03-16","text":""},{"location":"changelog/#fixed_149","title":"Fixed:","text":"<ul> <li>nuget: bump the avalonia group with 2 updates.</li> <li>Updates Avalonia dependencies. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111234-2024-03-16","title":"1.1.1234 - 2024-03-16","text":""},{"location":"changelog/#fixed_150","title":"Fixed:","text":"<ul> <li>chore: remove repetitive words.</li> <li>Fixes a few typos in the code.</li> </ul>"},{"location":"changelog/#111233-2024-03-16","title":"1.1.1233 - 2024-03-16","text":""},{"location":"changelog/#fixed_151","title":"Fixed:","text":"<ul> <li>Ava UI: Fix Title Update Manager not refreshing app list.</li> <li>Fixes an issue where game updates would not show as applied on the UI immediately after being applied.</li> </ul>"},{"location":"changelog/#111232-2024-03-16","title":"1.1.1232 - 2024-03-16","text":""},{"location":"changelog/#fixed_152","title":"Fixed:","text":"<ul> <li>Update ApplicationID for Discord Rich Presence.</li> <li>Fixes an issue where the Discord icon for Ryujinx activity did not display proper transparency.</li> </ul>"},{"location":"changelog/#111231-2024-03-14","title":"1.1.1231 - 2024-03-14","text":""},{"location":"changelog/#fixed_153","title":"Fixed:","text":"<ul> <li>GPU: Rebind RTs if scale changes when binding textures.</li> <li>Fixes an issue where some games would show a couple frames of garbled graphics after camera switches, only when running at resolutions higher than native. Affected games include Super Mario Odyssey and The Legend of Zelda: Tears of the Kingdom.</li> </ul>"},{"location":"changelog/#111230-2024-03-14","title":"1.1.1230 - 2024-03-14","text":""},{"location":"changelog/#fixed_154","title":"Fixed:","text":"<ul> <li>Consider Polygon as unsupported if triangle fans are unsupported on Vulkan.</li> <li>On macOS, should fix the stats chart in Pok\u00e9mon Legends Arceus and Pok\u00e9mon Scarlet/Violet. </li> </ul>"},{"location":"changelog/#111229-2024-03-14","title":"1.1.1229 - 2024-03-14","text":""},{"location":"changelog/#fixed_155","title":"Fixed:","text":"<ul> <li>Separate guest/host tracking + unaligned protection.</li> <li>Required for the upcoming host tracked memory manager mode. No expected user-facing changes. </li> </ul>"},{"location":"changelog/#111228-2024-03-13","title":"1.1.1228 - 2024-03-13","text":""},{"location":"changelog/#fixed_156","title":"Fixed:","text":"<ul> <li>Ava UI: Update Ava.</li> <li>Updates the Avalonia package to v11.0.10. </li> </ul>"},{"location":"changelog/#111227-2024-03-13","title":"1.1.1227 - 2024-03-13","text":""},{"location":"changelog/#fixed_157","title":"Fixed:","text":"<ul> <li>infra: Fix updater for old Ava users.</li> <li>Fixes an issue where mainline Avalonia builds before 1.1.1216 would get stuck in a loop when trying to update to newer versions.</li> </ul>"},{"location":"changelog/#111226-2024-03-13","title":"1.1.1226 - 2024-03-13","text":""},{"location":"changelog/#fixed_158","title":"Fixed:","text":"<ul> <li>Increase texture cache total size limit to 1024 MB.</li> <li>Fixes a regression from 1.1.606 that caused 1440p/2160p resolution mods to significantly drop performance or crash. </li> </ul>"},{"location":"changelog/#111225-2024-03-13","title":"1.1.1225 - 2024-03-13","text":""},{"location":"changelog/#fixed_159","title":"Fixed:","text":"<ul> <li>Fix geometry shader passthrough issue.</li> <li>Fixes a regression from 1.1.993 that broke character rendering in Game Builder Garage.</li> </ul>"},{"location":"changelog/#111224-2024-03-11","title":"1.1.1224 - 2024-03-11","text":""},{"location":"changelog/#fixed_160","title":"Fixed:","text":"<ul> <li>Passthrough mouse for win32.</li> <li>Should fix touchscreen controls on games not working on the Avalonia UI on Windows systems.</li> </ul>"},{"location":"changelog/#111223-2024-03-10","title":"1.1.1223 - 2024-03-10","text":""},{"location":"changelog/#fixed_161","title":"Fixed:","text":"<ul> <li>Fix lost copy and swap problem on shader SSA deconstruction.</li> <li>Fixes fog in Princess Peach: Showtime! Demo.</li> <li>Fixes z-fighting in The Legend of Zelda: Tears of the Kingdom.</li> <li>Fixes puddles of water and carpets in No More Heroes 3.</li> <li>Fixes fences and the floor in special stages in Kirby and the Forgotten Land.</li> </ul>"},{"location":"changelog/#111222-2024-03-09","title":"1.1.1222 - 2024-03-09","text":""},{"location":"changelog/#fixed_162","title":"Fixed:","text":"<ul> <li>Refactor memory managers to a common base class, consolidate Read() method logic.</li> <li>Code cleanup. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111221-2024-03-08","title":"1.1.1221 - 2024-03-08","text":""},{"location":"changelog/#fixed_163","title":"Fixed:","text":"<ul> <li>Update dependencies from SixLabors to the latest version before the license change.</li> <li>Fixes a missing fonts crash on games such as Monster Hunter Generations Ultimate (hopefully for good now).</li> <li>Fixes a security vulnerability present in previous versions of ImageSharp.</li> </ul>"},{"location":"changelog/#111220-2024-03-07","title":"1.1.1220 - 2024-03-07","text":""},{"location":"changelog/#fixed_164","title":"Fixed:","text":"<ul> <li>LightningJit: Disable some cache ops and CTR_EL0 access on Windows Arm.</li> <li>Allows LightningJit to work on Windows ARM systems.</li> </ul>"},{"location":"changelog/#111219-2024-03-07","title":"1.1.1219 - 2024-03-07","text":""},{"location":"changelog/#changed_11","title":"Changed:","text":"<ul> <li>UI: Reduce minimum window size to 800x500.</li> <li>Allows the emulator window to be resized down to a minimum of 800x500.</li> </ul>"},{"location":"changelog/#111218-2024-03-07","title":"1.1.1218 - 2024-03-07","text":""},{"location":"changelog/#added_8","title":"Added:","text":"<ul> <li>Add title of game to screenshot text.</li> <li>Ryujinx screenshot filenames will now contain the application title.</li> </ul>"},{"location":"changelog/#111216-111217-2024-03-02","title":"1.1.1216-1.1.1217 - 2024-03-02","text":""},{"location":"changelog/#changed_12","title":"Changed:","text":"<ul> <li>infra: Make Avalonia the default UI.</li> <li>Replaces the old GTK user interface with the Avalonia-based UI as the default on Windows and Linux (macOS already had it). Avalonia has feature parity with GTK, plus the following differences:</li> <li>Volume level can now be adjusted from the bottom status bar.</li> <li>Default controller profile will now be automatically loaded upon selecting a new controller. </li> <li>Improved the controller applet considerably, with a menu button to go directly into input settings.</li> <li>Added a customizable grid view for the games list.  </li> <li>Added a game loading screen which displays PPTC and shader cache progress.</li> <li>Added configurable hotkeys for vsync toggle (framerate limiter), screenshots, mute/unmute audio, increase/decrease volume and increase/decrease resolution.</li> <li>Added a save manager under Options &gt; Manage User Profiles. Allows for easy file deletion and quick save folder opening. Also adds an option to restore deleted user profiles using existing saves. (Backup/restore functionality is still being worked on.)</li> <li>Added Brazilian Portuguese, Castilian Spanish, French, German, Greek, Hebrew, Italian, Japanese, Korean, Polish, Russian, Simplified Chinese, Traditional Chinese, Turkish and Ukrainian localizations for UI text.</li> <li>Fixes issues with emulator files not being properly extracted sometimes.</li> <li>Fixes an issue where PCs with 2 graphics cards (especially laptops) wouldn't properly detect the GPU, crashing on boot.</li> <li>Fixes the occasional \"GTK Critical\" crash when double-clicking to run games.</li> <li>Fixes a crash where some games, such as the Monster Hunter series, would error out when bringing up the software keyboard due to missing fonts in the system.</li> <li>Fixes an extremely rare issue where attempting to install firmware would freeze Ryujinx.</li> <li>Many, many more smaller changes.</li> </ul>"},{"location":"changelog/#111215-2024-03-02","title":"1.1.1215 - 2024-03-02","text":""},{"location":"changelog/#fixed_165","title":"Fixed:","text":"<ul> <li>Avalonia: only enable gamescope workaround under it.</li> <li>Fixes a regression from 1.1.1203 that caused Avalonia's drop-down menus to not show until after several clicks on some Linux installations.</li> </ul>"},{"location":"changelog/#111214-2024-02-24","title":"1.1.1214 - 2024-02-24","text":""},{"location":"changelog/#fixed_166","title":"Fixed:","text":"<ul> <li>Change packed aliasing formats to UInt.</li> <li>On AMD GPUs, fixes graphical glitches in CEIBA, Wet Steps and Yokai Watch 1.</li> </ul>"},{"location":"changelog/#111213-2024-02-23","title":"1.1.1213 - 2024-02-23","text":""},{"location":"changelog/#fixed_167","title":"Fixed:","text":"<ul> <li>nuget: bump System.Drawing.Common from 8.0.1 to 8.0.2.</li> <li>Dependency update. No expected user-facing changes.</li> </ul>"},{"location":"changelog/#111212-2024-02-23","title":"1.1.1212 - 2024-02-23","text":""},{"location":"changelog/#fixed_168","title":"Fixed:","text":"<ul> <li>IPC code gen improvements.</li> <li>Code cleanup. No expected changes in games.</li> </ul>"},{"location":"changelog/#111211-2024-02-22","title":"1.1.1211 - 2024-02-22","text":""},{"location":"changelog/#fixed_169","title":"Fixed:","text":"<ul> <li>Migrate Audio service to new IPC.</li> <li>Fixes missing sound in Unicorn Overlord Demo.</li> <li>Fixes an issue where emulator volume would get reset to 100% in certain games that set custom volumes (tested with River City Girls Zero).</li> </ul>"},{"location":"changelog/#111210-2024-02-22","title":"1.1.1210 - 2024-02-22","text":""},{"location":"changelog/#fixed_170","title":"Fixed:","text":"<ul> <li>OpenGL: Mask out all color outputs with no fragment shader.</li> <li>Fixes shadows in Penny's Big Breakaway on OpenGL.</li> </ul>"},{"location":"changelog/#111209-2024-02-22","title":"1.1.1209 - 2024-02-22","text":""},{"location":"changelog/#fixed_171","title":"Fixed:","text":"<ul> <li>Ensure service init runs after Horizon constructor.</li> <li>Fixes an uncommon crash when launching games after stopping emulation multiple times.</li> </ul>"},{"location":"changelog/#111208-2024-02-22","title":"1.1.1208 - 2024-02-22","text":""},{"location":"changelog/#fixed_172","title":"Fixed:","text":"<ul> <li>Implement virtual buffer dependencies.</li> <li>Fixes model flickering in Apollo Justice: Ace Attorney Trilogy on macOS and OpenGL.</li> <li>Allows Monster Hunter Rise: Sunbreak to go in-game on macOS.</li> </ul>"},{"location":"changelog/#111207-2024-02-22","title":"1.1.1207 - 2024-02-22","text":""},{"location":"changelog/#fixed_173","title":"Fixed:","text":"<ul> <li>Vulkan: Properly reset barrier batch when splitting due to mismatching flags.</li> <li>Fixes a regression from 1.1.1205 that caused several games to crash.</li> </ul>"},{"location":"changelog/#111206-2024-02-21","title":"1.1.1206 - 2024-02-21","text":""},{"location":"changelog/#fixed_174","title":"Fixed:","text":"<ul> <li>Vulkan: Disable push descriptors on older NVIDIA GPUs.</li> <li>Fixes a regression from 1.1.1198 that caused rendering issues on Nvidia GPU series 1000 and older.</li> </ul>"},{"location":"changelog/#111205-2024-02-21","title":"1.1.1205 - 2024-02-21","text":""},{"location":"changelog/#fixed_175","title":"Fixed:","text":"<ul> <li>Vulkan: Fix barrier batching past limit.</li> <li>Fixes a regression from 1.1.1199 that caused some games to freeze.</li> </ul>"},{"location":"changelog/#111204-2024-02-19","title":"1.1.1204 - 2024-02-19","text":""},{"location":"changelog/#fixed_176","title":"Fixed:","text":"<ul> <li>Avalonia UI: Update English tooltips.</li> <li>Updates a few settings tooltips on the Avalonia UI to better explain what the settings do.</li> </ul>"},{"location":"changelog/#111203-2024-02-19","title":"1.1.1203 - 2024-02-19","text":""},{"location":"changelog/#fixed_177","title":"Fixed:","text":"<ul> <li>Avalonia: Fix gamescope once and for all.</li> <li>Fixes Avalonia context menus not showing on the Steam Deck's gaming mode.</li> </ul>"},{"location":"changelog/#111202-2024-02-17","title":"1.1.1202 - 2024-02-17","text":""},{"location":"changelog/#fixed_178","title":"Fixed:","text":"<ul> <li>LightningJit: Add a limit on the number of instructions per function for Arm64.</li> <li>Fixes a crash in Bluey: The Videogame with LightningJit.</li> </ul>"},{"location":"changelog/#111200-111201-2024-02-17","title":"1.1.1200-1.1.1201 - 2024-02-17","text":""},{"location":"changelog/#fixed_179","title":"Fixed:","text":"<ul> <li>hid: Stub SetTouchScreenResolution.</li> <li>Allows Tomb Raider I-III Remastered to go in-game without enabling \"Ignore Missing Services\".</li> </ul>"},{"location":"changelog/#111199-2024-02-16","title":"1.1.1199 - 2024-02-16","text":""},{"location":"changelog/#fixed_180","title":"Fixed:","text":"<ul> <li>Vulkan: Improve texture barrier usage, timing and batching.</li> <li>Fixes graphical issues on the Turnip Mesa driver in Mario Kart 8 Deluxe, Super Mario Odyssey and other games.</li> <li>Fixes Bayonetta Origins: Cereza and the Lost Demon water surfaces on Vulkan on desktop GPUs.</li> </ul>"},{"location":"changelog/#111198-2024-02-16","title":"1.1.1198 - 2024-02-16","text":""},{"location":"changelog/#fixed_181","title":"Fixed:","text":"<ul> <li>Vulkan: Use push descriptors for uniform bindings when possible.</li> <li>Improves Vulkan performance significantly on AMD Mesa drivers and to a lesser degree on AMD Windows drivers.</li> <li>May improve stability on more underpowered systems.</li> </ul> Older releases    ## 1.1.1197 - 2024-02-15 ### Fixed: - Implement X8Z24 texture format.   - Fixes some lighting issues on Tomb Raider I-III Remastered.  ## 1.1.1196 - 2024-02-15 ### Fixed: - Fix PermissionLocked check on UnmapProcessCodeMemory.   - Fixes a crash on Tomb Raider I-III Remastered when the game is changed on the selection menu.  ## 1.1.1195 - 2024-02-15 ### Fixed: - Remove Vulkan SubgroupSizeControl enablement code.   - Fixes a crash when trying to run the emulator with Dozen (Vulkan emulated with Direct3D) driver on Windows.  ## 1.1.1194 - 2024-02-15 ### Changed: - Stub VSMS related ioctls.   - Fixes a crash when starting Tomb Raider I-III Remastered. It still requires enabling the \"ignore missing services\" option to run.  ## 1.1.1193 - 2024-02-15 ### Changed: - Updaters: Fix ARM Linux Updater.   - Allows the auto-updater to work on Arm64 Linux.  ## 1.1.1192 - 2024-02-11 ### Fixed: - Handle exceptions when checking user data directory for symlink.   - Fixes a crash introduced on version 1.1.1191 when the emulator is started for the first time.  ## 1.1.1191 - 2024-02-11 ### Fixed: - macOS: Stop storing user data in Documents for some users; fix symlinks.   - Stops storing user data in Documents for some users on macOS and fixes symlinks.  ## 1.1.1190 - 2024-02-11 ### Changed: - Force add linux-x64 apphost in flathub nuget source   - Some misc changes to handle deployment on flatpak for arm64.   ## 1.1.1189 - 2024-02-11 ### Changed: - Restore Nuget packages for linux-arm64 for Flatpak   - Some misc changes to handle deployment on flatpak for arm64.   ## 1.1.1188 - 2024-02-11 ### Changed: - Add Open Mod Dir button again   - Add the Open Mod Dir button again on Avalonia   ## 1.1.1187 - 2024-02-11 ### Changed: - Capitalisation Consistency   - Some misc code cleanup   ## 1.1.1186 - 2024-02-11 ### Changed: - Standardize logging locations across desktop platforms   - Create logs in a more logical path depending on the platform     - `%APPDATA%\\Ryujinx\\Logs` on Windows.     - `~/.config/Ryujinx/Logs` on Linux.     - `~/Library/Logs/Ryujinx` (or `~/Library/Application Support/Ryujinx/Logs`) on macOS.   ## 1.1.1185 - 2024-02-11 ### Changed: - Reorder available executables in Ryujinx.sh   - Avoid Ryujinx.Headless.SDL2 as a last resort in Ryujinx.desktop when you have more than one executable installed   ## 1.1.1184 - 2024-02-11 ### Changed: - Remove ReflectionBinding in Mod Manager   - Some cleanup in the mod manager on Avalonia   ## 1.1.1183 - 2024-02-11 ### Changed: - Update Avalonia About Window   - Fix minor style issue in the about window on Avalonia   ## 1.1.1182 - 2024-02-11 ### Fixed: - Fix mip offset/size for full 3D texture upload on Vulkan   - Fix broken water in Hyrule Warriors Age of Calamity   ## 1.1.1181 - 2024-02-10 ### Fixed: - Retrigger CI after failure of complete release   ## 1.1.1180 - 2024-02-10 ### Fixed: - Add missing RID exclusions for linux-arm64   - Clean up unrelated libraries from linux-arm64 release tar   ## 1.1.1179 - 2024-02-10 ### Changed: - Enable Linux ARM64 on build and release   - We now provide linux-arm64 builds   ## 1.1.1178 - 2024-02-10 ### Fixed: - Set PointSize in shader on OpenGL   - Fix possible undefined behaviour on some drivers   ## 1.1.1177 - 2024-02-10 ### Fixed: - Make IOpenGLContext.HasContext context dependent   - Fix SDL2 headless on Wayland   ## 1.1.1176 - 2024-02-10 ### Fixed: - Load custom SDL mappings from application data folder   - Fix regression on macOS for SDL_GameControllerDB.txt loading path   ## 1.1.1175 - 2024-02-10 ### Fixed: - Force CPU copy for non-identity DMA remap   - Fix some bugs with inverted RGBA components on the game 30XX   ## 1.1.1174 - 2024-02-10 ### Changed: - Update Ryujinx.Graphics.Nvdec.Dependencies to 5.0.3-build14   - Add linux-arm64 and update to ffmpeg 5.0.3   ## 1.1.1173 - 2024-02-08 ### Fixed: - Revert Avalonia bump   - X popup position broke entirely  ## 1.1.1172 - 2024-02-08 ### Changed: - Remove SDC.   - Removes remaining usages of System.Drawing.Common.  ## 1.1.1171 - 2024-02-08 ### Fixed: - LightningJit: Reduce stack usage for Arm32 code.   - Significantly reduces stack usage in some cases.   - Fixes a crash in Gothic.  ## 1.1.1170 - 2024-02-08 ### Changed: - Remove Vic Reference to Host1x.   - Cleanup. No expected changes.  ## 1.1.1169 - 2024-02-08 ### Added: - GPU: Implement BGR10A2 render target format.   - Improves rendering on Infinite Tanks World War 2.  ## 1.1.1168 - 2024-02-08 ### Fixed: - Bump Ava.   - Dependency update. Fixes windows not appearing in Gamescope. (SteamOS Game Mode)  ## 1.1.1167 - 2024-02-08 ### Changed: - nuget: bump Microsoft.NET.Test.Sdk from 17.8.0 to 17.9.0.   - Dependency update. No expected changes.  ## 1.1.1166 - 2024-02-08 ### Changed: - GUI: Replace Flex Panels in favor of Wrap Panels for Avalonia.   - Allows keyboard navigation in grid view, improves consistency, and removes a dependency.  ## 1.1.1165 - 2024-02-08 ### Fixed: - GPU: Clamp vertex buffer size to mapped size if too high.   - Fixes crash in Infinite Tanks World War 2 and Blades of Time.  ## 1.1.1164 - 2024-02-07 ### Changed: - chore: Update Ryujinx.SDL2-CS to 2.30.0.   - Dependency update. No expected changes.  ## 1.1.1163 - 2024-02-06 ### Added: - Redact usernames from logs.   - Improves user privacy in logs by redacting usernames.  ## 1.1.1162 - 2024-02-06 ### Fixed: - HLE/SERVICES: Cache AccountService token data.   - Fixes low framerates in games that request token data often, such as Monopoly for Nintendo Switch.  ## 1.1.1161 - 2024-02-06 ### Fixed: - GUI: Fix crash when window is moved after a modal is dismissed.   - Fixes a crash that could occur if the main window's position was changed if a modal was dismissed beforehand on Ava UI.  ## 1.1.1160 - 2024-02-05 ### Changed: - nuget: bump SPB from 0.0.4-build28 to 0.0.4-build32.   - Dependency update. No expected changes.  ## 1.1.1159 - 2024-02-04 ### Fixed: - GPU: Revert change to skip flush when range size is 0.   - Fixes a regression caused by 1.1.1066 in Sonic Team Racing.  ## 1.1.1158 - 2024-02-04 ### Fixed: - GPU: Fix depth compare value for TLD4S shader instruction with offset.   - Fixes shadows in Hotshot Racing.  ## 1.1.1157 - 2024-02-04 ### Fixed: - GPU: Remove component operand for texture gather with depth compare.   - Fixes a crash in Hotshot Racing on Vulkan.  ## 1.1.1156 - 2024-02-03 ### Fixed: - Limit remote closed session removal to SM service.   - Fixes a regression caused by 1.1.1155 in \"multi-program\" games (e.g. Super Mario 3D All-Stars).  ## 1.1.1155 - 2024-02-02 ### Fixed: - Ensure SM service won't listen to closed sessions.   - Resolves a bug where titles that use the JIT service (e.g. N64 NSO) would fail to boot after 1.1.1131.  ## 1.1.1154 - 2024-01-31 ### Added: - Vulkan: Add Render Pass / Framebuffer Cache.   - Reduces driver specific costs for render pass/framebuffer re-creation.  ## 1.1.1153 - 2024-01-31 ### Changed: - nuget: bump Microsoft.IdentityModel.JsonWebTokens from 7.2.0 to 7.3.0.   - Dependency update. No expected changes.  ## 1.1.1152 - 2024-01-30 ### Fixed: - Fix opening the wrong log directory.   - \"Open Log directory\" button now opens the correct log directory again.  ## 1.1.1151 - 2024-01-30 ### Fixed: - Fix exception when trying to read output pointer buffer size.   - Fixes a crash caused by the friend service IPC migration in Animal Crossing: New Horizons.  ## 1.1.1150 - 2024-01-29 ### Added: - Cpu: Implement Vpadal and Vrintr instructions.   - Adds implementations for the above CPU instructions to the JIT.   - Required by Super Putty Squad and potentially other 32-bit titles.  ## 1.1.1149 - 2024-01-29 ### Fixed: - deps: Update Avalonia.Svg.   - Dependency update. No expected user changes.  ## 1.1.1148 - 2024-01-29 ### Fixed: - Ava UI: Mod Manager Fixes (Again).   - Fixed an error message typo.   - Fixed deleting mods from directories.   - Fixed deleting non-subdirectory mods.   - Fixed excessive looping if parent directory found.  ## 1.1.1147 - 2024-01-29 ### Fixed: - UI: Clarify Create Application Shortcut tooltip text.   - Accurate information on where a shortcut is being created is now present on macOS releases.  ## 1.1.1146 - 2024-01-29 ### Fixed: - Avalonia: Fix dialog issues caused by 1.1.1105.   - Fixes a bug where multiple dialogs could be open at the same time and cause a deadlock.  ## 1.1.1145 - 2024-01-29 ### Fixed: - Migrate friends services to new IPC.   - Remaining friend services migrated and implemented/stubbed if required.   - No expected changes in games.  ## 1.1.1144 - 2024-01-29 ### Fixed: - Make config filename changable for releases &amp; Log to Ryujinx directory if application directory is not writable.   - Adjustments to where logs and other configuration files are stored under certain environments.   - Most platforms will be unaffected**.  **INFO: This change has temporarily caused the wrong directory to open when selecting File-&gt;Open Log folder. If you need to access logs before this is fixed, they will be in a folder next to where you keep the executable!  ## 1.1.1143 - 2024-01-29 ### Fixed: - Mod: Do LayeredFs loading Parallel to improve speed.   - Reduces the boot times on games with a large number of mods applied.  ## 1.1.1142 - 2024-01-29 ### Fixed: - Fix NRE when calling GetSockName before Bind.   - Zengeon will no longer crash on boot with a socket error.  ## 1.1.1141 - 2024-01-27 ### Fixed: - infra: Reformat README.md &amp; add new generic Mako workflow.   - No expected changes to emulator functionality.  ## 1.1.1140 - 2024-01-26 ### Fixed: - nuget: bump NetCoreServer from 7.0.0 to 8.0.7.   - Updates the NetCoreServer dependency. No expected changes in games.  ## 1.1.1139 - 2024-01-26 ### Fixed: - Allow skipping draws with broken pipeline variants on Vulkan.   - Fixes a crash on macOS in Fire Emblem: Three Houses, triggered by using the \"Divine Pulse\" ability.  ## 1.1.1138 - 2024-01-26 ### Fixed: - Ava UI: Mod Manager Fixes.   - Fixes a crash when selecting an invalid mod directory.   - Fixes a crash when trying to enumerate through a directory that Ryujinx doesn't have permissions to access.   - Fixes mods not deleting at the parent directory, leaving invisible orphan files that would prevent re-importing of the same mod.   - Better logging and user feedback.  ## 1.1.1137 - 2024-01-25 ### Added: - Fs: Log when Commit fails due to PathAlreadyInUse.   - Adds a logging message for situations where files that the emulator needs to access are being used by another process. Meant to help with troubleshooting.  ## 1.1.1136 - 2024-01-25 ### Added: - Ava UI: Mod Manager.   - Adds a mod manager to the Avalonia UI. To access it, right click on a game and click on \"Manage Mods\".  ## 1.1.1135 - 2024-01-25 ### Changed: - Use driver name instead of vendor name in the status bar for Vulkan.   - For instance, the status bar will display \"RADV\" instead of just \"AMD\" on Linux when using the RADV driver.  ## 1.1.1134 - 2024-01-25 ### Fixed: - nuget: bump System.Drawing.Common from 8.0.0 to 8.0.1.   - Updates the System.Drawing.Common dependency. No expected changes in games.  ## 1.1.1133 - 2024-01-25 ### Changed: - Ava UI: Fix Warn &amp; Remove Custom Theming.   - Removes custom theme functionality from the Avalonia UI, as it was not being used, in part due to being too much work for the user.  ## 1.1.1132 - 2024-01-25 ### Fixed: - nuget: bump DynamicData from 7.14.2 to 8.3.27.   - Updates the DynamicData dependency. No expected changes in games.  ## 1.1.1131 - 2024-01-25 ### Fixed: - Horizon: Implement arp:r and arp:w services.   - Migrates arp:r and arp:w services to the Horizon project and updates them to reflect newest firmware changes. No expected changes in games.  ## 1.1.1130 - 2024-01-25 ### Fixed: - ssl: Work around missing remote hostname for authentication.   - Workaround for an issue where Ryujinx would crash when trying to interact with the GitHub API when using certain mods.  ## 1.1.1129 - 2024-01-25 ### Fixed: - nuget: bump Microsoft.IO.RecyclableMemoryStream from 2.3.2 to 3.0.0.   - Updates the Microsoft.IO.RecyclableMemoryStream dependency. No expected changes in games.  ## 1.1.1128 - 2024-01-25 ### Fixed: - nuget: bump Microsoft.CodeAnalysis.CSharp from 4.7.0 to 4.8.0.   - Updates the Microsoft.CodeAnalysis.CSharp dependency. No expected changes in games.  ## 1.1.1127 - 2024-01-25 ### Fixed: - Vulkan: Use staging buffer for temporary constants.   - May improve Vulkan performance slightly on some games.  ## 1.1.1126 - 2024-01-25 ### Fixed: - Deps: OpenTK Bump.   - Updates OpenTK dependencies. No expected changes in games.  ## 1.1.1125 - 2024-01-24 ### Added: - Implement SQSHL (immediate) CPU instruction.   - Fixes a crash when playing AV1 encoded videos on NXMP using dav1d decoder (homebrew).  ## 1.1.1124 - 2024-01-24 ### Fixed: - Vulkan: Enumerate Query Pool properly.   - Minor performance improvement on some games.  ## 1.1.1123 - 2024-01-24 ### Fixed: - Use unix timestamps on GetFileTimeStampRaw.   - The GetFileTimeStampRaw file system function now returns the correct timestamps.   - Fixes incorrect file date and time on NXMP and possibly other homebrew.  ## 1.1.1122 - 2024-01-22 ### Fixed: - Fix architecture preference for MacOS game shortcuts.   - Fixes an issue where shortcuts created on Apple Silicon Macs would start games using Rosetta emulation by default, in some cases lowering performance.  ## 1.1.1121 - 2024-01-22 ### Fixed: - Fix missing data for new copy dependency textures with mismatching size.   - Fixes a texture cache bug where part of the texture could be missing, if its data overlaps with an existing, smaller texture.   - Fixes text being corrupted in Shantae and the Pirate's Curse in a few cases, a regression introduced on build 1.1.605.   - Might also fix random texture corruption in other games.  ## 1.1.1120 - 2024-01-22 ### Added: - Add a separate device memory manager.   - Reading or writing video data to unmapped memory regions will no longer cause the emulator to crash.   - Should fix random crashes on PERSONA 5 Tactica while pre-rendered cutscenes are played, but that is unconfirmed.  ## 1.1.1119 - 2024-01-22 ### Fixed: - Input: Improve controller identification.   - Ensures that controllers are connected to a consistent player number when multiple controllers are connected and disconnected.   - This ensures that, for example, Player 1 will not change to Player 2 and vice-versa if one of the controllers is disconnected.  ## 1.1.1118 - 2024-01-21 ### Fixed: - Fix integer overflow on downsample surround to stereo.   - Fixes audio peaking and crackling with SDL2 backend on Shin Megami Tensei V, and likely other games that use surround 5.1 output, when the connected audio device only supports stereo or mono.  ## 1.1.1117 - 2024-01-20 ### Added: - Implement a new JIT for Arm devices.   - Significantly improves code compilation speed and size on ARM devices.   - 32-bit and 64-bit games will boot faster and no longer need PPTC when using JIT on ARM devices.   - Close to native execution without need for platform specific hypervisor (e.g. Linux/Windows ARM devices).    *Note: Games that are not playable via hypervisor on macOS, such as Breath of the Wild/Animal Crossing, may now work better via JIT.  ## 1.1.1116 - 2024-01-20 ### Added: - Vulkan: Use templates for descriptor updates.   - Improves performance for the open-source AMD mesa driver (RADV) by up to 12%.   - Other drivers are not expected to see any noticable changes.  ## 1.1.1115 - 2024-01-20 ### Added: - Support portable mode using the macOS app bundle.   - Allows using the `portable` directory next to the macOS bundle.  ## 1.1.1114 - 2024-01-18 ### Fixed: - Change shader cache init wait method.   - Code cleanup. No expected changes in games.  ## 1.1.1113 - 2024-01-18 ### Fixed: - Move most of signal handling to Ryujinx.Cpu project.   - Code cleanup, will help the upcoming ARM JIT. No expected changes in games.  ## 1.1.1112 - 2024-01-17 ### Fixed: - Ava UI: Update Ava &amp; Friends.   - Updates all Avalonia-related dependencies. May fix some issues with the UI.  ## 1.1.1111 - 2024-01-16 ### Fixed: - Vulkan: Cache delegate for EndRenderPass.   - Small Vulkan optimization. No known visible changes in games.  ## 1.1.1110 - 2024-01-14 ### Fixed: - Fix vertex buffer size when switching between inline and state draw parameter.   - Fixes rendering in Citizens of Space.  ## 1.1.1109 - 2024-01-13 ### Fixed: - Revert Apple hypervisor force ordered memory change.   - Reverts the change in 1.1.1072 due to causing freezes in several games on macOS, including Pok\u00e9mon Scarlet/Violet and Red Dead Redemption.      - Animal Crossing and Splatoon 2 players will likely prefer to stay on 1.1.1108 (Breath of the Wild was still not playable with this change).  ## 1.1.1108 - 2024-01-13 ### Fixed: - Fix Amiibo regression and some minor code improvements.   - Fixes a regression introduced in 1.1.1102 that caused Amiibo functionality to not work if the Amiibo.json file didn't already exist, affecting mostly new Ryujinx installs.   - Makes the Amiibo functionality more robust against certain exceptions.   - Related exceptions are now logged.  ## 1.1.1107 - 2024-01-13 ### Fixed: - Switch to Microsoft.IdentityModel.JsonWebTokens.   - Minor dependency change. No expected changes in games.  ## 1.1.1106 - 2024-01-12 ### Added: - Ava UI: RTL Language Support.   - On the Avalonia UI, adds support for languages that read right to left.   - Adds Hebrew as an option for UI language.  ## 1.1.1105 - 2024-01-12 ### Fixed: - Ava UI: Better Controller Applet.   - On the Avalonia UI, redesigns the controller applet to be clearer and easier to understand.   - Clicking \"Open Settings Window\" on the controller applet will now take you directly to input settings.  ## 1.1.1104 - 2024-01-03 ### Fixed: - Fix PPTC version string for firmware titles.   - Allows NSO Nintendo 64 games to work with firmware versions 13.0 and up.  ## 1.1.1103 - 2024-01-03 ### Fixed: - Add support for PermissionLocked attribute added on firmware 17.0.0.   - Allows NSO Nintendo 64 games to work with firmware version 17.0.  ## 1.1.1102 - 2023-12-27 ### Fixed: - Local Amiibo.json should be used if connection failed.   - Allows offline usage of Amiibo if the Amiibo.json file has been loaded before.  ## 1.1.1101 - 2023-12-25 ### Fixed: - Ava UI: Fix crash when clicking on a cheat's name.   - On the Avalonia GUI, fixes a crash caused by clicking on a cheat name in the cheats manager while the game is running.   - Fixes the game title disappearing from the cheats manager when accessing it while the game is running.  ## 1.1.1100 - 2023-12-11 ### Fixed: - [macOS] Correctly set filetypes in Info.plist.   - .nsp and .xci files will now be properly associated to open with Ryujinx on macOS, if the user chooses to do so.  ## 1.1.1099 - 2023-12-11 ### Fixed: - Ava UI: Fix temporary volume not being set after unmute.   - On the Avalonia UI, fixes an issue where muting and unmuting audio after changing the volume via the bottom status bar, would reset the volume to the original value, instead of returning it to what it was before muting.  ## 1.1.1098 - 2023-12-04 ### Fixed: - Implement support for multi-range buffers using Vulkan sparse mappings.   - Monster Hunter Rise: Sunbreak is now playable using Vulkan on Nvidia, AMD and Intel graphics cards. Apple Silicon GPUs and OpenGL still won't be able to run any updates newer than 3.9.1 for this game.  ## 1.1.1097 - 2023-12-04 ### Fixed: - ApplicationLibrary: Skip invalid symlinks.   - Fixes a FileNotFoundException caused by attempting to run a game on the games list that is no longer in the specified games directory.  ## 1.1.1096 - 2023-12-04 ### Fixed: - Improve indication of emulation being paused by the User.   - On emulation pause, a \"Paused\" indicator will be added to the application title bar, and the pause will also be logged on the console and log files.  ## 1.1.1095 - 2023-12-04 ### Fixed: - editorconfig: Set default encoding to UTF-8.   - Code cleanup. No expected changes to emulator functionality.  ## 1.1.1094 - 2023-11-30 ### Added: - HLE: Add OS-specific precise sleep methods to reduce spinwaiting.   - Reduces energy usage, especially on Linux and macOS. Should help battery-powered systems (such as the Steam Deck or laptops) not run out of battery as quickly while running games on Ryujinx.   - May help devices that are thermal throttling.  ## 1.1.1093 - 2023-11-22 ### Fixed: - Extend bindless elimination to see through shuffle.   - Fixes missing cubemap reflections in Detective Pikachu Returns.  ## 1.1.1092 - 2023-11-19 ### Fixed: - Enable copy dependency between RGBA8 and RGBA32 formats.   - Fixes cicadas not rendering when you catch them in Yo-kai Watch 1.   - Improves rendering in Wet Steps.   - May improve rendering on other games that use OpenGL on the Switch.  ## 1.1.1091 - 2023-11-19 ### Fixed: - Extend bindless elimination to see through Phis with the same results.   - Fixes some shadow issues in Super Mario RPG.  ## 1.1.1090 - 2023-11-18 ### Fixed: - misc: Default to Vulkan if available or running on macOS.   - The default graphics backend will be Vulkan if a supported graphics card is detected.  ## 1.1.1089 - 2023-11-16 ### Fixed: - Fix JitCache.Unmap called with the same address freeing memory in use.   - Fixes a crash that would occur after launching the 3D All-Stars version of Super Mario 64, stopping emulation and then launching another game.  ## 1.1.1088 - 2023-11-16 ### Fixed: - Fix macOS Path on .NET 8.   - Fixes an issue on macOS where, after 1.1.1084, Ryujinx would look for the data folder in the user's Documents directory, rather than in Application Support.  ## 1.1.1087 - 2023-11-15 ### Fixed: - Fix missing texture flush for draw then DMA copy sequence without render target change.   - Fixes duplicate item icons in Fashion Dreamer.  ## 1.1.1086 - 2023-11-15 ### Fixed: - chore: Update OpenTK to 4.8.1.   - Updates the OpenTK dependency. No expected changes to emulator functionality.  ## 1.1.1085 - 2023-11-15 ### Fixed: - Fix flatpak not building after .NET 8.  ## 1.1.1084 - 2023-11-15 ### Fixed: - Migrate to .NET 8.   - Migrates Ryujinx to the new .NET version.   - Improves performance slightly on almost every game.   ## 1.1.1083 - 2023-11-14 ### Fixed: - Disable DMA GPU copy for block linear to linear copies.   - Fixes rendering issues in Fashion Dreamer.   ## 1.1.1082 - 2023-11-14 ### Fixed: - Fix TextureGroup.SignalModifying not being called.   - Fixes a regression from 1.1.1080 that broke textures in some games.   ## 1.1.1081 - 2023-11-14 ### Changed: - Change minimum OS to macOS 12 in Info.plist.   - Ryujinx will no longer open on macOS 11 and older, as games could never run on those versions anyway.   ## 1.1.1080 - 2023-11-13 ### Fixed: - Do not set modified flag again if texture was not modified.   - Fixes a regression from 1.1.1066 that caused garbled textures on OpenGL in Digimon Story Cyber Sleuth: Complete Edition.   - On macOS, fixes lens flare flickering in The Legend of Zelda: Breath of the Wild.  ## 1.1.1079 - 2023-11-11 ### Fixed: - Revert \"Add support for multi game XCIs\".   - Reverts the change in 1.1.1076 due to causing issues with certain game dumps.  ## 1.1.1078 - 2023-11-11 ### Fixed: - Switch back to ubuntu-20.04.   - Fixed GitHub actions not building for Linux and macOS.  ## 1.1.1077 - 2023-11-11 ### Fixed: - Switch to LLVM 15.   - Attempted to fix GitHub actions not building for macOS.  ## 1.1.1076 - 2023-11-11 ### Fixed: - Add support for multi game XCIs.  ## 1.1.1075 - 2023-11-11 ### Fixed: - Create Desktop Shortcut fixes.   - Fixes the application shortcuts not working when used by other software (such as Nvidia Game Experience).   - Fixes the shortcuts not working on macOS.  ## 1.1.1074 - 2023-11-11 ### Fixed: - Ava UI: Add accelerator keys for Options and Help.   - Adds Alt+O for Options and Alt+H for Help shortcuts to the Avalonia UI.  ## 1.1.1073 - 2023-11-11 ### Fixed: - UI: Change default hide cursor mode to OnIdle.   - Mouse cursor will now be hidden on idle by default while a game is running. (Only affects new installs.)  ## 1.1.1072 - 2023-11-07 ### Fixed: - Force all exclusive memory accesses to be ordered on AppleHv.   - On macOS, fixes crashes and softlocks when running Animal Crossing: New Horizons, Splatoon 2 and The Legend of Zelda: Breath of the Wild with the hypervisor enabled.  ## 1.1.1071 - 2023-11-06 ### Fixed: - Overhaul of string formatting/parsing/sorting logic for TimeSpans, DateTimes, and file sizes.   - The console and logs will no longer show a warning for every game on the games list that has never been played.  ## 1.1.1070 - 2023-11-05 ### Fixed: - Better handle instruction aborts when hitting unmapped memory.   - Helps with debugging. No expected changes in games.  ## 1.1.1069 - 2023-11-01 ### Fixed: - Fix AddSessionObj NRE regression.   - Fixes a regression from 1.1.1067 that caused Baten Kaitos and Streets of Rage to crash after booting.  ## 1.1.1068 - 2023-10-31 ### Fixed: - Implement copy dependency for depth and color textures.   - Fixes shadow issues in Luigi's Mansion 3.  ## 1.1.1067 - 2023-10-30 ### Changed: - [HLE] Remove ServerBase 1ms polling.   - Reduces the presence of ServerBase on CPU profiles, especially for games that aren't particularly busy.   - Greatly reduces power usage on Mario Kart 8 Deluxe and other games.  ## 1.1.1066 - 2023-10-30 ### Fixed: - Skip some invalid texture flushes.   - Fixes a memory corruption crash in Neptunia GameMaker R:Evolution, allowing it to go in-game.  ## 1.1.1065 - 2023-10-25 ### Added: - Add ldn_mitm as a network client for LDN.   - Adds ldn_mitm as a multiplayer option. ldn_mitm allows for connecting to hacked Switch consoles via local network.    - Contributes to upstreaming the closed-source LDN build.  ## 1.1.1064 - 2023-10-24 ### Fixed: - macOS: Use user-friendly macOS version string.   - Changes the displayed macOS version on logs to be the commonly used denomination, instead of the Darwin kernel version number.  ## 1.1.1063 - 2023-10-24 ### Fixed: - Fix loading tickets from a Sha256PartitionFileSystem.   - Fixes a regression from 1.1.1061 that caused certain game dumps to hang on boot.  ## 1.1.1062 - 2023-10-23 ### Fixed: - Fix the AOC manager using incorrect paths.   - Fixes a regression from 1.1.1061 that caused game files with DLC bundled in them to crash on boot.  ## 1.1.1061 - 2023-10-22 ### Fixed: - Update to LibHac 0.19.0.   - Allows Cassette Beasts, DeepOne and Tiny Thor to go in-game.  ## 1.1.1060 - 2023-10-22 ### Fixed: - Fix NRE on shader gather operations with depth compare on macOS.   - Fixes a macOS crash in Luigi's Mansion 3.  ## 1.1.1059 - 2023-10-21 ### Fixed: - Revert \"Ava UI: Input Menu Refactor\"    - Removes changes made in 1.1.1058.   - Should resolve issues with button values not appearing/saving correctly.  ## 1.1.1058 - 2023-10-21 ### Fixed: - Ava UI: Input Menu Refactor.   - Cleans up the Avalonia input settings window and code.   - Allows using platform-specific keys (such as the Win key).   - Allows for button names to be localized.  ## 1.1.1057 - 2023-10-20 ### Added: - Add \"Create Shortcut\" To app context menu.   - You can now right click a game on the list and click on \"Create Application Shortcut\" to create a shortcut for that specific game on your desktop.  ## 1.1.1056 - 2023-10-20 ### Added: - Avalonia: Make slider scrollable with mouse wheel.   - Allows changing slider values with the mouse wheel on the Avalonia UI.  ## 1.1.1055 - 2023-10-20 ### Fixed: - Ava UI: Update to 11.0.5.   - Updates the Avalonia package. May fix some issues with the Avalonia UI.  ## 1.1.1054 - 2023-10-20 ### Fixed: - GPU: Add fallback when textureGatherOffsets is not supported.   - Required for Xenoblade Chronicles: Definitive Edition to render on the latest MoltenVK, when it gets updated in the future.   - May fix some minor issues on macOS.  ## 1.1.1053 - 2023-10-18 ### Fixed: - Enable copy between MS and non-MS textures with different height.   - Fixes a regression from 1.1.742 that caused Perky Little Things to not render.   ## 1.1.1052 - 2023-10-13 ### Fixed: - Horizon: Migrate usb and psc services.   - Migrates usb and psc services to the Horizon project and updates them to reflect newest firmware changes. No expected changes in games.   ## 1.1.1051 - 2023-10-12 ### Fixed: - Replace ReaderWriterLock with ReaderWriterLockSlim.   - Code cleanup. No expected changes in games.   ## 1.1.1050 - 2023-10-09 ### Fixed: - Fix games freezing after initializing LDN 1021 times.   - Fixes a regression from 1.1.1026 that caused Pok\u00e9mon Sword/Shield to softlock after 20 minutes.   ## 1.1.1049 - 2023-10-08 ### Added: - Avalonia: Show aspect ratio popup options in status bar.   - Allows choosing the aspect ratio from the status bar on Avalonia.  ## 1.1.1048 - 2023-10-07 ### Fixed: - Symbols.cs Get function return value fix.   - Fixes a regression from 1.1.1043, though no games should have been affected.  ## 1.1.1047 - 2023-10-07 ### Added: - GPU: Add HLE macros for popular NVN macros.   - Implements HLE versions for popular NVN macros. Small performance improvements when using .NET 7 JIT.   - Mainly improves performance for a future NativeAOT build with .NET 8.  ## 1.1.1046 - 2023-10-07 ### Fixed: - HLE: Fix Mii CRC generation and minor issues.   - Fixes all generated Miis having invalid CRCs. This does not fix the `Mario Kart 8: Deluxe` title screen crash.  ## 1.1.1045 - 2023-10-06 ### Fixed: - Fix SPIR-V call out arguments regression.   - Fixes a regression from 1.1.1041 that caused rendering issues in Master Detective Archives: Rain Code, some UE4 games and possibly others.  ## 1.1.1044 - 2023-10-05 ### Fixed: - nuget: bump Microsoft.CodeAnalysis.CSharp from 4.6.0 to 4.7.0.   - Updates the Microsoft.CodeAnalysis.CSharp dependency. No expected changes to emulator functionality.  ## 1.1.1043 - 2023-10-05 ### Fixed: - Strings should not be concatenated using '+' in a loop.   - Code cleanup. No expected changes in games.  ## 1.1.1042 - 2023-10-04 ### Fixed: - Fix SPIR-V function calls.   - Fixes a regression from the previous change that caused Nvidia GPUs to crash while compiling shaders.  ## 1.1.1041 - 2023-10-04 ### Fixed: - Use unique temporary variables for function call parameters on SPIR-V.   - Fixes games rendering as horizontal lines on AMD drivers 23.9.2 and newer. This affected Pok\u00e9mon Legends Arceus, Pok\u00e9mon Scarlet/Violet, The Legend of Zelda: Tears of the Kingdom, Xenoblade Chronicles: Definitive Edition and possibly others.  ## 1.1.1040 - 2023-10-04 ### Fixed: - Avalonia: Add macOS check for Color Space Passthrough.   - Hides the Color Space Passthrough setting on Windows and Linux, as the feature is only currently supported on macOS and MoltenVK.  ## 1.1.1039 - 2023-10-03 ### Fixed: - Implement textureSamples texture query shader instruction.   - Fixes water rendering in Cocoon.  ## 1.1.1038 - 2023-10-02 ### Fixed: - Decrement nvmap reference count on surface flinger prealloc.   - Fixes a GuestProgramBrokeExecution crash in Sifu.  ## 1.1.1037 - 2023-09-29 ### Fixed: - Signal friends completion event and stub CheckBlockedUserListAvailability.   - Allows Super Bomberman R 2 to go in-game.  ## 1.1.1036 - 2023-09-29 ### Fixed: - Fix audio renderer compressor effect.   - Fixes Ys X: Nordics having no audio.  ## 1.1.1035 - 2023-09-27 ### Fixed: - nuget: bump FluentAvaloniaUI from 2.0.1 to 2.0.4.   - Updates the FluentAvaloniaUI dependency to 2.0.4 and the Avalonia package version to 11.0.4. No expected changes to emulator functionality.  ## 1.1.1034 - 2023-09-27 ### Fixed: - Implement NGC service.   - Baten Kaitos \u2160 &amp; \u2161 HD Remaster is now playable.   - Allows Star Ocean The Second Story R Demo to boot.  ## 1.1.1033 - 2023-09-27 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.31.0 to 7.0.0.   - Updates the System.IdentityModel.Tokens.Jwt dependency. No expected changes to emulator functionality.  ## 1.1.1032 - 2023-09-26 ### Fixed: - GPU: Don't create tracking handles for buffer textures.   - Improves performance in Mortal Kombat 1, R-TYPE FINAL 2, and certain UE4 games that reached 99% FIFO.  ## 1.1.1031 - 2023-09-26 ### Fixed: - Ava: Fix regressions by rewriting CheckLaunchState.   - Fixes a regression from 1.1.1027 that caused Avalonia to hang on launch when trying to bring up warnings for missing prod.keys or low limits for memory mappings.  ## 1.1.1030 - 2023-09-25 ### Fixed: - Reduce the amount of descriptor pool allocations on Vulkan.   - Fixes VK_ERROR_UNKNOWN on AMD GPUs in Puyo Puyo Tetris.  ## 1.1.1029 - 2023-09-25 ### Fixed: - Make Vulkan memory allocator actually thread safe.   - Attempts to fix a rare crash reported on macOS in The Legend of Zelda: Tears of the Kingdom.  ## 1.1.1028 - 2023-09-25 ### Fixed: - Add VTimer as alternative interrupt method on Apple Hypervisor.   - Fixes softlocks/infinite loading screens on macOS with hypervisor enabled in Bravely Default II, Life is Strange: True Colors, Persona 5 Scramble/Strikers and possibly other games.  ## 1.1.1027 - 2023-09-25 ### Fixed: - Ava UI: Refactor async usage.   - Significantly speeds up Avalonia's main window startup time.  ## 1.1.1026 - 2023-09-25 ### Added: - Add ldn:u implementation, INetworkClient interface and DisabledLdnClient.   - Initial LDN service implementation. (Does NOT contain all necessary changes to actually play LDN multiplayer.)   - Contributes to upstreaming the closed-source LDN build.  ## 1.1.1025 - 2023-09-25 ### Added: - Headless: Add support for Scaling Filters, Anti-aliasing and Exclusive Fullscreen.   - Adds Scaling Filters (Bilinear, Nearest, FSR), Anti-aliasing (None, FXAA, SMAA (all levels)) to the Headless SDL2 client.    - Adds support for an exclusive fullscreen mode on the Headless SDL2 client. (Currently not available on builds with a user interface.)  ## 1.1.1024 - 2023-09-25 ### Fixed: - GPU: Discard data when getting texture before full clear.   - Required for fixing a certain bug in Luigi's Mansion 3 in the future.    - Might reduce stuttering in some situations, though no noticeable changes were observed.  ## 1.1.1023 - 2023-09-25 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 17.6.3 to 17.7.2.   - Updates the Microsoft.NET.Test.Sdk dependency. No changes to emulator functionality.  ## 1.1.1022 - 2023-09-23 ### Fixed: - Vulkan: Fix barriers on macOS.   - Fixes a regression from 1.1.1014 that caused flickering graphics on macOS in Red Dead Redemption, The Legend of Zelda: Tears of the Kingdom and possibly other games.  ## 1.1.1021 - 2023-09-22 ### Added: - [INFRA] Addition of basic contributor guides and docs framework.   - Adds a contributing guide to the project on GitHub.   ## 1.1.1020 - 2023-09-20 ### Fixed: - Horizon: Migrate wlan and stubs latest services.   - No expected changes in games.  ## 1.1.1019 - 2023-09-19 ### Fixed: - Stub unsupported BSD socket options.   - Allows Crysis Remastered to go in-game.  ## 1.1.1018 - 2023-09-19 ### Fixed: - Fixes compiled bindings in cheat window.   - Fixes a regression from 1.1.1016 that caused cheats not to show in the cheat manager on Avalonia.  ## 1.1.1017 - 2023-09-18 ### Fixed: - Use compiled binding for localizations.   - Code cleanup. No expected changes in games.  ## 1.1.1016 - 2023-09-18 ### Fixed: - Remove more usages of reflection binding.   - Code cleanup. No expected changes in games.  ## 1.1.1015 - 2023-09-16 ### Fixed: - Replace ShaderOutputLayer with equivalent ShaderViewportIndexLayerEXT capability.   - Fixes Vulkan crashes introduced in 1.1.1002 on old AMD GPUs in Pok\u00e9mon Scarlet/Violet.  ## 1.1.1014 - 2023-09-14 ### Fixed: - Fix some Vulkan validation errors (mostly related to barriers).   - Fixes several Vulkan validation errors to make debugging easier. No expected changes in games.  ## 1.1.1013 - 2023-09-14 ### Fixed: - Fix gl_Layer to geometry shader change not writing gl_Layer.   - Fixes a regression from 1.1.1002 that caused black rendering on older GPUs in Pok\u00e9mon Scarlet/Violet (for example, Nvidia MX cards).  ## 1.1.1012 - 2023-09-14 ### Fixed: - lbl: Migrate service to Horizon.   - Code cleanup. No expected changes in games.  ## 1.1.1011 - 2023-09-10 ### Fixed: - Fix shader GlobalToStorage pass when base address comes from local or shared memory.   - Fixes a regression from 1.1.896 causing a few failures to find storage buffers in Splatoon 3 and probably other games, though no visible changes were found.  ## 1.1.1010 - 2023-09-07 ### Fixed: - Replacing 'Assembly.GetExecutingAssembly()' with 'Type.Assembly'.   - Code cleanup. No expected changes in games.  ## 1.1.1009 - 2023-09-05 ### Fixed: - Delete ResourceAccess.   - Code cleanup. No expected changes in games.  ## 1.1.1008 - 2023-09-04 ### Added: - Add macOS Headless release workflow.   - Adds macOS headless builds to master releases and pull requests.  ## 1.1.1007 - 2023-09-04 ### Fixed: - Fix ShaderTools GpuAcessor default values.   - Fixes a regression from 1.1.985 that caused ShaderTools to assert in debug mode and produce \"incorrect\" code on release due to the default graphics state being invalid. No changes in user builds.  ## 1.1.1006 - 2023-09-04 ### Fixed: - Fix layer size for 3D textures with NPOT depth.   - Fixes a regression from 1.1.863 which stopped grass/bushes/flowers/tree animations in Pok\u00e9mon Scarlet/Violet.   ## 1.1.1005 - 2023-09-02 ### Fixed: - Vulkan: Device Local and higher invocation count for buffer conversions.   - Improves performance in Super Mario Sunshine on AMD and Nvidia GPUs.  ## 1.1.1004 - 2023-09-02 ### Fixed: - Fix numeric SWKB validation.   - Fixes Super Mario Odyssey Online's IP address selection.  ## 1.1.1003 - 2023-08-30 ### Fixed: - opus: Implement GetWorkBufferSizeExEx and GetWorkBufferSizeForMultiStreamExEx.   - Sea of Stars is now playable.  ## 1.1.1002 - 2023-08-29 ### Fixed: - Geometry shader emulation for macOS.   - Fixes several missing graphics on macOS in Crash Bandicoot N. Sane Trilogy, Luigi's Mansion 3, Mario Strikers: Battle League, Marvel Ultimate Alliance 3, Nier Automata: The End of YoRHa Edition, Splatoon 3, Super Mario Maker 2, The Liar Princess and the Blind Prince and possibly other games.   - Fixes a crash in Shin Megami Tensei III and allows it to go in-game on macOS.   - Contributes towards upstreaming the closed-source macOS changes.  ## 1.1.1001 - 2023-08-29 ### Fixed: - Add SmallChange properties to all sliders.   - Pressing arrow keys on Avalonia while a slider is selected will no longer make the slider jump to the highest or lowest values.  ## 1.1.1000 - 2023-08-23 ### Fixed: - Vulkan: Fix MoltenVK flickering.   - Fixes graphical bugs on macOS in Super Mario Odyssey and several other games.  ## 1.1.999 - 2023-08-20 ### Fixed: - Fix invalid audio renderer buffer size when end offset &lt; start offset.   - Fixes a crash in Disgaea 5 Complete at the end of the mission \"Dreaming Mushroom\" in Episode 4.  ## 1.1.998 - 2023-08-19 ### Fixed: - Fix debug assert on services without pointer buffer.   - Fixes an assert introduced in 1.1.996 that only affected debug builds. No changes in user builds.  ## 1.1.997 - 2023-08-18 ### Fixed: - Implement support for masked stencil clears on Vulkan.   - Resolves foliage and other smearing/ghosting effects in Red Dead Redemption when using Vulkan.  ## 1.1.996 - 2023-08-17 ### Fixed: - mm: Migrate service in Horizon project.   - Code cleanup. No expected changes in games.  ## 1.1.995 - 2023-08-16 ### Fixed: - Fix vote and shuffle shader instructions on AMD GPUs.   - Fixes black shadows/spots/flickering on AMD graphics cards in Luigi's Mansion 3, Marvel Ultimate Alliance 3, Master Detective Archives: Rain Code, Monster Hunter Rise, Nier Automata: The End of YoRHa Edition, Triangle Strategy and possibly other games.  ## 1.1.994 - 2023-08-16 ### Fixed: - Prefer jagged arrays over multidimensional.   - Code cleanup. No expected changes in games.  ## 1.1.993 - 2023-08-16 ### Fixed: - Declare and use gl_PerVertex block for VTG per-vertex built-ins.   - Code cleanup. No expected changes in games.  ## 1.1.992 - 2023-08-16 ### Fixed: - Vulkan: Periodically free regions of the staging buffer.   - Fixes an edge case exposed by 1.1.988 where some games on Windows (for instance, Super Mario Odyssey) would suffer a large stutter periodically.  ## 1.1.991 - 2023-08-16 ### Fixed: - GPU: Add Z16RUnormGUintBUintAUint format.   - Fixes graphical issues in Asterix &amp; Obelix XXL: Romastered, Go Rally, Monster Blast, Pyramid Quest and Spencer.   - May fix similar issues in games using OpenGL on the Switch.  ## 1.1.990 - 2023-08-16 ### Fixed: - UI: New Crowdin updates.   - Updates Avalonia GUI localizations with the latest changes from Crowdin.  ## 1.1.989 - 2023-08-16 ### Fixed: - Implement scaled vertex format emulation.   - Required for geometry shader emulation on macOS. No expected changes in games.  ## 1.1.988 - 2023-08-14 ### Fixed: - Vulkan: Buffer Mirrors for MacOS performance.   - Improves macOS performance greatly in literally every single game.    - Contributes towards upstreaming the closed-source macOS changes.  ## 1.1.987 - 2023-08-14 ### Fixed: - Simplify resolution scale updates.   - Code cleanup. No expected changes in games.  ## 1.1.986 - 2023-08-14 ### Fixed: - GPU: Track basic buffer copies that modify texture memory.   - Fixes broken icons in Dragon Quest Builders.   - May fix similar issues in games using OpenGL on the Switch.  ## 1.1.985 - 2023-08-13 ### Changed: - Delete ShaderConfig and organize shader resources/definitions better.   - Required for geometry shader emulation on macOS. No expected changes in games.  ## 1.1.984 - 2023-08-13 ### Fixed: - \"static readonly\" constants should be \"const\" instead.   - Code cleanup. No expected changes in games.  ## 1.1.983 - 2023-08-13 ### Changed: - Ava UI: Remove animations on listbox items.   - Removes fade-in animations on list items, as they looked inconsistent with the rest of the Avalonia menus.  ## 1.1.982 - 2023-08-12 ### Fixed: - Ava UI: Make some settings methods async.   - Vulkan device, audio backend, network interface and time-zone configuration converted to asynchronous Tasks.   - Reduces the start-up time of the settings window in Avalonia.  ## 1.1.981 - 2023-08-12 ### Fixed: - Ava UI: Allow DPI switching on Windows.   - Fixes a Windows issue where Avalonia would look blurrier if system scaling was higher than 100% and multiple monitors with different DPI were used.  ## 1.1.980 - 2023-08-12 ### Fixed: - Ava UI: Avalonia 11 &amp; FluentAvalonia 2 Support.   - Fixes an issue where windowed game performance on Avalonia would be worse than on the GTK UI (fullscreen performance was equal between the two).   - Title bar color now matches Windows theme.   - Fixes text alignment issues on non-Windows platforms.   - Fixes janky textboxes, toggle buttons and checkboxes.  ## 1.1.979 - 2023-08-09 ### Fixed: - [Hotfix] hid: Prevent out of bounds array access.   - Fixes a regression from 1.1.978 that caused ARCropolis mods to crash.  ## 1.1.978 - 2023-08-09 ### Fixed: - Allow access to code memory for exefs mods.   - Fixes an issue where games would crash if mods utilizing JIT (most notably exlaunch) were used.  ## 1.1.977 - 2023-08-07 ### Added: - Implement Color Space Passthrough option (Vulkan/Avalonia only).   - Added the option to pass the color space selector to the native display instead of the backend.   - Allows P3 and other wide-gamut displays to utilize their entire color space at the cost of intended sRGB color accuracy.  ## 1.1.976 - 2023-08-07 ### Fixed: - Do not add more code after alpha test discard on fragment shader.   - On macOS, fixes a crash in Pikmin 3 when finishing the tutorial or on the results screen at the end of a day.  ## 1.1.975 - 2023-08-06 ### Fixed: - GPU: Don't sync/bind index buffer when it's not in use.   - On macOS, improves performance in Pok\u00e9mon Legends Arceus.  ## 1.1.974 - 2023-08-03 ### Fixed: - GPU: Enable VK_EXT_4444_formats.   - Fixes a Vulkan validation error. No expected changes in games.  ## 1.1.973 - 2023-08-02 ### Fixed: - nuget: bump DiscordRichPresence from 1.1.3.18 to 1.2.1.24.   - Updates the DiscordRichPresence dependency. No changes to emulator functionality.  ## 1.1.972 - 2023-07-30 ### Fixed: - (Graphics.Shader): Handle EmitSuatom constant dests and EmitSuld zero dest reg.   - Jurassic World Evolution now goes in-game.  ## 1.1.971 - 2023-07-30 ### Fixed: - CPU (A64): Add Fmaxp &amp; Fminp Scalar Inst.s, Fast &amp; Slow Paths; with Tests.   - Fixes a crash in Jurassic World Evolution, though it still does not go in-game.  ## 1.1.970 - 2023-07-29 ### Fixed: - Fix incorrect fragment origin when YNegate is enabled.   - Fixes upside-down rendering in 20XX and Go Rally, and possibly other games using OpenGL on the Switch.  ## 1.1.969 - 2023-07-24 ### Added: - Add workflow to automatically check code style issues for PRs.   - As a result of this and all previous dotnet reformatting changes, code formatting reviews on new Pull Requests on GitHub will now be automated, saving the developers a lot of time.  ## 1.1.968 - 2023-07-21 ### Fixed: - Ava UI: Remove IsGameRunning from some dialog methods.   - Fixes a regression from 1.1.967 that caused the title updater, dlc manager, about, and check for updates to not spawn their content dialogs.  ## 1.1.967 - 2023-07-21 ### Fixed: - Ava UI: Remove IsActive checks from dialog methods.     - Fixes content dialogs for the controller applet and software keyboard not spawning when the window was unfocused.  ## 1.1.966 - 2023-07-19 ### Fixed: - HLE: Fix corrupted Mii structs.   - Fixes a regression from 1.1.962 that caused Mario Kart 8 Deluxe to crash after playing one race in VS mode and returning to the course selection.  ## 1.1.965 - 2023-07-18 ### Fixed: - sdl2: Update to Ryujinx.SDL2-CS 2.28.1.   - May improve support for third-party Nintendo Switch Controllers.   - Fixes Xbox One Controllers from powering off when opening the settings menu.   - Fixes Xbox One Controllers from randomly not receiving inputs.  ## 1.1.964 - 2023-07-17 ### Fixed: - [Hotfix] sockets: Resolve empty port requests to 0 again.   - Fixes a regression from 1.1.962 that caused DNS (2306-0520) errors and guest internet access not to work on several games. (This error will still appear if you try to connect to Nintendo Switch Online.)  ## 1.1.963 - 2023-07-16 ### Fixed: - [CPU] Hotfix missing ToNearest rounding mode cases.   - Fixes a regression from 1.1.923 that caused some tests to fail. No known changes in games.  ## 1.1.962 - 2023-07-16 ### Fixed: - [Ryujinx.HLE] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.961 - 2023-07-14 ### Fixed: - Fix some Vulkan validation errors.   - No expected changes in games.  ## 1.1.960 - 2023-07-11 ### Fixed: - Move ShaderBinaries into individual .spv files.   - No expected changes in games.  ## 1.1.959 - 2023-07-11 ### Fixed: - Move support buffer update out of the backends.   - Moves support buffer update to the GPU project, removes duplicate code. No expected changes in games.  ## 1.1.958 - 2023-07-10 ### Fixed: - MacOS: Allow barriers inside a render pass for non-Apple GPUs and don't treat as TBDR.   - No known changes in games.  ## 1.1.957 - 2023-07-10 ### Fixed: - MacOS: Fix rendering on AMD GPUs.   - Fixes flickering/partial rendering on macOS systems with AMD graphics cards in Pok\u00e9mon Sword/Shield and possibly other games.  ## 1.1.956 - 2023-07-07 ### Fixed: - [Ryujinx.Ava] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.955 - 2023-07-06 ### Changed: - Revert \"sdl: set SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS to 0\".   - Reverted due to causing issues with official Nintendo controllers.  ## 1.1.954 - 2023-07-06 ### Changed: - sdl: set SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS to 0.   - ABXY buttons should have the correct default mapping on the controller profile regardless of brand.  ## 1.1.953 - 2023-07-06 ### Added: - Headless: Add support for fullscreen option.   - Adds a \"--fullscreen\" argument to headless builds so they can be launched in fullscreen.   - Makes it easier to launch games in fullscreen mode from third party launchers (such as Steam Big Picture).  ## 1.1.952 - 2023-07-03 ### Changed: - Stop identifying shader textures with handle and cbuf, use binding instead.   - Improves flexibility of shader and texture-related code. No expected changes in games.  ## 1.1.951 - 2023-07-01 ### Fixed: - [Ryujinx.Graphics.Gpu] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.950 - 2023-07-01 ### Fixed: - [Hotfix] Fix naming issue in ControllerWindow.   - Fixes a regression from 1.1.948 that caused controller configuration to error out when saving.  ## 1.1.949 - 2023-07-01 ### Fixed: - [Ryujinx.Audio] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.948 - 2023-07-01 ### Fixed: - [Ryujinx] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.947 - 2023-07-01 ### Fixed: - [Ryujinx.Horizon] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.946 - 2023-07-01 ### Fixed: - [Ryujinx.Graphics.Vulkan] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.945 - 2023-07-01 ### Fixed: - Prefer indexing instead of \"Enumerable\" methods on types implementing \"IList\".   - Code cleanup. No expected changes in games.  ## 1.1.944 - 2023-06-30 ### Fixed: - [Ryujinx.Cpu] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.943 - 2023-06-30 ### Fixed: - [Ryujinx.Tests] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.942 - 2023-06-28 ### Fixed: - [Ryujinx.Ui.Common] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.941 - 2023-06-28 ### Fixed: - [Ryujinx.Graphics.GAL] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.940 - 2023-06-28 ### Fixed: - macOS: Fix warning in some shell scripts.   - Code cleanup. No expected changes in games.  ## 1.1.939 - 2023-06-28 ### Fixed: - [Ryujinx.Headless.SDL2] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.938 - 2023-06-28 ### Fixed: - [Spv.Generator] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.937 - 2023-06-28 ### Fixed: - [Ryujinx.Graphics.Texture] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.936 - 2023-06-28 ### Fixed: - [Ryujinx.Common] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.935 - 2023-06-28 ### Fixed: - [Ryujinx.Memory] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.934 - 2023-06-28 ### Fixed: - [Ryujinx.Input] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.933 - 2023-06-28 ### Fixed: - [Ryujinx.Graphics.OpenGL] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.932 - 2023-06-28 ### Added: - Cpu: Implement VCVT (between floating-point and fixed-point) instruction.   - Allows Death Road to Canada and Limbo to go in-game.  ## 1.1.931 - 2023-06-27 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 17.6.2 to 17.6.3.   - Updates the Microsoft.NET.Test.Sdk dependency. No expected changes to emulator functionality.  ## 1.1.930 - 2023-06-27 ### Fixed: - [Ryujinx.Graphics.Nvdec.Vp9] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.929 - 2023-06-27 ### Fixed: - [Ryujinx.Graphics.Shader] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.928 - 2023-06-27 ### Fixed: - [Ryujinx.Horizon.Kernel.Generators] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.927 - 2023-06-27 ### Fixed: - dotnet-format: Apply new naming rule to all projects except Vp9.   - Code cleanup. No expected changes in games.  ## 1.1.926 - 2023-06-27 ### Fixed: - [Ryujinx.Graphics.Video] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.925 - 2023-06-27 ### Fixed: - [Ryujinx.Graphics.Host1x] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.924 - 2023-06-25 ### Fixed: - [Ryujinx.Horizon.Generators] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.923 - 2023-06-25 ### Fixed: - [ARMeilleure] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.922 - 2023-06-25 ### Fixed: - [Ryujinx.Input.SDL2] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.921 - 2023-06-25 ### Fixed: - [Ryujinx.SDL2.Common] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.920 - 2023-06-25 ### Fixed: - misc: memory: Migrate from OutOfMemoryException to SystemException entirely.   - Fixes a regression with address space allocation while providing more information about the context of the exception. No known changes in games.  ## 1.1.919 - 2023-06-25 ### Fixed: - [Ryujinx.Graphics.Device] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.918 - 2023-06-25 ### Fixed: - [Ryujinx.Audio.Backends.SDL2] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.917 - 2023-06-25 ### Fixed: - [Ryujinx.Graphics.Nvdec] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.916 - 2023-06-25 ### Fixed: - [Ryujinx.ShaderTools] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.915 - 2023-06-25 ### Fixed: - [Ryujinx.Graphics.Nvdec.FFmpeg] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.914 - 2023-06-25 ### Fixed: - [Ryujinx.Tests.Memory] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.913 - 2023-06-25 ### Fixed: - [Ryujinx.Graphics.Vic] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.912 - 2023-06-25 ### Fixed: - [Ryujinx.Tests.Unicorn] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.911 - 2023-06-25 ### Fixed: - Set COMPlus_DefaultStackSize to 2M in macOS.   - Increases the default stack size to 2MB on macOS.   - Fixes a SPIRV-Cross stack overflow that caused crashes on boot in Splatoon 3 and Mortal Kombat 11. Both titles are now playable.  ## 1.1.910 - 2023-06-25 ### Fixed: - [Ryujinx.Horizon.Common] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.909 - 2023-06-24 ### Fixed: - [Ryujinx.Audio.Backends.SoundIo] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.908 - 2023-06-24 ### Fixed: - [Ryujinx.Audio.Backends.OpenAL] Address dotnet-format issues.   - Code cleanup. No expected changes in games.  ## 1.1.907 - 2023-06-24 ### Fixed: - Empty \"case\" clauses that fall through to the \"default\" should be omitted.   - Code cleanup. No expected changes in games.  ## 1.1.906 - 2023-06-24 ### Fixed: - Mutable fields should not be \"public static\".   - Code cleanup. No expected changes in games.  ## 1.1.905 - 2023-06-23 ### Fixed: - MemoryManagement: Change return types for Commit/Decommit to void.   - Code cleanup. No expected changes in games.  ## 1.1.904 - 2023-06-22 ### Fixed: - \"Where\" should be used before \"OrderBy\".   - Code cleanup. No expected changes in games.  ## 1.1.903 - 2023-06-22 ### Fixed: - \"StartsWith\" and \"EndsWith\" overloads that take a \"char\" should be used instead of the ones that take a \"string\".   - Code cleanup. No expected changes in games.  ## 1.1.902 - 2023-06-22 ### Fixed: - \"Find\" method should be used instead of the \"FirstOrDefault\" extension.   - Code cleanup. No expected changes in games.  ## 1.1.901 - 2023-06-22 ### Fixed: - \"Exists\" method should be used instead of the \"Any\" extension.   - Code cleanup. No expected changes in games.  ## 1.1.900 - 2023-06-22 ### Fixed: - Fix regression introduced by 1.1.733 on Intel GPUs.   - Fixes a regression affecting Intel GPUs that caused erroneous lighting on character models in Pok\u00e9mon Scarlet/Violet.  ## 1.1.899 - 2023-06-22 ### Fixed: - GetHashCode should not reference mutable fields.   - Code cleanup. No expected changes in games.  ## 1.1.898 - 2023-06-20 ### Added: - misc: Implement address space size workarounds.   - Required for ARM64 support when the kernel is configured to use between 63 and 39 bits for kernel space.  ## 1.1.897 - 2023-06-17 ### Fixed: - Ensure shader local and shared memory sizes are not zero.   - Should fix the Mysterio boss crash in Marvel Ultimate Alliance 3: The Black Order. Currently untested.  ## 1.1.896 - 2023-06-15 ### Fixed: - Implement Load/Store Local/Shared and Atomic shared using new instructions.   - Refactors some of the GPU code and makes it easier to implement more graphics backends in the future. No expected changes in games.  ## 1.1.895 - 2023-06-15 ### Fixed: - Inheritance should not be redundant.   - Code cleanup. No expected changes in games.  ## 1.1.894 - 2023-06-14 ### Fixed: - Blocks should be synchronized on read-only fields.   - Code cleanup. No expected changes in games.  ## 1.1.893 - 2023-06-14 ### Fixed: - nuget: bump System.Management from 7.0.1 to 7.0.2.   - Updates the System.Management dependency. No expected changes to emulator functionality.  ## 1.1.892 - 2023-06-14 ### Fixed: - test: Make tests runnable on system without 4KiB page size.   - Fixes running tests on Linux distros that use 16KiB pages, such as Asahi Linux.  ## 1.1.891 - 2023-06-14 ### Fixed: - Fix Arm32 double to int/uint conversion on Arm64.   - Fixes bad audio in Prinny Presents NIS Classics Volume 3: La Pucelle: Ragnarok / Rhapsody: A Musical Adventure on ARM64 (Apple Silicon macOS) devices.  ## 1.1.890 - 2023-06-13 ### Fixed: - Mod Loader: Stop loading mods from folders that don't exactly match titleId.   - Mods for a given game will no longer load from folders that have a slight, wrong variation of the game's title ID.  ## 1.1.889 - 2023-06-12 ### Fixed: - UI: Correctly set 'shell/open/command; registry key for file associations.   - Fixes Ryujinx file association/disassociation with .nsp and .xci formats via Tools &gt; Manage file types.  ## 1.1.888 - 2023-06-12 ### Fixed: - Make LM skip instead of crashing for invalid messages.   - Fixes a crash when trying to start a match in Mortal Kombat 11 with no game update applied.  ## 1.1.887 - 2023-06-12 ### Fixed: - hle: Stub IHidbusServer.GetBusHandle.   - Allows newer versions of NES Switch Online and Starlink: Battle for Atlas to boot.  ## 1.1.886 - 2023-06-12 ### Added: - infra: Add PR triage action.   - Automatically assigns reviewers and some labels on pull requests on GitHub.  ## 1.1.885 - 2023-06-11 ### Fixed: - Ava: Fix OpenGL on Linux again.   - Fixes an issue where running games with OpenGL would crash on boot on Linux when using the Avalonia UI.  ## 1.1.884 - 2023-06-11 ### Fixed: - ava: Show/Hide UI Hotkey fix.   - Fixes the ability to Show/Hide the UI on Avalonia when using F4 or the assigned Hotkey.  ## 1.1.883 - 2023-06-10 ### Fixed: - Implement fast path for AES crypto instructions on Arm64.   - Fixes stuttering on ARM64 (Apple Silicon macOS) devices in Animal Crossing: New Horizons when saving the game with hypervisor disabled.  ## 1.1.882 - 2023-06-10 ### Added: - Implement transform feedback emulation for hardware without native support.   - Adds emulation for transform feedback for macOS devices and other hardware that do not support it in their drivers.   - Allows Pok\u00e9mon Scarlet/Violet, Pok\u00e9mon Legends Arceus, Metroid Prime Remastered, Donkey Kong Country: Tropical Freeze and more to boot/render on macOS.   - Contributes to upstreaming of the closed-source macOS build.  ## 1.1.881 - 2023-06-09 ### Fixed: - Non-flags enums should not be used in bitwise operations.   - Code cleanup. No expected changes to emulator functionality.  ## 1.1.880 - 2023-06-09 ### Fixed: - Using 'ThenBy' instead.   - Code cleanup. No expected changes to emulator functionality.  ## 1.1.879 - 2023-06-09 ### Fixed: - macOS: Fix regression in macOS updater.   - Fixes an issue introduced with 1.1.869 that caused the macOS updater not to work.  ## 1.1.878 - 2023-06-09 ### Fixed: - macOS: Configuration Directory Fix.   - Fixes an issue introduced with 1.1.630 that would cause an unhandled exception if the configuration directory was deleted.  ## 1.1.877 - 2023-06-09 ### Fixed: - Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey.   - Code cleanup. No expected changes to emulator functionality.  ## 1.1.876 - 2023-06-09 ### Fixed: - Software Keyboard Applet Fixes.   - Fixes an issue introduced in 1.1.862 that prevented numbers or spaces to be input in the keyboard applet in some games, like Pok\u00e9mon Sword/Shield when naming Pok\u00e9mon.  ## 1.1.875 - 2023-06-09 ### Fixed: - Removing shift by 0.   - Code cleanup. No expected changes to emulator functionality.  ## 1.1.874 - 2023-06-09 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 17.6.1 to 17.6.2.   - Updates the Microsoft.NET.Test.Sdk dependency. No expected changes to emulator functionality.  ## 1.1.873 - 2023-06-09 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.30.1 to 6.31.0.   - Updates the System.IdentityModel.Tokens.Jwt dependency. No expected changes to emulator functionality.  ## 1.1.872 - 2023-06-08 ### Fixed: - Vulkan: Use aspect flags for identity views for bindings.   - Fixes a regression from 1.1.805 that caused visual glitches or crashes on RADV (Mesa Vulkan drivers for AMD on Linux) in Kirby and the Forgotten Land, Mario + Rabbids Kingdom Battle, Metroid Prime Remastered, Pok\u00e9mon Legends Arceus, Pok\u00e9mon Scarlet/Violet, Pok\u00e9mon Sword/Shield, The Legend of Zelda: Link's Awakening, Super Mario 3D World and possibly other games.  ## 1.1.871 - 2023-06-08 ### Fixed: - Remove barrier on Intel if control flow is potentially divergent.   - The Legend of Zelda: Tears of the Kingdom now runs on Intel GPUs.  ## 1.1.870 - 2023-06-08 ### Fixed: - Implement soft float64 conversion on shaders when host has no support.   - Contributes towards upstreaming the closed-source macOS changes.   - Fixes rendering in Rune Factory 4 Special and possibly other games on macOS.   - Fixes some ErrorDeviceLost crashes on Intel GPUs in The Legend of Zelda: Tears of the Kingdom. The game still won't run on Intel GPUs due to another issue.  ## 1.1.869 - 2023-06-05 ### Fixed: - Updater: Ignore files introduced by the user in base directory.   - Updater will no longer delete user added files in the base directory when updating.  ## 1.1.868 - 2023-06-05 ### Fixed: - Fix wrong unaligned SB state when fetching compute shaders.   - Fixes a regression caused by 1.1.861 that introduced glitches in some games on Intel GPUs.  ## 1.1.867 - 2023-06-05 ### Fixed: - Fix 3D texture size when totalBlocksOfGobsInZ &gt; 1.   - Fixes some 3D texture issues in UE4 games.   - Fixes crashes on newer versions of Dragon Ball Z: Kakarot, Dragon Quest X Offline and possibly other UE4 games.  ## 1.1.866 - 2023-06-04 ### Fixed: - Avalonia: Adjust Grid Library alignment.   - Game rows that aren't filled will now align left instead of center on Avalonia's grid view.  ## 1.1.865 - 2023-06-04 ### Fixed: - Dont Error on Invalid Enum Values.   - Prevents Ryujinx from deleting the Config.json file when switching between emulator versions with minor configuration differences.  ## 1.1.864 - 2023-06-04 ### Fixed: - Replacing ZbcColorArray with Array4.   - Code cleanup. No expected changes in games.  ## 1.1.863 - 2023-06-04 ### Fixed: - Texture: Fix layout conversion when gobs in z is used with depth = 1.   - Fixes gloom textures randomly breaking in The Legend of Zelda: Tears of the Kingdom, on both OpenGL and Vulkan.   - Fixes character rendering in Spiritfarer.  ## 1.1.862 - 2023-06-03 ### Fixed: - Check KeyboardMode in GUI.   - Fixes some issues when entering a different character type than a game requests into the keyboard applet.  ## 1.1.861 - 2023-06-03 ### Added: - Implement shader storage buffer operations using new Load/Store instructions.   - Allows for the implementation of transform feedback and geometry shader emulation on macOS.  ## 1.1.860 - 2023-06-03 ### Fixed: - ava: Fix Input Touch.   - Fixes an Avalonia regression from 1.1.557 causing touch inputs to never be released.   - Resolves issues in some games where input would no longer be accepted after a single click.  ## 1.1.859 - 2023-06-03 ### Fixed: - ava: Fix Open Applet menu enabled.   - The \"open applet\" menu is now inaccessible while games are running.   - Fixes possible error where this was attempted during gameplay.  ## 1.1.858 - 2023-06-03 ### Fixed: - Armeilleure: Fix support for Windows on ARM64.   - Makes required changes to the CPU JIT to support Windows on ARM in future.  ## 1.1.857 - 2023-06-03 ### Fixed: - Allow BGRA storage images on Vulkan.   - Fixes red and blue being swapped when FXAA or SMAA are enabled in Persona 4 Golden and any other games presenting BGRA textures.  ## 1.1.856 - 2023-06-03 ### Fixed: - ava: Fix exit dialog while guest is running.   - Fixes an issue on the Avalonia UI where content dialogs would not pop up if the Ryujinx window happened to be out of focus.  ## 1.1.855 - 2023-06-01 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 17.6.0 to 17.6.1.   - Updates the Microsoft.NET.Test.Sdk dependency. No expected changes to emulator functionality.  ## 1.1.854 - 2023-06-01 ### Fixed: - UI: Fix empty homebrew icon.   - Avalonia will no longer crash when running a homebrew application that has no icon.   ## 1.1.853 - 2023-06-01 ### Fixed: - Fix Avalonia Library header changes size when switching between List/Grid view.   - Adds an explicit height to the panel so that it won't grow/shrink when the \"show names\" checkbox is added/removed.   ## 1.1.852 - 2023-06-01 ### Fixed: - [Logger] Add print with stacktrace method.   - Adds stacktraces to Ryujinx logs for easier debugging.   ## 1.1.851 - 2023-06-01 ### Fixed: - nuget: bump DynamicData from 7.13.8 to 7.14.2.   - Updates the DynamicData dependency. No expected changes to emulator functionality.  ## 1.1.850 - 2023-06-01 ### Fixed: - Only run one workflow for a PR at a time.   - Any given pull request will no longer build multiple times if commits are pushed rapidly.  ## 1.1.849 - 2023-06-01 ### Fixed: - Vulkan: Include DepthMode in ProgramPipelineState.   - Fixes an issue that could cause a few additional stutters during shader compilation.  ## 1.1.848 - 2023-05-31 ### Fixed: - GPU: Dispose Renderer after running deferred actions.   - Fixes a lot more cases of Ryujinx hanging after stopping emulation/closing.  ## 1.1.847 - 2023-05-31 ### Fixed: - Avalonia UI: Fix letter \"x\" in Ryujinx logo being cut off in About dialog + make its pronunciation center-aligned.   - Fixes the aforementioned problems on the Avalonia \"About\" window.  ## 1.1.846 - 2023-05-31 ### Fixed: - Skip draws with zero vertex count.   - Fixes a crash on macOS in Marvel Ultimate Alliance 3: The Black Order.  ## 1.1.845 - 2023-05-31 ### Fixed: - Share ResourceManager between vertex A and B shaders.   - Fixes a regression from 1.1.811 that caused Borderlands 2 to crash before the title screen while generating a shader.  ## 1.1.844 - 2023-05-31 ### Fixed: - Headless: MacOS Headless Fixes.    - Properly sign headless builds so they can use Hypervisor.    - Bundle MoltenVK in headless builds when building for macOS.    - Force Vulkan on macOS.  ## 1.1.843 - 2023-05-30 ### Fixed: - Add Context Menu Option to Run Application.   - You can now launch games by right clicking them and selecting \"Run Application\" on the Avalonia UI.  ## 1.1.842 - 2023-05-29 ### Fixed: - Linux: Automatically increase vm.max_map_count if it's too low.   - Works around a Linux issue where several games, including Shin Megami Tensei V and The Legend of Zelda: Tears of the Kingdom, would segfault after exceeding the max amount of memory mappings.  ## 1.1.841 - 2023-05-28 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 17.5.0 to 17.6.0.   - Updates the Microsoft.NET.Test.Sdk dependency. No expected changes to emulator functionality.  ## 1.1.840 - 2023-05-28 ### Fixed: - Make sure blend is disabled if render target has integer format.   - Contributes to upstreaming the closed-source changes in the macos1 build.   - Fixes crashes in Luigi's Mansion 3 and Xenoblade Chronicles games on macOS. Note that Xenoblade games won't work yet as they require transform feedback to run, which hasn't been upstreamed yet.  ## 1.1.839 - 2023-05-28 ### Fixed: - Workaround for MoltenVK barrier issues.   - Contributes to upstreaming the closed-source changes in the macos1 build.   - Fixes vertex explosions in Xenoblade Chronicles games on macOS. Note that the games won't work yet as they require transform feedback to run, which hasn't been upstreamed yet.  ## 1.1.838 - 2023-05-28 ### Fixed: - Fix incorrect vertex attribute format change.   - On macOS, fixes a regression from 1.1.821 which caused Gun Gun Pixies and other games to render incorrectly.  ## 1.1.837 - 2023-05-28 ### Fixed: - Allow surround sound for SDL2 in more scenarios.   - Fixes an issue where the SDL2 audio backend would not output surround sound in certain setups.  ## 1.1.836 - 2023-05-28 ### Added: - Linux: Use gamemode if it is available when using Ryujinx.sh.   - On Linux, when using the Ryujinx.sh script to start the emulator, checks for \"gamemoderun\" and uses it if it exists. May improve performance on supported systems.  ## 1.1.835 - 2023-05-28 ### Fixed: - Add support for VK_EXT_depth_clip_control.   - Significantly reduces z-fighting on distant geometry in The Legend of Zelda: Tears of the Kingdom when using Vulkan.  ## 1.1.834 - 2023-05-28 ### Fixed: - chore: Update Avalonia to 0.10.21 .   - Updates the Avalonia package from version 0.10.19 to 0.10.21. No expected changes to Avalonia UI functionality.  ## 1.1.833 - 2023-05-28 ### Added: - About window: Add changelog link under ver. number.   - Adds a link to the changelog page on GitHub in the emulator's \"About\" tab.  ## 1.1.832 - 2023-05-28 ### Fixed: - Update LastPlayed date on emulation end.   - \"Last played\" stat will now use the time when the game was last closed, instead of the time when it was last launched.  ## 1.1.831 - 2023-05-28 ### Fixed: - Improve macOS updater.   - (Hopefully) fixes the remaining issues with the updater on macOS.  ## 1.1.830 - 2023-05-28 ### Fixed: - Added Custom Path case when saving screenshots.   - Fixes an issue where emulator screenshots wouldn't save to the portable folder in portable mode if Ryujinx was launched using a cli argument for --root-data-dir.  ## 1.1.829 - 2023-05-28 ### Fixed: - actions: revert timeout-minutes changes for PR workflow.   - Reverts the previous change for pull request builds.  ## 1.1.827-1.1.828 - 2023-05-28 ### Fixed: - Use variables to configure job timeouts.   - Adds a config variable so developers can more easily control timeouts on GitHub workflows.  ## 1.1.826 - 2023-05-26 ### Fixed: - Ava UI: Fixes for random hangs on exit.   - Fixes some of the hanging issues when exiting on Avalonia.  ## 1.1.825 - 2023-05-26 ### Fixed: - Force reciprocal operation with value biased by constant to be precise on macOS.   - On macOS, fixes overbright clothing items in The Legend of Zelda: Tears of the Kingdom and Quaxly's hair in Pok\u00e9mon Scarlet/Violet.  ## 1.1.824 - 2023-05-25 ### Fixed: - Fix resolution scaling of image operation coordinates.   - Fixes a regression from 1.1.822 that caused flickering/graphical issues in Xenoblade Chronicles: Definitive Edition, Xenoblade 3 and possibly other games when using resolution scaling.  ## 1.1.823 - 2023-05-25 ### Fixed: - Fix mod names.   - Allows Ryuko to read mod names in log files again.  ## 1.1.822 - 2023-05-25 ### Fixed: - Generate scaling helper functions on IR.   - Separates the resolution scaling code from the shader backends so scaling behaves more similarly between OpenGL and Vulkan.   - Makes it easier to implement more graphics backends in the future.  ## 1.1.821 - 2023-05-25 ### Fixed: - Truncate vertex attribute format if it exceeds stride on MoltenVK.   - Fixes vertex explosions in The Legend of Zelda: Tears of the Kingdom on macOS.  ## 1.1.820 - 2023-05-25 ### Fixed: - Update release.yml.   - Updates github-script so it uses Node 16 instead of Node 12.  ## 1.1.819 - 2023-05-23 ### Fixed: - Vulkan: Do not set storage flag for multisample textures if not supported.   - Fixes a crash in Dark Souls Remastered and other games that occurred on macOS when using a newer MoltenVK version.  ## 1.1.818 - 2023-05-22 ### Added: - Implement p2rc, p2ri, p2rr and r2p.cc shaders.   - Implements the aforementioned missing shader instructions. These are used in The Legend of Zelda: Tears of the Kingdom, however it's not known what they affect, or if they affect anything at all.  ## 1.1.817 - 2023-05-22 ### Fixed: - Revert \"Bump MVK Version to 1.2.3\".   - Reverts the previous change as it caused graphical regressions in some games while showing no noticeable benefit.  ## 1.1.816 - 2023-05-22 ### Fixed: - Bump MVK Version to 1.2.3.   - Updates the MoltenVK dependency from version 1.2.0 to 1.2.3.   - Might fix graphical issues in some games on macOS.   ## 1.1.815 - 2023-05-21 ### Fixed: - Ava UI: Input Menu Redesign.   - Redesigns and cleans up the input settings window on the Avalonia UI.  ## 1.1.814 - 2023-05-21 ### Fixed: - Fix crash in SettingsViewModel when Vulkan isn't available.   - Fixes a crash when opening the settings window on devices (e.g. Windows ARM) where Vulkan is not available.  ## 1.1.813 - 2023-05-21 ### Fixed: - ServerBase thread safety.   - Fixes a possible `RecyclableMemoryStreamManager` crash when closing Ryujinx.   - Fixes some possible cases of Ryujinx hanging when stopping emulation.  ## 1.1.812 - 2023-05-21 ### Changed: - Replace ShaderBindings with new ResourceLayout structure for Vulkan.   - Will allow for a cleaner implementation of transform feedback and geometry shader emulation on macOS in future.  ## 1.1.811 - 2023-05-20 ### Fixed: - Replace constant buffer access on shader with new Load instruction.   - Fixes vertex explosions in Super Mario Sunshine and Super Mario Galaxy on AMD GPUs.  ## 1.1.810 - 2023-05-20 ### Fixed: - Limit compute storage buffer size.   - Fixes a regression that caused DOOM Eternal to crash in-game. Note that the game still isn't playable due to other issues.  ## 1.1.809 - 2023-05-20 ### Fixed: - SPIR-V: Only allow implicit LOD sampling on fragment.   - Fixes incorrect gloom hitboxes on AMD GPUs on Windows in the Depths in The Legend of Zelda: Tears of the Kingdom.  ## 1.1.808 - 2023-05-19 ### Fixed: - Fix macOS Update Script.   - Fixes the remaining issues with the autoupdater on macOS.   ## 1.1.807 - 2023-05-19 ### Fixed: - Eliminate redundant multiplications by gl_FragCoord.w on the shader.   - Fixes black dots and lines on character models in Demon Slayer -Kimetsu no Yaiba- The Hinokami Chronicles.  ## 1.1.806 - 2023-05-19 ### Fixed - nuget: bump DynamicData from 7.13.5 to 7.13.8.   - Updates the DynamicData dependency. No changes in games.  ## 1.1.805 - 2023-05-18 ### Fixed: - Fix Vulkan blit-like operations swizzle.   - Fixes colors flashing in Omega Strikers.  ## 1.1.804 - 2023-05-18 ### Fixed: - Avoid using garbage size for non-cb0 storage buffers   - Fixes the performance loss in the Depths in The Legend of Zelda: Tears of the Kingdom.  ## 1.1.803 - 2023-05-17 ### Fixed: - ava: Fix crash when extracting sections from NCA with no data section.   - Fixes a crash on the Avalonia UI when extracting sections from NCAs that have no data section.  ## 1.1.802 - 2023-05-17 ### Fixed: - Start GPU performance counter at 0 instead of host GPU value.   - Fixes The Legend of Zelda: Tears of the Kingdom locking at 20fps in situations where it shouldn't. Note that the game may still lock to 20fps if your hardware is unable to maintain 30fps; in these environments, a 30fps mod may still be needed.  ## 1.1.801 - 2023-05-17 ### Fixed: - macos: Fix relaunch with updater when no arguments were provided to the emulator.   - Fixes macOS builds not restarting after an update if the emulator was started without arguments (for example on non-portable builds).  ## 1.1.800 - 2023-05-14 ### Fixed: - [GUI] Fix always hide cursor mode not hiding the cursor until it was moved.   - Fixes a bug on the Avalonia UI where the hide cursor mode wasn't applied correctly if the cursor wasn't moved first.  ## 1.1.799 - 2023-05-13 ### Fixed: - Vulkan: Device map buffers written more than flushed.   - Increases performance in The Legend of Zelda: Tears of the Kingdom on Nvidia GPUs* using Vulkan.   - Significantly reduces the large performance impact of resolution scaling for Nvidia GPUs using Vulkan in the above title.  * AMD does not suffer from the same limitation that was causing the large performance losses here and should be unaffected.  ## 1.1.798 - 2023-05-13 ### Added: - Add timeout of 35 minutes to workflow jobs.   - GitHub workflows will now time out after 35 minutes instead of going on forever when they get stuck.  ## 1.1.797 - 2023-05-13 ### Fixed: - audio: SDL2: Do not report 5.1 if the device doesn't support it.   - Fixes volume being too low on SDL2 if a game was converting 5.1 to stereo sound.  ## 1.1.796 - 2023-05-12 ### Fixed: - Set OpenGL PixelPackBuffer to 0 when done.   - Fixes emulator screenshots being taken as black pictures when using OpenGL.   - Fixes camera photos and save previews being taken as black pictures in The Legend of Zelda: Breath of the Wild and The Legend of Zelda: Tears of the Kingdom when using OpenGL.   - May fix similar issues in other games when using OpenGL.  ## 1.1.795 - 2023-05-12 ### Fixed: - macOS CI Adjustments.   - Allows macOS mainline builds to autoupdate.   - Removes the x86 macOS builds from Pull Request artifacts as they didn't actually work.  ## 1.1.794 - 2023-05-12 ### Fixed: - Ava: Fix wrong MouseButton.   - Fixes a random crash on the Avalonia UI that could occur upon clicking the option to go fullscreen.  ## 1.1.793 - 2023-05-12 ### Fixed: - Bump shader cache version.   - Corrects the missing cache bump in 1.1.785.   - Fix mentioned in that version is now correctly applied to existing shader caches.  ## 1.1.792 - 2023-05-11 ### Fixed: - Vulkan: Partially workaround MoltenVK InvalidResource error.   - Adds a workaround for a MoltenVK issue where binding a storage buffer more than once with different stage flags causes resource usage to register incorrectly, which causes the command buffer to fail. No known changes in games.  ## 1.1.791 - 2023-05-11 ### Fixed: - GPU: Remove swizzle undefined matching and rework depth aliasing.   - Fixes UI textures in The Legend of Zelda: Tears of the Kingdom.  ## 1.1.790 - 2023-05-11 ### Fixed: - Fix the restart after an update.   - Fixes an issue where Ryujinx would not restart after updating, and would instead error out with \"The application was unable to start correctly (0xc0000142)\".  ## 1.1.789 - 2023-05-11 ### Fixed: - Changed LastPlayed field from string to nullable DateTime.   - Fixes an issue where Ryujinx would crash after stopping emulation when the system and date format was too custom (for example, when using the Holocene calendar).  ## 1.1.788 - 2023-05-11 ### Fixed: - amadeus: Allow 5.1 sink output.   - Allows Ryujinx to output 5.1 surround sound in games that support it.  ## 1.1.787 - 2023-05-11 ### Fixed: - UI: Adjust input mapping view.   - Makes the Avalonia input settings window prettier.  ## 1.1.786 - 2023-05-11 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.30.0 to 6.30.1.   - Updates the System.IdentityModel.Tokens.Jwt dependency. No changes in games.  ## 1.1.785 - 2023-05-11 ### Fixed: - Enable explicit LOD for array textures with depth compare on SPIR-V.   - Fixes some visual glitches in The Legend of Zelda: Tears of the Kingdom when using the Vulkan backend.  ## 1.1.784 - 2023-05-11 ### Fixed: - Fix incorrect ASTC endpoint color when using LuminanceDelta mode.   - Fixes white square artifacting on some textures in The Legend of Zelda: Tears of the Kingdom.  ## 1.1.783 - 2023-05-11 ### Fixed: - amadeus: Fix wrong channel mapping check and an old typo.   - Fixes broken audio in The Legend of Zelda: Tears of the Kingdom.  ## 1.1.782 - 2023-05-11 ### Fixed: - Stop SDL from inhibiting sleep (#4828).   - Fixes an issue where Ryujinx would prevent the computer from entering Sleep mode when no game would be running or when game execution was suspended.  ## 1.1.781 - 2023-05-11 ### Fixed: - Fix the issue of unequal check for Amiibo file date due to the lack of sub-second units in the header.   - The Amiibo menu now opens faster.  ## 1.1.780 - 2023-05-11 ### Fixed: - GPU: Fix shader cache assuming past shader data was mapped.   - Fixes a random crash in The Legend of Zelda: Tears of the Kingdom upon entering new areas.  ## 1.1.778-1.1.779 - 2023-05-11 ### Added: - Update release workflow &amp; Add jobs for macOS.   - Adds macOS builds to Pull Requests and to the GitHub releases channel.  Note that **not all of the macOS-specific changes have been upstreamed yet**; you may run into issues or reduced performance that don't exist in the macos1 preview build and vice-versa.  ## 1.1.777 - 2023-05-10 ### Fixed: - Ensure background translation threads exited before disposing JIT.   - Fixes an uncommon issue where the emulator would crash on exit.  ## 1.1.776 - 2023-05-10 ### Fixed: - Fix missing domain service object dispose.   - Fixes a regression from 1.1.774 that caused Animal Crossing: New Horizons to get stuck on the loading screen after pressing \"Continue\".  ## 1.1.775 - 2023-05-09 ### Fixed: - fix(mvk): resumeLostDevice.   - Fixes MoltenVK crashes in Hyrule Warriors: Age of Calamity, Mario Strikers: Battle League and possibly other games.  ## 1.1.774 - 2023-05-09 ### Fixed: - IPC - Refactor Bcat service to use new ipc - Revisit.   - Redo of 1.1.749, with fixes for the affected titles. No known changes in games.   ## 1.1.773 - 2023-05-09 ### Fixed: - Replace DelegateHelper with pre-generated delegates.   - Should allow this to be compiled with NativeAOT in the future. No expected changes in games.  ## 1.1.772 - 2023-05-08 ### Fixed: - Vulkan: Pass Vk instance to VulkanRenderer   - Allows future flexibility in driver selection where multiple could be installed.   - No expected changes in games.  ## 1.1.771 - 2023-05-08 ### Fixed: - Vulkan: Avoid hardcoding features in CreateDevice.   - No expected changes in games.  ## 1.1.770 - 2023-05-08 ### Fixed: - Vulkan: Simplify MultiFenceHolder and managing them.   - Slightly improves performance in Vulkan backend-bottlenecked games such as The Legend of Zelda: Breath of the Wild.  ## 1.1.769 - 2023-05-08 ### Fixed: - Vulkan: Batch vertex buffer updates.   - Batches vertex buffer updates to reduce individual update calls and avoid rebinding those which have not changed.   - Slightly improves performance in The Legend of Zelda: Breath of the Wild.  ## 1.1.768 - 2023-05-07 ### Fixed: - misc: Avoid copy of ApplicationControlProperty.   - Follow-up of 1.1.765, avoids more large copies. No expected changes in games.  ## 1.1.767 - 2023-05-07 ### Fixed: - Ava: Fix SystemTimeOffset calculation.   - Fixes a bug in the Avalonia UI where the system time offset was being incorrectly calculated.   - Formats system settings AXAML. No expected changes in-games.  ## 1.1.766 - 2023-05-07 ### Fixed: - time: Update for 15.0.0 changes and fixes long standing issues.   - Updates the time service HLE code to match RE of firmware 15.0.0.   - Fixes many time-related gameplay elements such as daily events and Pok\u00e9Jobs in Pok\u00e9mon Sword/Shield.  ## 1.1.765 - 2023-05-07 ### Changed: - Switch ProcessResult to a class.   - Avoids large copies when passing or returning the ProcessResult.   - No expected changes in games.  ## 1.1.764 - 2023-05-07 ### Fixed: - UI: Expose games build ID for cheat management.   - Shows the BID for any given game on the cheat manager so users can copy it without needing to look for it in log files or the internet.  ## 1.1.763 - 2023-05-06 ### Added: - Add progress bar for re-packaging shaders.   - After rebuilding shaders on game boot, the emulator then proceeds to recompress the shader cache files; this change adds an extra loading bar for that process. Before, it would seem as if the emulator had hanged, though this was not the case.  ## 1.1.762 - 2023-05-05 ### Fixed: - AM: Stub some service calls.   - No known changes in games.  ## 1.1.761 - 2023-05-05 ### Fixed: - Shader: Use correct offset for storage constant buffer elimination.   - Fixes a regression from 1.1.755 which increased GPU usage in some games and caused performance drops when upscaling.  ## 1.1.760 - 2023-05-05 ### Changed: - Remove CPU region handle containers.   - Memory region handles are now accessed directly instead of through the CpuRegionHandle class.   - Improves performance in Super Mario Odyssey and other titles by up to 5%.  ## 1.1.759 - 2023-05-05 ### Fixed: - Fix sections extraction.   - Fixes a crash when attempting to use the logo extraction feature.  ## 1.1.758 - 2023-05-05 ### Fixed: - Correct tooltips for add,remove,removeall buttons.   - DLC Manager tooltips wrongly referred to updates instead of DLC.  ## 1.1.757 - 2023-05-05 ### Fixed: - Fix typo in TextureBindingsManager.cs.   - \"accomodate\" -&gt; \"accommodate\".  ## 1.1.756 - 2023-05-05 ### Fixed: - Use ToLowerInvariant when detecting GPU vendor.   - Fixes GPU vendor detection on Turkish systems where \"NVIDIA Corporation\" for example would become \"nv\u0131d\u0131a corporation\" and fail the check.  ## 1.1.755 - 2023-05-05 ### Added: - Allow any shader SSBO constant buffer slot and offset.   - May help homebrew that use APIs other than NVN, such as vita2hos or emulated Mario Kart DS.  ## 1.1.754 - 2023-05-05 ### Fixed: - GPU: Allow granular buffer updates from the constant buffer updater.   - Improves performance in NieR Automata: The End of YoRHa Edition, Splatoon 2 and The Legend of Zelda: Breath of the Wild.  ## 1.1.753 - 2023-05-05 ### Fixed: - ModLoader: Fix case sensitivy issues.   - Fixes the previous issue where cheat support broke by creating new instruction lists for every new cheat instead of clearing and share the same list.  ## 1.1.752 - 2023-05-05 ### Fixed: - Fix unescaped string in the Linux launch script which fails when there are spaces in directory path.  ## 1.1.751 - 2023-05-04 ### Fixed: - Revert \"IPC - Refactor Bcat service to use new ipc\".   - Reverts the change in 1.1.749 as it broke several games.  ## 1.1.750 - 2023-05-04 ### Fixed: - UI: Move ApplicationContextMenu in a separated class.   - Fixes an issue where shader cache would be purged regardless of your answer to the \"Are you sure?\" prompt.  ## 1.1.749 - 2023-05-04 ### Fixed: - IPC - Refactor Bcat service to use new ipc.   - Refactors Bcat service code. No known changes in games.  ## 1.1.748 - 2023-05-03 ### Fixed: - Fix some invalid blits involving depth textures.   - Fixes a crash on MoltenVK in AI: The Somnium Files.  ## 1.1.747 - 2023-05-03 ### Fixed: - Update SettingsWindow.cs.   - Fixes saving settings if directory path is directly pasted into the text field instead of using the file chooser.  ## 1.1.746 - 2023-05-03 ### Fixed: - Revert \"ModLoader: Fix case sensitivy issues\".   - Reverts the change in 1.1.744 as it broke cheat support on Windows.  ## 1.1.745 - 2023-05-03 ### Fixed: - Vulkan: Record modifications for barriers after changing the framebuffer.   - Fixes visual glitches at lower resolutions in Xenoblade Chronicles 2 on Nvidia RTX 3000 and 4000 series GPUs.   - Fixes godrays covering the screen on AMD and Nvidia GPUs in Bayonetta 3.  ## 1.1.744 - 2023-05-02 ### Fixed: - ModLoader: Fix case sensitivy issues.   - Fixes an issue where the mod subdirectories (exefs, romfs) had to be lowercase to be recognized by Ryujinx.  ## 1.1.743 - 2023-05-01 ### Added: - Add hide-cursor command line argument &amp; always hide cursor option.   - Adds \"--hide-cursor\" as a new command line argument which overrides the current settings. Possible values are: \"Always\", \"OnIdle\", \"Never\". The default value for the hide-cursor option will still be \"Never\".  ## 1.1.742 - 2023-04-29 ### Added: - Keep rendered textures without any pool references alive.   - Slightly improves performance in The Legend of Zelda: Breath of the Wild.  ## 1.1.741 - 2023-04-29 ### Added: - Pre-emptively flush textures that are flushed often (to imported memory when available).   - Improves performance in The Legend of Zelda: Breath of the Wild, The Legend of Zelda: Skyward Sword HD, Xenoblade Chronicles: Definitive Edition, Xenoblade Chronicles 2 and possibly other titles.  ## 1.1.740 - 2023-04-29 ### Fixed: - Fix errors handling texture remapping. - Fixes the following regressions from 1.1.664:   - Bomb texture corruption while encountering Master Stalfos in The Legend of Zelda: Link's Awakening.   - UI textures in WVSC eBASEBALL: POWER PROS.   - White screen in Xenoblade Chronicles 3 and possibly the rainbow screen in Future Redeemed DLC.  ## 1.1.739 - 2023-04-29 ### Fixed: - Signal interrupt event to improve back-end frame presentation.   - Improves frame-time consistency and presentation in all titles.  ## 1.1.738 - 2023-04-28 ### Added: - Allow window to remember its size, position and state.   - Main window will start-up at its last opened position and state.  ## 1.1.737 - 2023-04-28 ### Changed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.29.0 to 6.30.0.   - Dependency update. No functionality changes.  ## 1.1.736 - 2023-04-28 ### Fixed: - Fix paths and typos for macOS scripts.   - Resolves a bug in the macOS build script preventing compile.  ## 1.1.735 - 2023-04-27 ### Changed: - Move Ryujinx projects to a new src directory.   - Restructures the directory layout of the source code. No program changes.  ## 1.1.734 - 2023-04-27 ### Fixed: - Fix geometry shader layer passthrough regression.   - Fixes a regression from 1.1.733 which caused Pok\u00e9mon Scarlet/Violet to render as if it had a green filter over the screen. This only affected older GPUs that don't support writing gl_Layer on the vertex shader (1st gen Maxwell and older for Nvidia).  ## 1.1.733 - 2023-04-25 ### Fixed: - Refactor attribute handling on the shader generator.   - Refactors shader translator code to better handle \"attributes\".   - Fixes compilation failures for tessellation shaders on MoltenVK, which would cause some games to render nothing except the UI on macOS.   - Fixes an issue on older GPUs that don't support setting gl_Layer on the vertex shader should be fixed. This allows Dragon Quest 3 and possibly other games to render on older GPUs.  ## 1.1.732 - 2023-04-25 ### Fixed: - Add missing check for thread termination on ArbitrateLock.   - Fixes one instance of the emulator freezing when you stop emulation or close it (doesn't fix the issue entirely).  ## 1.1.731 - 2023-04-24 ### Fixed: - Implement DMA texture copy component shuffle.   - Fixes inverted red and blue in 20XX and Dragon Quest Builders, possibly other games that use OpenGL on the Switch.  ## 1.1.730 - 2023-04-24 ### Fixed: - Use vector transform feedback outputs with fragment shaders.   - Works around an AMD driver regression in Pok\u00e9mon Legends Arceus causing invisible characters in Vulkan and distorted models in OpenGL.  ## 1.1.729 - 2023-04-24 ### Fixed: - Set the console title for GTK.   - Fixes a regression that removed the program title from the GTK console.  ## 1.1.728 - 2023-04-23 ### Fixed: - UI: Fix Amiibo issues &amp; log errors and exceptions.   - Fixes an issue where scanning an Amiibo would be impossible if the user's internet connection was too slow to load the API before timing out.   ## 1.1.727 - 2023-04-23 ### Added: - Reducing Memory Allocations 202303.   - Optimizes memory allocations on various emulator tasks. No known changes in games.  ## 1.1.726 - 2023-04-22 ### Fixed: - Shader: Bias textureGather instructions on AMD/Intel.   - Apply small positive bias to textureGather to return correct texels.   - Fixes broken shadows on grass and character models in The Legend of Zelda: Breath of the Wild on AMD/Intel GPUs.  ## 1.1.725 - 2023-04-22 ### Fixed: - Removed MotionInput Calibration.   - Fixes an issue where motion controls would re-center themselves every few seconds.  ## 1.1.724 - 2023-04-20 ### Fixed: - Avoid LM service crashes by not reading more than the buffer size.   - Fixes a crash in Rune Factory 4 Special on newlywed mode when talking with your spouse.  ## 1.1.723 - 2023-04-17 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.28.1 to 6.29.0.   - Updates the System.IdentityModel.Tokens.Jwt dependency. No changes in games.  ## 1.1.722 - 2023-04-17 ### Fixed: - nuget: bump System.Management from 7.0.0 to 7.0.1.   - Updates the System.Management dependency. No changes in games.  ## 1.1.721 - 2023-04-17 ### Fixed: - Support copy between multisample and non-multisample depth textures.   - Fixes some missing graphics in Fate/EXTELLA: The Umbral Star.  ## 1.1.720 - 2023-04-16 ### Changed: - Revert \"chore: Update Silk.NET to 2.17.1\".   - Reverts the change in 1.1.715 as it caused issues on self-built macOS builds.  ## 1.1.719 - 2023-04-16 ### Fixed: - Vulkan: HashTableSlim lookup optimization.   - Small Vulkan optimization. No known changes in games.  ## 1.1.718 - 2023-04-16 ### Fixed: - Change SMAA filter texture clear method.   - Fixes a crash on Intel GPUs and macOS when using SMAA.  ## 1.1.717 - 2023-04-16 ### Added: - [GUI] Add network interface dropdown.   - Adds a setting to allow choosing the network interface used for LAN games (and LDN in the future). This feature is already present on LDN builds.  ## 1.1.716 - 2023-04-16 ### Fixed: - Headless: Fix a crash in Ryujinx.Headless.SDL2 when loading an app.   - Fixes a crash caused by the recent application loader changes, should also log the PTC progress now.  ## 1.1.715 - 2023-04-16 ### Fixed: - chore: Update Silk.NET to 2.17.1.   - Updates the Silk.NET dependency. No changes in games.  ## 1.1.714 - 2023-04-16 ### Fixed: - Ensure the updater doesn't delete hidden or system files.   - Prevents the autoupdater from deleting system files in the Ryujinx folder, such as desktop.ini.  ## 1.1.713 - 2023-04-16 ### Fixed: - nuget: bump DynamicData from 7.13.1 to 7.13.5.   - Updates the DynamicData dependency. No changes in games.  ## 1.1.712 - 2023-04-16 ### Fixed: - Ava: Fix nca extraction window never closing &amp; minor cleanup.   - Fixes an issue on Avalonia where the nca extraction window would not close after finishing.  ## 1.1.711 - 2023-04-15 ### Added: - Ability to hide file types in Game List.   - You can now choose which file types will appear on the games list under Options &gt; Show File Types.  ## 1.1.710 - 2023-04-15 ### Fixed: - Added check for eventual symlink when displaying game files.   - Fixes an issue where Ryujinx wouldn't follow file size on symbolic links.  ## 1.1.709 - 2023-04-14 ### Changed: - Rename Hipc to Cmif where appropriate.  ## 1.1.708 - 2023-04-12 ### Fixed: - Avalonia - Move swkbd message null check into constructor.   - Fixes an issue where the software keyboard in Avalonia did not populate any example text the game provides, such as default character names.  ## 1.1.707 - 2023-04-11 ### Fixed: - HLE: Deal with empty title names properly.   - Fixes a regression from 1.1.689 that caused title names to not appear under certain system languages.  ## 1.1.706 - 2023-04-11 ### Fixed: - Vulkan: add situational \"Fast Flush\" mode.   - Improves Vulkan performance in Bayonetta 3, Pok\u00e9mon Scarlet/Violet (both only when using resolution scaling) and The Legend of Zelda: Breath of the Wild (in general).  ## 1.1.705 - 2023-04-11 ### Fixed: - ARMeilleure: Move TPIDR_EL0 and TPIDRRO_EL0 to NativeContext.   - Improves performance slightly in Pok\u00e9mon Scarlet/Violet and The Legend of Zelda: Breath of the Wild.  ## 1.1.704 - 2023-04-11 ### Fixed: - OpenGL: Fix OBS/Overlays again by binding FB before present.   - Fixes a regression that caused OBS and other software to record inverted video on OpenGL.  ## 1.1.703 - 2023-04-10 ### Fixed: - Avalonia - Force activate parent window before dialog is shown.   - Fixes an issue on the Avalonia UI where content dialogs (such as the controller applet) would not spawn if the Ryujinx window happened to be minimized or out of focus.  ## 1.1.702 - 2023-04-10 ### Fixed: - [GUI] Fix a NRE in GTK when disposing GLRenderer.   - Fixes an issue where the emulator would sometimes crash if the Switch instance wasn't set up yet or an invalid file was loaded which didn't initialize it at all.  ## 1.1.701 - 2023-04-10 ### Fixed: - ARMeilleure: Respect FZ/RM flags for all floating point operations.   - Fixes random crashes when Lynels are in the vicinity and inside the Yah Rin shrine when using the scales in The Legend of Zelda: Breath of the Wild.  ## 1.1.700 - 2023-04-09 ### Fixed: - Implement remaining Arm64 HINT instructions as NOP.   - Fixes a crash on homebrew applications that use the borealis UI library.  ## 1.1.699 - 2023-04-05 ### Fixed: - Eliminate boxing allocations caused by ISampledData structs.   - Code cleanup. No changes in games.  ## 1.1.698 - 2023-04-05 ### Fixed: - Vulkan: Cleanup PhysicalDevice and Instance querying.   - Code cleanup. No changes in games.  ## 1.1.697 - 2023-04-05 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.27.0 to 6.28.1   - Updates .NET System.IdentityModel.Tokens.Jwt dependency. No changes in games.  ## 1.1.696 - 2023-04-04 ### Fixed: - Use index fragment shader output when dual source blend is enabled.   - Fixes a MoltenVK crash in Metroid Prime Remastered and possibly other games.   - Contributes towards upstreaming the currently closed-source macOS build.  ## 1.1.695 - 2023-04-04 ### Fixed: - HLE: Set ProcessResult name from NACP.   - Fixes a regression from 1.1.689 that caused application names to not display properly on Discord statuses, Avalonia loading screens and logs.  ## 1.1.694 - 2023-04-03 ### Fixed: - Fix missing string enum converters for the config.   - Fixes issues caused by the previous change, including configurations resetting and hotkey settings not updating on Avalonia.  ## 1.1.693 - 2023-04-03 ### Fixed: - Source generated json serializers.   - Fixes some trimming warnings and condenses configuration code. *Note: this change may reset your configuration file.  ## 1.1.692 - 2023-04-01 ### Fixed: - nuget: bump DynamicData from 7.12.11 to 7.13.1.   - Updates the DynamicData dependency. No changes in games.  ## 1.1.691 - 2023-04-01 ### Fixed: - Vulkan: Separate debug utils logic from VulkanInitialization.   - Cleans up Vulkan debug code. No changes in games.  ## 1.1.690 - 2023-04-01 ### Fixed: - nuget: bump Avalonia dependencies from 0.10.18 to 0.10.19.   - Updates the Avalonia dependencies. No changes in games.  ## 1.1.689 - 2023-03-31 ### Fixed: - Refactoring of ApplicationLoader.   - Cleans up ApplicationLoader code and contributes towards multi-process support in the future (for example, EdiZon running alongside a game).  ## 1.1.688 - 2023-03-30 ### Fixed: - Fix Linux hang on shutdown.   - Fixes an issue on Linux where the Ryujinx process would not disappear after closing it.  ## 1.1.687 - 2023-03-28 ### Fixed: - Slight code refactoring.  ## 1.1.686 - 2023-03-27 ### Fixed: - audout: Fix a possible crash with SDL2 when the SDL2 audio backend is dummy.   - Fixes a crash when launching Ryujinx with SDL_AUDIODRIVER=dummy.  ## 1.1.685 - 2023-03-27 ### Fixed: - Vulkan: Fix access level of extension fields and make them read-only.   - Code cleanup. No changes to emulator functionality.  ## 1.1.684 - 2023-03-26 ### Fixed: - Vulkan: Remove CreateCommandBufferPool from Vulkan Initialization.   - Code cleanup. No changes to emulator functionality.  ## 1.1.683 - 2023-03-26 ### Fixed: - Vulkan: fix broken \"VK_EXT_subgroup_size_control\" support check.   - Fixes flickering graphics on AMD GPUs in Crisis Core -Final Fantasy VII- Reunion, Shin Megami Tensei V and possibly other games.  ## 1.1.682 - 2023-03-26 ### Fixed: - Vulkan: Insert barriers before clears.   - Fixes black square artifacts (\"puzzle pieces\") on Vulkan, on Nvidia RTX 3000-4000 GPUs running driver version 522.25 or newer, in Mario Kart 8 Deluxe, Xenoblade Chronicles: Definitive Edition, Xenoblade 2 and Xenoblade 3.  ## 1.1.681 - 2023-03-24 ### Fixed: - sdl2: Update to Ryujinx.SDL2-CS 2.26.3.   - Fixes infinite loop shutting down WGI controllers.   - Fixes centering the D-pad on some Xbox controllers.   - Allows some copycat DualShock 4 controllers and possibly other gamepads to work natively on Ryujinx.  ## 1.1.680 - 2023-03-24 ### Fixed: - Batch inline index buffer update.   - Fixes low Nvidia Vulkan performance in Genkai Tokki Moero Crystal H, La-Mulana and possibly other games that use the OpenGL API on the Switch.   - Improves OpenGL performance in the same games for other GPU vendors.  ## 1.1.679 - 2023-03-24 ### Fixed: - Update short cache textures if modified.   - Fixes a regression from 1.1.566 that broke rendering in Sonic Colors: Ultimate.  ## 1.1.678 - 2023-03-24 ### Fixed: - Fix handle leak on IShopServiceAccessServerInterface.CreateServerInterface.   - Fixes a crash in SD Shin Kamen Rider Rumble.  ## 1.1.677 - 2023-03-22 ### Fixed: - ARMeilleure: Check for XSAVE cpuid flag for AVX{2,512}.   - Fixes an issue introduced in 1.1.673 where the emulator would crash if running on an extremely old CPU.  ## 1.1.676 - 2023-03-22 ### Added: - CI: add a version tag to correlate release versions with commits.   - Main releases on GitHub will now have tags that link to their respective commits.  ## 1.1.675 - 2023-03-21 ### Fixed: - Revert \"Use source generated json serializers in order to improve code trimming\" #4576.   - Reverts the previous change. Fixes issues it caused such as configuration files not being parsed properly and games not booting.  ## 1.1.674 - 2023-03-21 \u26a0\ufe0f This version does not work properly, do not update to it. \u26a0\ufe0f  ### Changed: - Use source generated json serializers in order to improve code trimming.  ## 1.1.673 - 2023-03-20 ### Fixed: - ARMeilleure: Add initial support for AVX512 (EVEX encoding) (cont).   - Redo of 1.1.478 with added fixes for the black screen issues it caused.  ## 1.1.672 - 2023-03-19 ### Fixed: - Vulkan: Migrate buffers between memory types to improve GPU performance.   - Greatly improves Nvidia Vulkan performance in Bayonetta 3, Blue Reflection: Second Light, Catherine Full Body, Ghost 'n Goblins Resurrection, Hyrule Warriors: Age of Calamity, Monster Hunter Rise, NieR Automata: The End of YoRHa Edition, Persona 5 Royal, Shin Megami Tensei V, Sonic Frontiers, Subnautica, Xenoblade Chronicles: Definitive Edition, Xenoblade 2, Xenoblade 3 and possibly other games.  ## 1.1.671 - 2023-03-19 ### Fixed: - Remove MultiRange Min/MaxAddress and rename GetSlice to Slice.   - Code cleanup. No changes in games.  ## 1.1.670 - 2023-03-19 ### Fixed: - Avoid copying more handles than we have space for.   - Fixes a regression from 1.1.668 that caused crashes in Fire Emblem Engage.  ## 1.1.669 - 2023-03-18 ### Fixed: - OpenGL: Fix inverted conditional for counter flush from #4471.   - Fixes a regression from 1.1.662 that caused OpenGL to time out and softlock in Mario Kart 8 Deluxe and other games.  ## 1.1.668 - 2023-03-17 ### Fixed: - Reducing memory allocations.   - Speeds up boot times by a few seconds on Metroid Prime Remastered and likely other games.  ## 1.1.667 - 2023-03-17 ### Fixed: - Update syscall capabilites to include SVCs from FW 15.0.0.   - Allows the homebrew menu (using hbl.nsp) to boot again.  ## 1.1.666 - 2023-03-17 ### Fixed: - nuget: bump UnicornEngine.Unicorn from 2.0.2-rc1-f7c841d to 2.0.2-rc1-fb78016.   - Updates the UnicornEngine.Unicorn dependency. No changes in games.  ## 1.1.665 - 2023-03-14 ### Fixed: - GPU: Fast path for adding one texture view to a group.   - Greatly improves loading screens and fixes open zone getting stuck at ~3fps in Sonic Frontiers.   - May improve loading times in other games.  ## 1.1.664 - 2023-03-14 ### Fixed: - Update range for remapped sparse textures instead of recreating them.   - Significantly reduces stuttering when going through doors in Metroid Prime Remastered.   - Greatly reduces FIFO% in NieR Automata: The End of YoRHa Edition when travelling between areas.   - May improve texture streaming stutters in other games.  ## 1.1.663 - 2023-03-14 ### Fixed: - Ava UI: DownloadableContentManager Refactor.   - Refactors the Avalonia DLC manager and makes it consistent with the title update manager.  ## 1.1.662 - 2023-03-12 ### Fixed: - GPU: Scale counter results before addition.   - Fixes resolution scaling in WarioWare: Get It Together and Wreckfest.  ## 1.1.661 - 2023-03-12 ### Fixed: - Increase access permissions for AvaloniaList.   - Fixes a regression from 1.1.513 that caused the timezone list to not show.  ## 1.1.660 - 2023-03-12 ### Fixed: - Misc: Support space in path on macOS distribution.   - Fixes build errors on macOS when spaces are present in the file path.  ## 1.1.659 - 2023-03-12 ### Fixed: - [Flatpak] Beautify multiline strings again &amp; Add full git commit hash.   - Code cleanup. No changes to emulator functionality.  ## 1.1.658 - 2023-03-11 ### Fixed: - misc: Some dependencies cleanup.   - Removes unused dependencies.  ## 1.1.657 - 2023-03-11 ### Fixed: - Misc performance tweaks.   - Minor code optimizations. No noticeable changes.  ## 1.1.652-1.1.656 - 2023-03-11 ### Fixed: - [Flatpak] Add release github workflow.   - Flathub builds will now update again.  ## 1.1.651 - 2023-03-08 ### Fixed: - CPU: Avoid argument value copies on the JIT.   - JIT optimizations and refactoring. May result in a minor performance improvement.  ## 1.1.650 - 2023-03-04 ### Fixed: - nuget: bump Microsoft.CodeAnalysis.CSharp from 4.4.0 to 4.5.0.   - Updates the Microsoft.CodeAnalysis.CSharp dependency. No changes in games.  ## 1.1.649 - 2023-03-04 ### Fixed: - Minor code formatting.  ## 1.1.648 - 2023-03-04 ### Fixed: - nuget: bump UnicornEngine.Unicorn from 2.0.2-rc1-a913199 to 2.0.2-rc1-f7c841d.   - Updates the UnicornEngine.Unicorn dependency. No changes in games.  ## 1.1.647 - 2023-03-01 ### Fixed: - Update LibHac to 0.18.0.   - Fixes a regression where the emulator wouldn't create a BCAT save if any other BCAT save already existed, throwing a \"ResultFsTargetNotFound (2002-1002)\" error when attempting to open the BCAT save directory.   - Loading personalized ticket title keys is now supported with the right console keys dumped.  ## 1.1.646 - 2023-02-27 ### Fixed: - Sockets: Properly convert error codes on MacOS.   - Changes sockets error codes on macOS accordingly rather than using the same error codes as Windows and Linux.   - Defaults IsDhcpEnabled to true when interfaceProperties.DhcpServerAddresses is not available.   - Contributes towards upstreaming the currently closed-source macOS build.  ## 1.1.645 - 2023-02-27 ### Added: - Add Support for Post Processing Effects.   - Adds FXAA and SMAA post processing options in graphics settings.   - Adds bilinear, nearest and FSR (1.0) upscaling options in graphics settings.  ## 1.1.644 - 2023-02-26 ### Fixed: - Vulkan: Support list topology primitive restart.   - Fixes broken sand in The Legend of Zelda: Skyward Sword HD on Vulkan. (Will not affect MoltenVK as it does not support this extension.)   ## 1.1.643 - 2023-02-25 ### Changed: - Logging: Redirect StdErr into logging system.   - Allows for easier MoltenVK/Mesa debugging since StdErr will now show up in log files. No changes in games.  ## 1.1.642 - 2023-02-25 ### Fixed: - Add missing DefineConstants definition in Ryujinx.Common.   - Fixes a project file bug that was preventing FlatPak and nixpkgs releases from building.  ## 1.1.641 - 2023-02-25 ### Added: - macos: Add updater support.   - Adds an external updater script into macOS release packages.   - No changes for current macOS releases. Will become more useful once upstreaming is complete.  ## 1.1.640 - 2023-02-25 ### Fixed: - Update OpenTK to 4.7.7   - Bumps OpenTK dependency to version 4.7.7. No changes expected in games.  ## 1.1.639 - 2023-02-25 ### Fixed: - Move gl_Layer to vertex shader if geometry is not supported.   - Allows certain UE4 games such as Shin Megami Tensei V to render on macOS.   - Contributes to the upstreaming of the closed-source macOS branch.  ## 1.1.638 - 2023-02-25 ### Fixed: - Perform bounds checking before list indexer to avoid frequent exceptions.   - Reduces ArgumentOutOfRangeExceptions and performance dips in VS console output and debug builds. No changes in games.  ## 1.1.637 - 2023-02-23 ### Fixed: - Account for multisample when calculating render target size hint.   - Fixes a regression from 1.1.605 that caused graphical and/or upscaling issues in Bubble Bobble, Fate/EXTELLA: The Umbral Star, Pok\u00e9mon Mystery Dungeon: Rescue Team DX and Rune Factory 5.  ## 1.1.636 - 2023-02-22 ### Fixed: - Ava: Fix Title Update Manager not selecting the right update.   - Fixes an issue on Avalonia that would disable game updates after opening the update manager and not re-selecting an update.  ## 1.1.635 - 2023-02-22 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 17.4.1 to 17.5.0.   - Updates the Microsoft.NET.Test.Sdk dependency. No changes in games.  ## 1.1.634 - 2023-02-22 ### Fixed: - nuget: bump UnicornEngine.Unicorn from 2.0.2-rc1-9c9356d to 2.0.2-rc1-a913199.   - Updates the UnicornEngine.Unicorn dependency. No changes in games.  ## 1.1.633 - 2023-02-22 ### Fixed: - Ava: Fix Linux updater crashing when tarStream is null.   - Fixes a regression that caused the Avalonia autoupdater to crash on Linux.  ## 1.1.632 - 2023-02-21 ### Fixed: - Add copy dependency for some incompatible texture formats.   - Fixes vertical stripes in Mario + Rabbids Sparks of Hope.  ## 1.1.631 - 2023-02-21 ### Fixed: - misc: changes base application directory behaviour.   - Allows changing base application directory behaviour at build time via FORCE_EXTERNAL_BASE_DIR. Required by nixpkgs and flathub.   - Contributes towards upstreaming the currently closed-source macOS build.  ## 1.1.630 - 2023-02-21 ### Fixed: - Move Ryujinx Folder from ~/.config to ~/Library/Application Support on macOS.   - Moves the Ryujinx folder to make it more consistent with other apps on macOS. Data will automatically migrate from the old path to the new one.   ## 1.1.629 - 2023-02-21 ### Fixed: - Use SIMD acceleration for audio upsampler.   - Doubles audio upsampling speed on x64 hardware.  ## 1.1.628 - 2023-02-21 ### Fixed: - Memory: Faster Split for NonOverlappingRangeList.   - Reduces asset streaming stutters in Xenoblade Chronicles 2.  ## 1.1.627 - 2023-02-21 ### Fixed: - Mark texture as modified and sync on I2M fast path.   - Fixes a regression from 1.1.233 that caused graphical issues in Tanuki Justice.  ## 1.1.626 - 2023-02-19 ### Added: - Add support for advanced blend (part 1/2).   - Fixes transparency issues in Mario Party Superstars and ScreamPark selection screen in Luigi's Mansion 3 on Nvidia GPUs.  ## 1.1.625 - 2023-02-17 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.26.1 to 6.27.0.   - Updates the System.IdentityModel.Tokens.Jwt dependency. No changes in games.  ## 1.1.624 - 2023-02-16 ### Fixed: - Clear CPU side data on GPU buffer clears.   - Fixes the black screen in Mario + Rabbids Sparks of Hope.  ## 1.1.623 - 2023-02-16 ### Fixed: - Validate dimensions before creating texture.   - Fixes a regression introduced in 1.1.615 that caused Super Smash Bros. Ultimate to crash when using ARCropolis mods.  ## 1.1.622 - 2023-02-15 ### Fixed: - GUI: Small Updater refactor &amp; Set correct permissions on Linux when extracting files.   - Fixes a Linux issue where the Ryujinx executable wouldn't work after using the autoupdater.  ## 1.1.621 - 2023-02-15 ### Fixed: - Vulkan: Respect VK_KHR_portability_subset vertex stride alignment.   - No known changes in games.  ## 1.1.620 - 2023-02-15 ### Fixed: - Vulkan: Clean up MemoryAllocator.   - Avoid querying GPU memory properties at allocation time. No known changes in games.   ## 1.1.619 - 2023-02-13 ### Fixed: - Vulkan: Enforce Vulkan 1.2+ at instance API level and 1.1+ at device level.   - In some cases, ensures the emulator won't try to initialize Vulkan on an incompatible graphics device. No changes in games.  ## 1.1.618 - 2023-02-13 ### Fixed: - Vulkan: Do not call vkCmdSetViewport when viewportCount is 0.   - Fixes some Vulkan validation errors. No known changes in games.  ## 1.1.617 - 2023-02-12 ### Fixed: - Fix partial updates for textures.   - Fixes random texture corruption in Tony Hawk's Pro Skater 1 + 2 and possibly other games.  ## 1.1.616 - 2023-02-10 ### Fixed: - Better filtering of invalid NPadIds when games request unknown supported players.   - Allows Kingdom Rush to boot.  ## 1.1.615 - 2023-02-10 ### Fixed: - Allow partially mapped textures with unmapped start.   - Fixes broken lighting and fog in Metroid Prime Remastered.  ## 1.1.614 - 2023-02-08 ### Fixed: - Fix SPIR-V when all inputs/outputs are indexed.   - Fixes a crash in Metroid Prime Remastered on Vulkan.  ## 1.1.613 - 2023-02-08 ### Fixed: - ObjectiveC Helper Class.   - Avalonia code cleanup. No changes to the UI functionality itself.  ## 1.1.612 - 2023-02-08 ### Added: - Log shader compile errors with Warning level.   - Shows OpenGL shader compilation errors as Warning log messages in the logging console. No changes in games.  ## 1.1.611 - 2023-02-08 ### Fixed: - Replace unicorn bindings with Nuget package.   - Improves the code for tests. No changes in games.  ## 1.1.610 - 2023-02-08 ### Fixed: - Vulkan: Flush command buffers for queries less aggressively.   - Improves Vulkan performance in Xenoblade Chronicles 2.  ## 1.1.609 - 2023-02-08 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.26.0 to 6.26.1.   - Updates the System.IdentityModel.Tokens.Jwt dependency. No changes in games.  ## 1.1.608 - 2023-02-08 ### Fixed: - Replace BitConverter.ToString(bytes).Replace(\"-\", \"\") with Convert.ToHexString(bytes).   - Code cleanup. No changes in games.  ## 1.1.607 - 2023-02-08 ### Fixed: - Fix some Vulkan validation errors.   - Code cleanup. No expected changes in games.  ## 1.1.606 - 2023-02-08 ### Fixed: - Limit texture cache based on total texture size.   - Implements a better solution than 1.1.538 for its problem.   - Fixes a regression from the aforementioned change that spawned noise graphics on the title menu in River City Girls Zero.  ## 1.1.605 - 2023-02-08 ### Fixed: - Handle mismatching texture size with copy dependencies.   - Fixes rendering in Disgaea 6: Defiance of Destiny, The Longest Five Minutes and void tRrLM().   - Fixes nuclear rainbow terrain when using extra stamina food or Master Cycle Zero in The Legend of Zelda: Breath of the Wild.   - Fixes nuclear rainbow tracks on AMD GCN/Polaris graphics cards (such as RX 400/500 series) in Mario Kart 8 Deluxe.   - Might fix random texture corruption in other games.  ## 1.1.604 - 2023-02-07 ### Fixed: - Ava: Add ChangeVSyncMode() call to render loop.   - Makes render loop behave the same as in GTK.   - Fixes cases of screen tearing that would occur while running games on the Avalonia builds but wouldn't occur on GTK.   - Might fix screen tearing on macOS.  ## 1.1.603 - 2023-02-07 ### Fixed: - Support safe blit on non-2D textures.   - Fixes more cases of AMD GPUs crashing on higher resolutions in Fire Emblem Engage.  ## 1.1.602 - 2023-02-06 ### Fixed: - Accelerate NVDEC VIC surface read/write and colorspace conversion with Arm64 HW intrinsics.   - Contributes towards upstreaming the currently closed-source macOS build.  ## 1.1.601 - 2023-02-05 ### Fixed: - Implement safe depth-stencil blit using stencil export extension.   - Fixes AMD graphics cards crashing on non-native resolutions in Fire Emblem Engage, Pok\u00e9mon Scarlet/Violet, Pok\u00e9mon Sword/Shield, The Legend of Zelda: Link's Awakening, Splatoon 3, Yu-Gi-Oh! Rush Duel: Dawn of the Battle Royale and possibly other games.   - Fixes low performance on AMD GPUs in Pok\u00e9mon Scarlet/Violet, Pok\u00e9mon Sword/Shield and possibly other games.  ## 1.1.600 - 2023-02-05 ### Fixed: - Insert bitcast for assignment of fragment integer outputs on GLSL.   - Fixes a regression from 1.1.549 that broke rendering on OpenGL in several games, including Kirby and the Forgotten Land and Luigi's Mansion 3.  ## 1.1.599 - 2023-02-01 ### Fixed: - Implement Account LoadOpenContext.   - Fixes some multi-game collections that would crash after launching one of the games, such as Prinny Presents NIS Classics Volume 1: Phantom Brave: The Hermuda Triangle Remastered / Soul Nomad &amp; the World Eaters.  ## 1.1.598 - 2023-01-30 ### Fixed: - nuget: bump SharpZipLib from 1.4.1 to 1.4.2.   - Updates the SharpZipLib package version. No changes to emulator functionality.  ## 1.1.597 - 2023-01-29 ### Added: - Initial Apple Hypervisor based CPU emulation.   - Contributes towards upstreaming the currently closed-source macOS build.   - Allows games to run ARM code natively on Apple Silicon using the Apple Hypervisor framework. Greatly improves performance on Apple Silicon.   ## 1.1.596 - 2023-01-26 ### Fixed: - Relax Vulkan requirements.   - Redo of 1.1.551 with fixes for the issues that appeared last time, such as broken lighting in several games.  ## 1.1.595 - 2023-01-24 ### Fixed: - Vulkan: Reset queries on same command buffer.   - Contributes towards upstreaming the currently closed-source macOS build.   - Fixes some visual issues in A Hat in Time and Super Mario Odyssey on macOS.  ## 1.1.594 - 2023-01-23 ### Fixed: - Remove use of GetFunctionPointerForDelegate to get JIT cache function pointer.   - Optimizes JIT code. No known changes in games.  ## 1.1.593 - 2023-01-23 ### Fixed: - SPIR-V: Change BitfieldExtract and BitfieldInsert for SPIRV-Cross.   - Contributes towards upstreaming the currently closed-source macOS build.  ## 1.1.592 - 2023-01-22 ### Added: - Add option to register file types.   - Under tools &gt; manage file types, added options to associate or disassociate Nintendo Switch file extensions with Ryujinx, so that when an nsp or xci file is double-clicked, it opens that game on Ryujinx. Note that this feature doesn't currently work.  ## 1.1.591 - 2023-01-22 ### Fixed: - Handle parsing of corrupt Config.json and prevent crash on launch.   - Fixes a crash on boot that could occur if the config.json file was corrupted or invalid.  ## 1.1.590 - 2023-01-22 ### Fixed: - Arm64: Simplify TryEncodeBitMask and use for constants.   - Improves performance very slightly on ARM64 systems.  ## 1.1.589 - 2023-01-22 ### Fixed: - AvaloniaKeyboardDriver: Swallow TextInput events to avoid bell on macOS.   - Prevents macOS from spamming the bell sound when playing with a keyboard.    ## 1.1.588 - 2023-01-21 ### Fixed: - Allow setting texture data from 1x to fix some textures resetting randomly.   - Fixes resolution scaling in Cruis'n Blast, Deltarune, Fire Emblem Engage, Monopoly Madness, My Hero One's Justice 2, Pok\u00e9mon Brilliant Diamond/Shining Pearl, Pok\u00e9mon Mystery Dungeon: Rescue Team DX, Rune Factory 5, The Stanley Parable: Ultra Deluxe and possibly other games.   ## 1.1.587 - 2023-01-21 ### Fixed: - Ava UI: Various Fixes.    - Fixes screenshot functionality not working on Avalonia since 1.1.532.   - Fixes an issue where game updates would not be removed properly from the JSON file if an update file was moved or renamed.   - Cleans up some more Ava code.  ## 1.1.586 - 2023-01-21 ### Fixed: - Remove use of reflection on GAL multithreading.   - Code improvement, required for NativeAOT support. No known changes in games.  ## 1.1.585 - 2023-01-21 ### Fixed: - nuget: bump Microsoft.CodeAnalysis.Analyzers from 3.3.3 to 3.3.4.   - Updates Microsoft.CodeAnalysis.Analyzers. No changes to emulator functionality.  ## 1.1.584 - 2023-01-21 ### Fixed: - Use volatile read/writes for GAL threading.   - Contributes towards upstreaming the currently closed-source macOS build.   - Fixes some instances of random crashing on ARM64 macOS.  ## 1.1.583 - 2023-01-21 ### Fixed: - Implement CSET and CSETP shader instructions.   - Fixes low detail texture bug in Persona 4 Golden.  ## 1.1.582 - 2023-01-21 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.25.1 to 6.26.0.   - Updates System.IdentityModel.Tokens.Jwt. No changes to emulator functionality.  ## 1.1.581 - 2023-01-20 ### Added: - Ava UI: Add Notifications and Cleanup.   - Adds in-app notifications to the Avalonia UI.   - Disables \"open save directory\" options when the given directory does not exist.  ## 1.1.580 - 2023-01-20 ### Fixed: - Ava UI: Fix string.Format issues in Locale.   - Fixes an issue where some windows wouldn't open if UI language was not set to English on Avalonia.  ## 1.1.579 - 2023-01-20 ### Fixed: - Catch Profile.json parse to prevent crash on launch.   - Fixes a crash on boot that could occur if the profiles.json file was corrupted or invalid.  ## 1.1.578 - 2023-01-20 ### Added: - Ava UI: Add Control+Cmd+F HotKey for Mac OS.   - Adds additional hotkey to toggle full screen by pressing ^+\u2318+F on macOS.  ## 1.1.577 - 2023-01-20 ### Added: - Implement PCM24 output.   - Allows audio devices that do not support PCM16, PCM32 or float output to have PCM24 and PCM8 as possible output options.  ## 1.1.576 - 2023-01-20 ### Fixed: - Ava UI: Fixes and cleanup Updater.   - Denying an emulator update after startup will no longer disable the option to check for updates on Avalonia.  ## 1.1.575 - 2023-01-19 ### Fixed: - Vulkan: Destroy old swapchain on swapchain recreation.   - Fixes an issue where the image would freeze on AMD graphics cards when exiting fullscreen.   - Fixes a memory leak on macOS when resizing the window.  ## 1.1.574 - 2023-01-18 ### Fixed: - Vulkan: Explicitly enable precise occlusion queries.   - Contributes towards upstreaming the currently closed-source macOS build.   - Fixes ink collision in Splatoon 2 and Splatoon 3 on MoltenVK.  ## 1.1.573 - 2023-01-18 ### Fixed: - NativeSignalHandler: Fix write flag.   - Allows Mario Kart 8 Deluxe to use resolution scaling on ARM64 macOS.   - May improve Linux performance in some situations.  ## 1.1.572 - 2023-01-18 ### Fixed: - Optimize string memory usage. Use Spans and StringBuilders where possible.   - Code cleanup. No changes in games.  ## 1.1.571 - 2023-01-18 ### Fixed: - HOS: Load RomFs by pid.   - Allows separate processes to use separate romfs. No known changes in games.  ## 1.1.570 - 2023-01-17 ### Fixed: - CPU: Fix NRE when disposing AddressSpace with 4KB pages support.   - Fixes an issue from 1.1.568 where the emulator crashed upon stopping emulation. (Note that it can still hang on closing certain games as that's a different issue.)  ## 1.1.569 - 2023-01-16 ### Fixed: - ConfigurationState: Default to Vulkan on macOS.   - Sets graphics backend to Vulkan on macOS as the default setting.  ## 1.1.568 - 2023-01-16 ### Fixed: - Implement support for page sizes &gt; 4KB.   - Contributes towards upstreaming the currently closed-source macOS build.   - Games can now run without Rosetta on Apple Silicon using a master macOS build.  ## 1.1.567 - 2023-01-16 ### Fixed: - Ava UI: Readd some infos to the GameList.   - Adds missing title ID and file extension information to the games list on the Avalonia UI.  ## 1.1.566 - 2023-01-16 ### Fixed: - Add short duration texture cache.   - Improves performance in Fire Emblem: Three Houses and Hyrule Warriors: Age of Calamity, and possibly other Warriors/Musou games.  ## 1.1.565 - 2023-01-15 ### Fixed: - Ava: Fix Linux Vulkan renderer regression.   - Fixes a regression from 1.1.563 that caused Vulkan to crash on Linux when using Avalonia.  ## 1.1.564 - 2023-01-15 ### Fixed: - UI: Fixes GTK sorting regression of #4294.   - Fixes a regression from 1.1.562 that caused crashing on the GTK UI.  ## 1.1.563 - 2023-01-15 ### Fixed: - Ava UI: Renderer refactoring.   - Refactor and cleanup everything related with Renderer hosting. Should not affect rendering behaviour.  ## 1.1.562 - 2023-01-15 ### Fixed: - UI: Fix applications times.   - Makes play times easier to read.  ## 1.1.561 - 2023-01-15 ### Fixed: - Specify image view usage flags on Vulkan.   - Fixes black screen on Nvidia in games using multisample sRGB textures, such as Pinball FX3 and Sphinx and the Cursed Mummy.  ## 1.1.560 - 2023-01-15 ### Fixed: - Implement missing service calls in pm.   - Allows EdiZon NRO to boot.  ## 1.1.559 - 2023-01-15 ### Fixed: - Ava UI: TitleUpdateWindow Refactor.   - Redesigns the Avalonia title update manager and cleans up its code.  ## 1.1.558 - 2023-01-15 ### Fixed: - Audren: Implement polyphase upsampler.   - Improves accuracy of the upsampler implementation. No known changes in games.  ## 1.1.557 - 2023-01-14 ### Fixed: - Ava UI: Fixes \"Hide Cursor on Idle\" for Windows.   - Fixes an issue with the cursor not being hidden properly on the Avalonia UI.  ## 1.1.556 - 2023-01-14 ### Fixed: - Change GetPageSize to use Environment.SystemPageSize.   - Allows the emulator to detect the correct page size for the system it's running on.   - Required for Ryujinx to work on Asahi Linux in the future.  ## 1.1.555 - 2023-01-14 ### Fixed: - Fix texture flush from CPU WaitSync regression on OpenGL.   - Fixes a regression from 1.1.554 that caused Super Mario Odyssey and other games to crash on OpenGL.  ## 1.1.554 - 2023-01-13 ### Fixed: - Fix NRE when MemoryUnmappedHandler is called for a destroyed channel.   - Fixes random crashes in EVE ghost enemies. Possibly a regression from 1.1.361.  ## 1.1.553 - 2023-01-13 ### Fixed: - Fix texture modified on CPU from GPU thread after being modified on GPU not being updated.   - Fixes missing textures in EVE ghost enemies, and possibly other games.  ## 1.1.552 - 2023-01-13 ### Fixed: - Revert \"Relax Vulkan requirements (#4228)\".   - Reverts the previous change as it caused rendering issues on some games.  ## 1.1.551 - 2023-01-13 ### Changed: - Relax Vulkan requirements.   - The emulator will now request certain graphics features optionally, making it possible to run on more GPUs.   - Allows some games to work on the Raspberry Pi 4, albeit at non-playable speeds.  ## 1.1.550 - 2023-01-12 ### Fixed: - Prepo: Fix SaveSystemReport and SaveSystemReportWithUser IPC definitions.   - Fixes a small regression from 1.1.519. No known changes in games.   - Fixes indexes args issue from #4188 (1.1.506).  ## 1.1.549 - 2023-01-12 ### Added: - Vulkan: Add workarounds for MoltenVK.   - Adds MoltenVK configuration class and several workarounds for graphics features not supported by macOS.    - Contributes towards upstreaming the currently closed-source macOS build.   - Allows Mario Kart 8 Deluxe and many other titles to go in-game on Mac. On M1 systems, Rosetta is required for now.  ## 1.1.548 - 2023-01-12 ### Fixed: - Ava UI: Reorder settings of Resolution Scaler.   - \"Custom\" is now at the bottom of the list.  ## 1.1.547 - 2023-01-12 ### Fixed: - Ava UI: Various Fixes.   - Fixes an error from 1.1.540 that could occur when switching profiles and clicking \"Manage saves\".   - Save manager file sizes will be displayed in KB and GB when needed.   - Other minor adjustments.  ## 1.1.546 - 2023-01-12 ### Fixed: - Ava UI: Settings Adjustments.   - Fixes log settings ordering.   - Other minor adjustments.  ## 1.1.545 - 2023-01-12 ### Added: - PTC: Check process architecture.   - PPTC files will be disregarded if they are for different CPU architectures (for example, PTC compiled on an x86 PC cannot be transferred to an M1 Mac).  ## 1.1.544 - 2023-01-12 ### Added: - ARM64: CPU feature detection.   - Required to determine what CPU features can be used by the emulator on ARM. No changes in games.  ## 1.1.543 - 2023-01-12 ### Fixed: - lm: Handle Tail flag in LogPacket.   - Fixes logs related to the lm service. No changes in games.  ## 1.1.542 - 2023-01-11 ### Fixed: - Ava UI: Move Ava logging to Logger.Debug.   - Avalonia UI logs (see 1.1.523) will now only show if debug logs are enabled, reducing console spam.  ## 1.1.541 - 2023-01-11 ### Fixed: - Ava UI: Fixes PerformanceCheck condition.   - Fixes \"Graphics shader dump path\" warning prompt not disabling the setting when the user clicked \"Yes\" to disable it.  ## 1.1.540 - 2023-01-11 ### Fixed: - Ava GUI: User Profile Manager + Other Fixes.   - Redesigns the user profiles manager on Avalonia and cleans up its code.  ## 1.1.539 - 2023-01-10 ### Fixed: - Ava: Fixes Update count in heading.   - Number of available updates in the title update manager has been corrected.  ## 1.1.538 - 2023-01-10 ### Fixed: - Remove textures from cache on unmap if not mapped and modified.    - Fixes abnormally high VRAM usage in Eiyuden Chronicle: Rising and Witch's Garden.  ## 1.1.537 - 2023-01-10 ### Fixed: - ava: Generate Locale menu automatically.   - Generates Avalonia UI language selection menu automatically in order to make adding new languages easier.   ## 1.1.536 - 2023-01-10 ### Added: - Implement JIT ARM64 backend.   - Adds ARM64 target support to the JIT, allowing it to work on ARM CPUs.    - Contributes towards upstreaming the currently closed-source macOS build.   - Paves the way for Ryujinx to run on other ARM devices in the future.  ## 1.1.535 - 2023-01-10 ### Added: - Set LSApplicationCategoryType to games.   - On the next macOS release, automatically adds Ryujinx to the Launchpad games folder.   ## 1.1.534 - 2023-01-10 ### Fixed: - Ava GUI: Fix Context Menu Locales.   - Corrects device save and BCAT save directory option text.   ## 1.1.533 - 2023-01-10 ### Fixed: - misc: Enforce LF.   - Improves Ryujinx.sh script handling.   ## 1.1.532 - 2023-01-10 ### Fixed: - ava: Cleanup AppHost.   - Cleans up AppHost file code.   ## 1.1.531 - 2023-01-10 ### Fixed: - Ava: Add missing null check to ContentDialogHelper.ShowAsync().   - Fixes a regression that caused the Avalonia UI to crash on the Steam Deck.  ## 1.1.530 - 2023-01-09 ### Added: - Add command line arguments to override docked mode.   - Adds \"--docked-mode\" and \"--handheld-mode\" command line arguments for both GUIs to override the state of EnableDockedMode.  ## 1.1.529 - 2023-01-09 ### Fixed: - Fix linux packaging step for CI &amp; Add headless build support to Ryujinx.sh.   - Fixes the previous version not building.  ## 1.1.528 - 2023-01-09 ### Added: - Linux: Add Avalonia detection to Ryujinx.sh.   - Adds a small check to Ryujinx.sh to figure out if Ryujinx or Ryujinx.Ava needs to be executed.  ## 1.1.527 - 2023-01-09 ### Fixed: - Replace tabs with spaces across the project.   ## 1.1.526 - 2023-01-09 ### Fixed: - headless: Change window icon size to 48x48.  ## 1.1.525 - 2023-01-08 ### Added: - [Headless] Add missing arguments &amp; Fix typos.   - Adds \"--macro-hle\", \"--hide-cursor\", \"--profile\" and \"--root-data-dir\" to headless build arguments.   - Inverts several command line options i.e. EnableInternetAccess is now DisableInternetAccess for the non-default option.   - Adds a window icon.  ## 1.1.524 - 2023-01-08 ### Fixed: - ava: Fixes regressions from refactoring.  - Fixes the following regressions on the Avalonia GUI:   - Right click context menu on games now works again.   - \"Stop emulation\" menu item now works again.   - The UI will now overlay properly over games again.   ## 1.1.523 - 2023-01-08 ### Fixed: - Ava: Make Avalonia use our logging system.   - Avalonia logs will now be logged by Ryujinx.  ## 1.1.522 - 2023-01-08 ### Fixed: - Ava GUI: Fix long selection bar broken in #4178 (1.1.520).  ## 1.1.521 - 2023-01-08 ### Fixed: - HIPC: Fix reply possibly also receiving one request.   - Fixes an issue from 1.1.506. No known changes in games.  ## 1.1.520 - 2023-01-08 ### Fixed: - Ava GUI: MainWindow Refactor.   - Refactors the main window code on the Avalonia UI. No notable changes to the window itself.  ## 1.1.519 - 2023-01-08 ### Fixed: - Horizon: Impl Prepo, Fixes bugs, Clean things.   - Ports the prepo service to the new IPC handling from 1.1.506. Not known to affect any games.   - Moves sm service logs from Info logs to Debug logs.   - Cleans up sm and lm service code and general fixes.  ## 1.1.518 - 2023-01-07 ### Fixed: - MainWindow: Vertically center SearchBox TextPresenter.   - Centers \"Search...\" text in the games list search box on the Avalonia GUI.  ## 1.1.517 - 2023-01-07 ### Fixed: - ava: Fix regression caused by #4013.   - Fixes a regression from the previous change that caused the UI to break.  ## 1.1.516 - 2023-01-07 ### Added: - Include a start.sh file with correct launch options.   - Adds a script to run Ryujinx on Linux and simplify its usage.  ## 1.1.515 - 2023-01-06 ### Fixed: - Ava GUI: AboutWindow Refactor.   - Redesigns the \"About\" window on the Avalonia UI.  ## 1.1.514 - 2023-01-06 ### Fixed: - [hipc] Fix 'Unexpected result code Success returned' in Reply().   - Fixes a crash when minimizing Ryujinx.Headless.SDL2.  ## 1.1.513 - 2023-01-06 ### Fixed: - Ava GUI: SettingsWindow Refactor.   - Refactors the settings window code on the Avalonia UI. No actual changes to the window itself.  ## 1.1.512 - 2023-01-06 ### Fixed: - chore: Update Ryujinx.SDL2-CS to 2.26.1.   - May improve compatibility with certain controllers.  ## 1.1.511 - 2023-01-04 ### Fixed: - Misc: Remove duplicated entries and clean locale csproj.   - Small code cleanup. No changes in games.  ## 1.1.508-1.1.510 - 2023-01-04 ### Fixed: - Readd Ryujinx.Ui.LocaleGenerator removed in 1.1.506.   - Fixes a regression from 1.1.506 where the project couldn't be built with Visual Studio. - hle: Add safety measure around overflow in ScheduleFutureInvocation.   - Fixes a regression from 1.1.506 that caused crashing on Linux.  ## 1.1.507 - 2023-01-04 ### Fixed: - Make PPTC state non-static.   - Allows PPTC to be used when the JIT service is loaded, improving loading in Super Mario 64, N64 NSO emulator games and any other games that use this service.  ## 1.1.506 - 2023-01-04 ### Fixed: - IPC refactor part 3+4: New server HIPC message processor.   - Cleans up service implementations and opens the possibility for performance improvements in future changes to services. No known changes in games.  ## 1.1.505 - 2023-01-04 ### Fixed: - Update Locale files.   - Updates Avalonia UI language files with the latest changes from Crowdin.  You can help with missing translations on https://crwd.in/ryujinx  ## 1.1.504 - 2023-01-03 ### Fixed: - Avalonia - Add source generator for locale items.   - Makes it easier to manage localization code for the Avalonia GUI. No changes to actual UI functionality.  ## 1.1.503 - 2023-01-02 ### Fixed: - misc: Use official names for NVDEC registers.   - No changes to emulator functionality.  ## 1.1.502 - 2023-01-01 ### Fixed: - chore: Update tests dependencies.   - No changes to emulator functionality.  ## 1.1.501 - 2023-01-01 ### Fixed: - Fix typo in left joycon SL binding.   - Left SL button was incorrectly labeled as Right SL button.  ## 1.1.500 - 2022-12-29 ### Fixed: - Filter hidden game files from the Game List.   - On the next macOS release, removes \"._\" files from the games list.  ## 1.1.499 - 2022-12-29 ### Fixed: - Use vector outputs for texture operations.   - May improve performance in certain games on integrated GPUs, and on dedicated GPUs when using resolution scaling.  ## 1.1.498 - 2022-12-29 ### Fixed: - HLE: Add basic stubs to get Labo VR booting to title screen.   - Allows Nintendo Labo Toy-Con 04: VR Kit to boot.  ## 1.1.497 - 2022-12-29 ### Fixed: - Vulkan: Don't flush commands when creating most sync.   - Improves Vulkan performance in Pok\u00e9mon Scarlet/Violet, The Legend of Zelda: Breath of the Wild, Xenoblade Chronicles Definitive Edition and Xenoblade Chronicles 3.     - Xenoblade DE and 3 should now perform better on Vulkan than on OpenGL.  ## 1.1.496 - 2022-12-29 ### Fixed: - Ava GUI: Restructure Ryujinx.Ava.   - Code cleanup of the Avalonia project. No changes to emulator functionality.  ## 1.1.495 - 2022-12-29 ### Fixed: - Fix for not receiving any SDL events on Linux using Headless build.  ## 1.1.494 - 2022-12-28 ### Fixed: - haydn: Add support for PCMFloat, PCM32 and PCM8 conversions.   - Improves SoundIO compatibility with audio devices that don't expose PCM16.  ## 1.1.493 - 2022-12-26 ### Fixed: - Use new ArgumentNullException and ObjectDisposedException throw-helper API.   - Small .NET code optimizations. No known changes in games.  ## 1.1.492 - 2022-12-26 ### Fixed: - GPU: Add fallback when 16-bit formats are not supported.   - On the next macOS release, fixes \"ErrorFormatNotSupported\" crashes in Ni no Kuni Wrath of the White Witch, Super Kirby Clash, Vroom in the Night Sky and Ys VIII: Lacrimosa of Dana. Only affects Intel Macs.  ## 1.1.491 - 2022-12-26 ### Fixed: - Added Generic Math to BitUtils.   - Small .NET code optimizations. No known changes in games.   ## 1.1.490 - 2022-12-26 ### Fixed: - bsd::RecvFrom: verify output buffer size before writing socket address.   - Verifies output buffer size (sockAddrOutSize) is non zero before writing socket address. No known changes in games.   ## 1.1.489 - 2022-12-24 ### Fixed: - Some minor cleanups and optimizations.   - No known changes to emulator functionality.   ## 1.1.488 - 2022-12-21 ### Fixed: - Implement a software ETC2 texture decoder.   - Implements a software decoder to decompress ETC2 textures on CPU when the format is not supported on the GPU.   - Fixes crashes in Infinity Tanks World War 2, Paradigm Paradox, Vegas Party and any other game that presented an ETC2 format error when using Vulkan with Nvidia and AMD GPUs.   ## 1.1.487 - 2022-12-21 ### Fixed: - Fix CPU FCVTN instruction implementation (slow path).   - Fixes an issue on 2nd gen Intel CPUs and older that caused misaligned text on Two Point Campus and possibly other games.  ## 1.1.486 - 2022-12-21 ### Fixed: - GPU: Force rebind when pool changes.   - Fixes graphical issues on character images in \"The New Prince of Tennis: LET'S GO!! ~Daily Life~ from RisingBeat\".  ## 1.1.485 - 2022-12-21 ### Fixed: - Make UI display correct content in Chinese.   - Fixes an issue where games wouldn't display the correct title or icon on the games list when system language was set to Chinese.  ## 1.1.484 - 2022-12-21 ### Fixed: - hle: Handle GPU profiler and debugger device path correctly.   - Fixes log warnings in Doukoku Soshite (\u615f\u54ed\u305d\u3057\u3066\u2026).  ## 1.1.483 - 2022-12-21 ### Fixed: - Fix DrawArrays vertex buffer size.   - Fixes vertex explosions in Sphinx and the Cursed Mummy on OpenGL.  ## 1.1.482 - 2022-12-20 ### Fixed: - ARMeilleure: Hash _data pointer instead of value for Operand.   - May slightly improve how long it takes to boot any given game for the first time.  ## 1.1.481 - 2022-12-19 ### Fixed: - Avalonia - Fix software keyboard row collision.   - Fixes an issue where placeholder text would not go away when typing on the software keyboard applet on Avalonia.  ## 1.1.480 - 2022-12-19 ### Fixed: - Eliminate zero-extension moves in more cases on 32-bit games.   - Small code cleanup. May affect 32-bit games, though no changes are known.  ## 1.1.479 - 2022-12-18 ### Fixed: - Revert \"ARMeilleure: Add initial support for AVX512(EVEX encoding)\".   - Reverted due to a regression causing black screens on CPUs that support AVX-512.  ## 1.1.478 - 2022-12-18 ### Added: - ARMeilleure: Add initial support for AVX512(EVEX encoding).   - Implements enough of the EVEX encoding features to utilize AVX512 instructions for a 128-bit register use-case. Further changes are required for CPUs with AVX-512 support to have a notable performance improvement.  ## 1.1.477 - 2022-12-18 ### Fixed: - hle: Fix wrong conversion in UserPresence.ToString.   - Fixes the bell sound when entering Time Trials in Mario Kart 8 Deluxe.  ## 1.1.476 - 2022-12-16 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 17.4.0 to 17.4.1.   - Updates Microsoft.NET.Test.Sdk. No changes to emulator functionality.  ## 1.1.475 - 2022-12-16 ### Fixed: - Implement another non-indexed draw method on GPU.   - Fixes rendering in Ikaruga.  ## 1.1.474 - 2022-12-16 ### Fixed: - GPU: Fix layered attachment write.   - Fixes a regression introduced in 1.1.418 that broke the crowd rendering in Mario Strikers: Battle League.  ## 1.1.473 - 2022-12-15 ### Fixed: - Avalonia: Fix invisible swkbd applet on Linux.   - The software keyboard applet is now visible again on Avalonia on Linux systems.  ## 1.1.472 - 2022-12-15 ### Fixed: - Replace DllImport usage with LibraryImport.   - Code improvement, required for NativeAOT support. No known changes in games.  ## 1.1.471 - 2022-12-15 ### Fixed: - Fix NRE when loading Vulkan shader cache with Vertex A shaders.   - Fixes a regression that caused Catherine to crash on boot when loading the shader cache.  ## 1.1.470 - 2022-12-14 ### Fixed: - Remove Half Conversion.   - Code improvement. No known changes in games.  ## 1.1.469 - 2022-12-14 ### Fixed: - Vulkan: enable VK_EXT_custom_border_color features.   - Only create a custom border color if the feature is supported and enabled.   - Fixes Vulkan crashes in Super Smash Bros. Ultimate, Xenoblade Chronicles 2 and other titles when using RADV on Linux.  ## 1.1.468 - 2022-12-12 ### Added: - Bsd: Add support for dns_mitm.   - Allows for simple DNS redirection, which is used by some mods.  ## 1.1.467 - 2022-12-12 ### Fixed: - misc: Update to Ryujinx.Graphics.Nvdec.Dependencies 5.0.1-build13.   - Fixes packaging issues on macOS related to an unsatisfied dependency on libX11.  ## 1.1.466 - 2022-12-12 ### Fixed: - Use NuGet Central Package Management to manage package versions solution-wise.   - Makes version management easier for all dependencies. No changes to emulator functionality.   ## 1.1.465 - 2022-12-12 ### Fixed: - misc: Some fixes to the updaters.   - Fixes command line being broken when updating on Avalonia.   - Makes the Avalonia updater fallback to the GTK Ryujinx executable if current name isn't found.   - Makes permission setter function more generic.   - Remove direct usage of chmod to use File.SetUnixFileMode.  ## 1.1.464 - 2022-12-12 ### Fixed: - Fix \"UI\" abbreviation being miscapitalized.  ## 1.1.463 - 2022-12-12 ### Fixed: - Use method overloads that support trimming. Mark some types to be trimming friendly.   - Code cleanup. No changes to emulator functionality.  ## 1.1.462 - 2022-12-12 ### Added: - Bsd: Implement Select.   - Allows LAN mode to function in Saints Row: The Third and Saints Row IV.   - Just Die Already now goes in-game.  ## 1.1.461 - 2022-12-10 ### Fixed: - audio: Rewrite SoundIo bindings.   - Code cleanup. No changes to emulator functionality.  ## 1.1.460 - 2022-12-10 ### Fixed: - Fix Lambda Explicit Type Specification Warnings.   - Code cleanup. No changes to emulator functionality.  ## 1.1.459 - 2022-12-10 ### Fixed: - Fix Redundant Qualifer Warnings.   - Code cleanup. No changes to emulator functionality.  ## 1.1.458 - 2022-12-09 ### Fixed: - Fix HasUnalignedStorageBuffers value when buffers are always unaligned.   - Fixes a regression introduced in 1.1.419 that caused NieR Automata: The End of YoRHa Edition to crash when loading into gameplay.  ## 1.1.457 - 2022-12-09 ### Fixed: - Add explicit dependency on System.Drawing.Common on Ryujinx.Ava to workaround trimming bugs.   - Fixes Avalonia builds crashing on startup since 1.1.456.  ## 1.1.456 - 2022-12-09 ### Fixed: - misc: Remove dependency on System.Drawing.Common.   - Removes System.Drawing.Common, which was used only once for DPI scaling factor, and implements the same behaviour using gdiplus. Reduces emulator size slightly.  ## 1.1.455 - 2022-12-09 ### Fixed: - Add concurrency restriction on release workflows.   - Allows merging multiple pull requests without needing to wait for them to build.   ## 1.1.454 - 2022-12-09 ### Fixed: - misc: Update Ryujinx.Graphics.Nvdec.Dependencies to 5.0.1-build12   - Updates ffmpeg dependencies to support Linux x64 and macOS.  ## 1.1.453 - 2022-12-09 ### Fixed: - ava: Restyle the Status Bar.   - Some tweaks to the Avalonia status bar where performed (fonts and margin adjustments)   - Game selector height was increased.  ## 1.1.452 - 2022-12-09 ### Fixed: - nuget: bump CommandLineParser from 2.8.0 to 2.9.1.   - Updates CommandLineParser. No changes to emulator functionality.  ## 1.1.451 - 2022-12-08 ### Fixed: - Fix shader FSWZADD instruction.   - Fixes text rendering in Just Dance 2023, The Stanley Parable: Ultra Deluxe, and possibly other games.   - Fixes transparency issues in Two Point Campus.   - Fixes layering issues in OlliOlli World.   ## 1.1.450 - 2022-12-08 ### Fixed: - Shader: Implement PrimitiveID.   - Fixes overly dark lighting in Dark Souls Remastered.  ## 1.1.449 - 2022-12-08 ### Fixed: - Fix inconsistent capitalization.   - Fixes a typo.  ## 1.1.448 - 2022-12-07 ### Fixed: - acc: Stub CheckNetworkServiceAvailabilityAsync.   - Allows Hulu to boot.  ## 1.1.447 - 2022-12-07 ### Fixed: - nuget: bump DynamicData from 7.12.8 to 7.12.11.   - Updates DynamicData. No changes to emulator functionality.  ## 1.1.446 - 2022-12-07 ### Fixed: - nuget: bump NUnit from 3.12.0 to 3.13.3.   - Updates NUnit. No changes to emulator functionality.  ## 1.1.445 - 2022-12-07 ### Added: - Add Ryujinx license to builds.   - Adds Ryujinx license information file to emulator builds.  ## 1.1.444 - 2022-12-07 ### Fixed: - nuget: bump System.Drawing.Common from 6.0.0 to 7.0.0.   - Updates System.Drawing.Common. No changes to emulator functionality.  ## 1.1.443 - 2022-12-07 ### Fixed: - hle: Do not add disabled AoC item to the list.   - Fixes an issue that caused Mario Kart 8 Deluxe to not work properly when older DLC was disabled but not removed on the DLC list.  ## 1.1.442 - 2022-12-06 ### Fixed: - macOS: Fix Struct Layout Packing.   - Fix struct layout packing so more tests can run on macOS.  ## 1.1.441 - 2022-12-06 ### Fixed: - gtk: Fixes warnings about obsolete components.   - Removes some warnings from the GTK UI.  ## 1.1.440 - 2022-12-06 ### Fixed: - Shader: Add fallback for LDG from \"ube\" buffer ranges.   - Fixes grass particles in the wind in The Legend of Zelda: Breath of the Wild. May fix similar issues in other games.  ## 1.1.439 - 2022-12-06 ### Fixed: - UI: Add Metal surface creation for MoltenVK.   - Required for basic graphics rendering on macOS.  ## 1.1.438 - 2022-12-06 ### Fixed: - nuget: bump XamlNameReferenceGenerator from 1.4.2 to 1.5.1.   - Updates XamlNameReferenceGenerator. No changes to emulator functionality.  ## 1.1.437 - 2022-12-06 ### Fixed: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.25.0 to 6.25.1.   - Updates System.IdentityModel.Tokens.Jwt. No changes to emulator functionality.  ## 1.1.436 - 2022-12-06 ### Fixed: - ava: Cleanup Input classes.   - Code cleanup. No changes to emulator functionality.  ## 1.1.435 - 2022-12-06 ### Added: - amadeus: Add missing compressor effect from REV11.   - No games are known to use this effect for now.  ## 1.1.434 - 2022-12-05 ### Fixed: - Fix storage buffer access when match fails.   - Fixes a regression from 1.1.430 that caused scanlines on save file icons and occasional black textures in Xenoblade Chronicles Definitive Edition.  ## 1.1.433 - 2022-12-05 ### Fixed: - Change default Vsync toggle hotkey to F1 instead of Tab.   - The default \"toggle Vsync\" (uncap/cap framerate) hotkey is now F1 and not Tab. Should help with users accidentally turning it off when alt-tabbing.  ## 1.1.432 - 2022-12-05 ### Fixed: - nuget: bump Microsoft.CodeAnalysis.CSharp from 4.2.0 to 4.4.0.   - Updates Microsoft.CodeAnalysis.CSharp. No changes to emulator functionality.  ## 1.1.431 - 2022-12-05 ### Fixed: - Fix Sorting Regression.   - Fixes a regression introduced in 1.1.428 that caused the games list to disappear.  ## 1.1.430 - 2022-12-05 ### Fixed: - Fix shaders with global memory access from unknown locations.   - Fixes a regression from 1.1.427 that caused Mario Golf Super Rush (and possibly others) to crash.  ## 1.1.429 - 2022-12-05 ### Fixed: - Update 'OpenGL Log Level' to 'Graphics Backend Log Level'.   - Renames the OpenGL logging option to properly reflect that it relates to both backends.  ## 1.1.428 - 2022-12-05 ### Fixed: - Ava GUI: Several UI Fixes.   - Adjusts styles and UI elements to more closely match WinUI theming.   - Adjusts how playtime is represented to hours and minutes.   - Type boxes and other focusable elements now defocus when empty-space is selected.  ## 1.1.427 - 2022-12-05 ### Fixed: - Restrict shader storage buffer search when match fails.   - May help avoid an error on macOS in the future. No known changes in games.  ## 1.1.426 - 2022-12-05 ### Fixed: - Make structs readonly when applicable.   - Code cleanup. No changes to emulator functionality.  ## 1.1.425 - 2022-12-05 ### Fixed: - misc: Fix obsolete warnings in Ryujinx.Graphics.Vulkan.   - No changes to emulator functionality.  ## 1.1.424 - 2022-12-05 ### Fixed: - nuget: bump Microsoft.NET.Test.Sdk from 16.8.0 to 17.4.0.   - Updates Microsoft.NET.Test.Sdk. No changes to emulator functionality.  ## 1.1.423 - 2022-12-04 ### Added: - Add InfoType.MesosphereCurrentProcess.   - Allows exefs replacement mods and homebrew to easily get their own process handle for use with certain SVCs, such as MapProcessMemory.  ## 1.1.422 - 2022-12-04 ### Fixed: - ui: Disallow checking for updates while emulation active.   - Disables \"check for updates\" option while a game is running.  ## 1.1.421 - 2022-12-04 ### Fixed: - Allow SNorm buffer texture formats on Vulkan.   - Used by most UE4 games, though not known to affect any of them at the moment.  ## 1.1.420 - 2022-12-04 ### Fixed: - Implement non-MS to MS copies with draws.   - Required by Apple Silicon GPUs. No known changes in games.  ## 1.1.419 - 2022-12-04 ### Fixed: - GPU: Use lazy checks for specialization state.   - Improves performance slightly in Super Mario Odyssey and possibly other games.  ## 1.1.418 - 2022-12-04 ### Fixed: - GPU: Swap bindings array instead of copying.   - Improves performance slightly in Super Mario Odyssey and possibly other games.  ## 1.1.417 - 2022-12-03 ### Fixed: - Use source generated regular expressions.   - Code cleanup. No changes in games.  ## 1.1.416 - 2022-12-03 ### Fixed: - Support logging available memory on macOS.   - Available RAM will be shown on macOS logs on the next macOS update.  ## 1.1.415 - 2022-12-02 ### Fixed: - Fix using in Ava.   - Fixes an oversight in the Avalonia code that caused 1.1.414 not to compile.  ## 1.1.414 - 2022-12-02 ### Fixed: - SDL2Driver: Invoke dispatcher on main thread.   - Required for macOS. No expected changes in games.  ## 1.1.413 - 2022-12-02 ### Fixed: - Avalonia - Save Manager.   - Adds a save manager to the Avalonia UI under Options &gt; Manage User Profiles.   - Allows for easy file deletion and quick save folder opening.   - Adds an option to restore lost user profiles using existing saves.  ## 1.1.412 - 2022-12-02 ### Fixed: - amadeus: Fix wrong SendCommands logic.   - May help games with audio desyncs.  ## 1.1.411 - 2022-12-02 ### Fixed: - Ava GUI: Add back locales removed in #3955.   - Adds back \"SettingsButtonSave\" &amp; \"SettingsButtonClose\" removed in 1.1.410.   - Fixes \"Close\" showing as \"SettingsButtonClose\" on the  Avalonia UI.  ## 1.1.410 - 2022-12-01 ### Fixed: - Ava GUI: Make Dialogue More Intuitive.   - Renames \"Save\" to \"OK\" and \"Close\" to \"Cancel\".   - Layout of buttons adjusted to establish a clearer visual hierarchy (adapts to match OS).   - \"OK\" is now bound to Enter and the button is highlighted.   - \"Cancel\" is now bound to Escape.  ## 1.1.409 - 2022-12-01 ### Fixed: - Revert \"nuget: bump SixLabors.ImageSharp from 1.0.4 to 2.1.3 (#3976)\".   - Reverts the previous change.  ## 1.1.408 - 2022-12-01 \u26a0\ufe0f This build has been removed. ### Fixed: - nuget: bump SixLabors.ImageSharp from 1.0.4 to 2.1.3.   - Updates SixLabors.ImageSharp dependencies. No changes to emulator functionality.  ## 1.1.407 - 2022-12-01 ### Fixed: - chore: Update Silk.NET to 2.16.0.   - Updates Silk.NET dependencies and Vulkan extensions. No changes to emulator functionality.  ## 1.1.406 - 2022-12-01 ### Fixed: - Better SDL2 Audio Init Error Logging.   - Adds an error to the log when SDL2 fails to initialize.   ## 1.1.405 - 2022-12-01 ### Fixed: - GPU: Track buffer migrations and flush source on incomplete copy.   - Fixes most cases of vertex explosions in Pok\u00e9mon Scarlet/Violet.   - Fixes device loss crashes and possibly vertex explosions in Xenoblade Chronicles 3 on Vulkan, ONLY if shader caches from before this change are purged beforehand.   ## 1.1.404 - 2022-12-01 ### Fixed: - infra: Add distribution files for macOS.   - Upstreams macOS packing and distribution files.  ## 1.1.403 - 2022-11-30 ### Fixed: - Avalonia: Clean up leftover RenderTimer &amp; Fix minimum and initial window size.   - Black bars will no longer show on the default window size on Avalonia.   - Framerate on the Avalonia UI is no longer limited (does not affect games).   ## 1.1.402 - 2022-11-30 ### Fixed: - nuget: bump DiscordRichPresence from 1.0.175 to 1.1.3.18.   - Updates DiscordRichPresence dependencies. No changes to emulator functionality.  ## 1.1.401 - 2022-11-30 ### Fixed: - Remove shader dependency on SPV_KHR_shader_ballot and SPV_KHR_subgroup_vote extensions.   - Required for MoltenVK. No changes in games.  ## 1.1.400 - 2022-11-30 ### Fixed: - Ensure that vertex attribute buffer index is valid on GPU.   - Fixes some crashes on Vulkan on Intel and AMD graphics cards. It's currently unknown which games are affected.  ## 1.1.399 - 2022-11-29 ### Fixed: - nuget: bump System.Management from 6.0.0 to 7.0.0.   - Updates System.Management to 7.0.0. No changes to emulator functionality.  ## 1.1.398 - 2022-11-29 ### Fixed: - ConcurrentBitmap: Use Interlocked Or/And.   - Code cleanup. No changes to emulator functionality.  ## 1.1.397 - 2022-11-29 ### Fixed: - chore: Update OpenTK to 4.7.5.   - Updates OpenTK dependencies. No changes to emulator functionality.  ## 1.1.396 - 2022-11-29 ### Fixed: - Avalonia: Update FluientAvalonia   - Make dialogs work on Linux with Avalonia making it usable on it again.  ## 1.1.395 - 2022-11-28 ### Fixed: - GPU: Always draw polygon topology as triangle fan.   - Fixes the stats chart in Pok\u00e9mon Legends Arceus and Pok\u00e9mon Scarlet/Violet on Vulkan and on certain OpenGL drivers that don't support GL_POLYGON in compatibility mode.  ## 1.1.394 - 2022-11-28 ### Fixed: - amadeus: Fixes and initial 15.0.0 support.   - Fixes crashes in Ninja Gaiden Sigma 2, Ninja Gaiden 3: Razor's Edge and Paper Mario: The Origami King.   - Fixes broken audio in Crash Team Racing Nitro-Fueled.   - Fix Delay effect wrong variable usage for matrix transform on Stereo, Quadraphonic and Surround codepaths.   - Update Delay effect Surround matrix to support REV11 optimization.   - Change voice drop logic to use 32 bits integer to be closer to real firmware. Might fix voice drop issues on some games.   - Add voice drop parameter support that was introduced in 15.0.0.   - Accurately stub ExecuteAudioRendererRendering.  ## 1.1.393 - 2022-11-27 ### Fixed: - sfdnsres: Fix deserializer of AddrInfoSerialized when addresses are empty.   - Allows the Homebrew App Store to boot.  ## 1.1.392 - 2022-11-27 ### Fixed: - bsd: Fix eventfd broken logic.   - Required for Pok\u00e9mon Legends Arceus 1.1.1 to boot with Guest Internet Access enabled, though more changes are necessary for this.  ## 1.1.391 - 2022-11-27 ### Fixed: - HLE: fix small issue in IPsmSession.   - Fixes small logic error in the Psm service. No known changes in games.  ## 1.1.390 - 2022-11-26 ### Fixed: - Avalonia: Fix OpenGL crashing on Linux.   - Fixes a regression from 1.1.389 that caused Avalonia to crash on Linux when using OpenGL.  ## 1.1.389 - 2022-11-25 ### Fixed: - Avalonia: Fix invisible Vulkan window on Linux.   - Fixes the Avalonia rendering window being invisible when using Vulkan on Linux.  ## 1.1.388 - 2022-11-25 ### Fixed: - ava: Refactor Title Update Manager window.   - The Title Update Manager on Avalonia is now redone to be consistent with the changes in 1.1.385.   - Fixes an issue where trying to scroll with a mouse wheel would expand the window instead, this time for real.  ## 1.1.387 - 2022-11-25 ### Fixed: - Fix CB0 alignment with addresses used for 8/16-bit LDG/STG.   - Fixes a regression introduced in 1.1.355 that caused Xenoblade 3 videos to be more pixelated than normal.  ## 1.1.386 - 2022-11-25 ### Fixed: - chore: Update Avalonia related dependencies.   - Updates Avalonia dependencies. No changes to emulator functionality.  ## 1.1.385 - 2022-11-25 ### Fixed: - ava: Rework DLC Manager, add various fixes and cleanup.   - The DLC Manager on Avalonia is completely redone to enhance the user experience.   - Fixes an issue where trying to scroll with a mouse wheel on a list with multiple DLCs would expand the window instead.   - The game list will now wait 1 second after a keyword is typed to search for a game. Previously it would refresh on each keystroke, taking too long to load on big lists.   - Updates are now selected automatically when added to the Title Update Manager.   - After deleting a game directory in settings, the next one will be automatically selected.  ## 1.1.384 - 2022-11-24 ### Fixed: - nuget: bump SharpZipLib from 1.3.3 to 1.4.1.   - Updates the SharpZipLib package version. No changes to emulator functionality.  ## 1.1.383 - 2022-11-24 ### Fixed: - chore: Update Ryujinx.SDL2-CS to 2.24.2.   - May improve controller compatibility or sound issues in some games.     - Controller bindings may need to be reconfigured after this update.  ## 1.1.382 - 2022-11-24 ### Fixed: - GPU: Don't trigger uploads for redundant buffer updates.   - Improves performance in Xenoblade Chronicles: Definitive Edition and The Legend of Zelda: Link's Awakening on Vulkan.  ## 1.1.381 - 2022-11-24 ### Fixed: - Reduce usage of Marshal.PtrToStructure and Marshal.StructureToPtr.   - Code cleanup. No expected changes to emulator functionality.  ## 1.1.380 - 2022-11-24 ### Fixed: - ui: Fixes disposing on GTK/Avalonia and Firmware Messages on Avalonia.   - Fixes an issue where opening a game without installed firmware and then selecting the \"OK\" or \"Open the Setup Guide\" options would crash Ryujinx.  ## 1.1.379 - 2022-11-24 ### Fixed: - Ryujinx.Ava: Add missing redefinition of app name.   - Fixes an issue where Ryujinx could sometimes report as \"Avalonia Application\".  ## 1.1.378 - 2022-11-24 ### Fixed: - Fix NRE on Avalonia for error applets with unknown error message.   - Fixes an issue where unknown errors would crash Avalonia.  ## 1.1.377 - 2022-11-24 ### Fixed: - GAL: Send all buffer assignments at once rather than individually.   - Improves performance significantly in Pok\u00e9mon Scarlet/Violet, Super Mario Odyssey, Super Smash Bros. Ultimate and any other games that tend to bind many constant buffers at once.  ## 1.1.376 - 2022-11-23 ### Fixed: - GPU: Access non-prefetch command buffers directly.   - Improves performance slightly in Pok\u00e9mon Scarlet/Violet and Super Mario Odyssey.  ## 1.1.375 - 2022-11-23 ### Fixed: - GPU: Relax locking on Buffer Cache.   - Improves performance in Super Mario Odyssey and possibly other games with high FIFO.  ## 1.1.374 - 2022-11-23 ### Fixed: - nuget: bump Avalonia from 0.10.15 to 0.10.18.   - Updates the Avalonia package version. No changes to emulator functionality.  ## 1.1.373 - 2022-11-23 ### Fixed: - ava: Fix JsonSerializer warnings.   - Fixes some warnings in the Avalonia project. No changes to emulator functionality.  ## 1.1.372 - 2022-11-23 ### Fixed: - Update to LibHac 0.17.0.   - Fixes an issue where Ryujinx would delete the Save folder in the sdcard directory after booting.   - Improves filesystem emulation stability.  ## 1.1.371 - 2022-11-23 ### Fixed: - Stub IFriendService: 1 (Cancel).   - Allows SnowRunner to proceed past the title screen.  ## 1.1.370 - 2022-11-23 ### Fixed: - Avalonia - Fix controller insertion crash.   - Fixes a crash that occurred when connecting a new controller while the settings window was open on Avalonia.  ## 1.1.369 - 2022-11-21 ### Fixed: - Do not update shader state for DrawTextures.   - Fixes a crash in A Hat in Time that occurred in certain places.  ## 1.1.368 - 2022-11-20 ### Fixed: - Use upstream unicorn for Ryujinx.Tests.Unicorn.   - CPU tests can now be executed on Linux. No changes in games.  ## 1.1.367 - 2022-11-20 ### Fixed: - Reword the description of the 6GB expand DRAM hack to be less tantalizing.   - \"Expand DRAM Size to 6GiB\" is now named \"Use alternative memory layout (Developers)\".   ## 1.1.366 - 2022-11-19 ### Fixed: - Unsubscribe MemoryUnmappedHandler even when GPU channel is destroyed.   - Fixes a regression introduced in 1.1.361 that caused World of Light to crash in Super Smash Bros. Ultimate.   ## 1.1.365 - 2022-11-19 ### Fixed: - Fix shader cache on Vulkan when geometry shaders are inserted.   - Fixes a crash when loading the shader cache on Vulkan on GPUs affected by 1.1.364 in Pok\u00e9mon Scarlet/Violet.   ## 1.1.364 - 2022-11-18 ### Fixed: - Move gl_Layer from vertex to geometry if GPU does not support it on vertex.   - Fixes a crash during boot on Vulkan and a black screen on OpenGL when using Maxwell and older Nvidia GPUs in Pok\u00e9mon Scarlet/Violet.   ## 1.1.363 - 2022-11-18 ### Fixed: - Vulkan: Clear dummy texture to (0,0,0,0) on creation.   - Fixes an issue with AMD GPUs on Linux that caused colored filters to appear over the screen in Pok\u00e9mon Scarlet/Violet when using Vulkan.   ## 1.1.362 - 2022-11-18 ### Fixed: - GPU: Fix thread safety of ReregisterRanges.   - Fixes some crashes in Pok\u00e9mon Scarlet/Violet.    - May fix similar issues in Pok\u00e9mon Sword/Shield and possibly other games.  ## 1.1.361 - 2022-11-18 ### Fixed: - Prune ForceDirty and CheckModified caches on unmap.   - Fixes a regression that would degrade performance over time in Super Mario Odyssey. - Vulkan: Don't create preload command buffer outside a render pass.   - Improves performance in Pok\u00e9mon Scarlet/Violet.  ## 1.1.359 - 2022-11-17 ### Fixed: - am: Stub GetSaveDataSizeMax.   - Allows Football Manager 2023 Touch to boot.  ## 1.1.358 - 2022-11-17 ### Added: - Use ReadOnlySpan compiler optimization in more places.   - Small code optimization. No known changes in games.  ## 1.1.357 - 2022-11-17 ### Fixed: - Allow _volatile to be set from MultiRegionHandle checks again.   - Fixes performance regressions from 1.1.335 that affected Pok\u00e9mon Sword/Shield, Yu-Gi-Oh! Rush Duel: Dawn of the Battle Royale and possibly other games.  ## 1.1.356 - 2022-11-17 ### Fixed: - SPIR-V: Fix unscaling helper not being able to find Array textures.   - Fixes broken ground textures in Pok\u00e9mon Scarlet/Violet when using resolution scaling.   - Fixes upscaling on exploding bubbles in Bubble Bobble and spawn spheres and other effects in Rune Factory 5.  ## 1.1.355 - 2022-11-17 ### Fixed: - GPU: Eliminate CB0 accesses when storage buffer accesses are resolved.   - Improves performance significantly in Xenoblade Chronicles Definitive Edition on Vulkan.   - Improves performance in Xenoblade 2 and Xenoblade 3 on Vulkan, and in Definitive Edition on OpenGL.   - Improves performance in Pok\u00e9mon Scarlet/Violet and possibly other games.  ## 1.1.354 - 2022-11-17 ### Fixed: - ci: Clean up Actions leftovers.   - Fixes Avalonia build versions for pull requests.   - Ensures that the \"--self-contained\" doesn't warn at build.  ## 1.1.353 - 2022-11-17 ### Fixed: - Capitalization to be consistent.   - Small grammar changes.  ## 1.1.352 - 2022-11-17 ### Fixed: - Allow to start Ryujinx in Wayland environment.   - Allows Ryujinx to start in Wayland environment, ignoring code to retrieve monitor dimensions.  ## 1.1.351 - 2022-11-16 ### Fixed: - Fix Fedora support.   - Fixes Fedora Linux not having a symlink for libX11.so by attempting to import it by version.  ## 1.1.350 - 2022-11-16 ### Fixed: - Prevent raw Unicode control codes from showing on software keyboard applet.   - Fixes some formatting errors on the software keyboard applet.  ## 1.1.349 - 2022-11-16 ### Fixed: - Update units of memory from decimal to binary prefixes.   - Changes \"GB\" to \"GiB\" and \"MB\" to \"MiB\" on the UI and the rest of the code.  ## 1.1.348 - 2022-11-16 ### Fixed: - Use new C# 11 UTF-8 string literals.   - Small code optimization. No known changes in games.  ## 1.1.347 - 2022-11-16 ### Fixed: - Make use of Random.Shared.   - Small code optimization. No known changes in games.  ## 1.1.346 - 2022-11-16 ### Fixed: - Use new LINQ Order() methods.   - Small code optimization. No known changes in games.  ## 1.1.345 - 2022-11-16 ### Added: - Implement HLE macro for DrawElementsIndirect.   - Adds an \"Enable Macro HLE\" option to graphics settings, enabled by default.    - When enabled, improves performance on Monster Hunter Rise, NieR Automata: The End of YoRHa Edition, Nintendo Switch Sports (not yet playable) and possibly other games.  ## 1.1.344 - 2022-11-15 ### Fixed: - GTK: It's REE-YOU-JINX.   - Corrects the pronunciation guide in the GTK UI's \"about\" page.  ## 1.1.343 - 2022-11-12 ### Fixed: - UI: Allow overriding graphics backend + Move command line parser into a new class.   - Adds a new command line option \"-g/--graphics-backend\" which allows to override the previously configured graphics backend value on launch.   - Command line arguments are now kept when Avalonia restarts (except for the overridden graphics backend).   - Reduces the amount of duplicate code between GTK and Avalonia.  ## 1.1.342 - 2022-11-12 ### Fixed: - Use vector transform feedback outputs if possible.   - Fixes grass rendering in Xenoblade Chronicles Definitive Edition on Vulkan on Intel GPUs.    - May fix similar issues in Pokk\u00e9n Tournament or the Xenoblade games on AMD and/or Intel GPUs.  ## 1.1.341 - 2022-11-11 ### Fixed: - Fix VertexId and InstanceId on Vulkan.   - Fixes incorrect rendering in Pok\u00e9mon Mystery Dungeon Rescue Team DX on Vulkan on Intel GPUs.   - May fix similar issues in Metro 2033 Redux, Sniper Elite 3 and others.   ## 1.1.340 - 2022-11-10 ### Fixed: - Minor improvement to Vulkan pipeline state and bindings management.   - No known changes in games.  ## 1.1.339 - 2022-11-09 ### Changed: - infra: Migrate to .NET 7   - Update project to .NET 7 and enable TieredPGO.   - Possible performance improvements up to 15% in .NET runtime limited scenarios.  ## 1.1.338 - 2022-11-03 ### Fixed: - Ensure all pending draws are done before compute dispatch.   - Nights of Azure 2: Bride of the New Moon now works on Vulkan.  ## 1.1.337 - 2022-11-02 ### Fixed: - Vulkan: Implement multisample &lt;-&gt; non-multisample copies and depth-stencil resolve.   - Fate/Extella: The Umbral Star now works on Vulkan on Nvidia and Intel GPUs.    - Sonic Colors: Ultimate now works on Vulkan on Intel GPUs.  ## 1.1.336 - 2022-11-02 ### Fixed: - fix: Support FFmpeg 5.1.x for decoding.   - FFmpeg 5.1+ now plays pre-rendered videos properly on Linux.  ## 1.1.335 - 2022-10-29 ### Fixed: - GPU: Use a bitmap to track buffer modified flags.   - Improves performance significantly (up to 500%) on Bayonetta 3, Mario + Rabidds Kingdom Battle, Mario + Rabbids Sparks of Hope, Monster Hunter Rise, Super Mario 3D All-Stars (Sunshine and Galaxy), Zombie Army 4: Dead War and possibly other games.   ## 1.1.334 - 2022-10-29 ### Fixed: - CI: Fix windows builds missing SourceRevisionId.   - Windows PR builds will now have version IDs again.   ## 1.1.333 - 2022-10-29 ### Fixed: - Vulkan: Replace VK_EXT_debug_report usage with VK_EXT_debug_utils.   - No expected changes.   ## 1.1.332 - 2022-10-29 ### Fixed: - SPIR-V: Fix tessellation control shader output types.   - Fixes crashes on AMD GPUs running Vulkan on Windows in Bayonetta 3 (after the chapter 1 cutscene) and Luigi's Mansion 3 (right before the title screen).   ## 1.1.331 - 2022-10-29 ### Added: - nuget: bump System.IdentityModel.Tokens.Jwt from 6.15.0 to 6.25.0   - Updates the JWT Token .NET dependency to version 6.25.0.   - No expected changes.  ## 1.1.330 - 2022-10-27 ### Fixed: - AppletAE: Stub SetRecordVolumeMuted.   - Fixes a crash in Bayonetta 3 when entering gameplay in the first mission.  ## 1.1.329 - 2022-10-27 ### Fixed: - hid/irs: Stub StopImageProcessorAsync.   - Stubs the StopImageProcessorAsync service.   - Prevents a crash in Game Builder Garage when exiting a game using the IR motion camera.   - Allows Nintendo Labo Toy-Con 03: Vehicle Kit to progress past the \"Make\" menu.  ## 1.1.328 - 2022-10-26 ### Fixed: - Vulkan: Fix indirect buffer barrier.   - Fixes an ErrorDeviceLost crash that could occur in Monster Hunter Rise on Nvidia drivers v522.25, and possibly some older ones, when running the game on Vulkan.   ## 1.1.327 - 2022-10-25 ### Fixed: - Vulkan: Use dynamic state for blend constants.   - Reduces memory usage and slightly speeds up Vulkan pipeline compilation in Mario Kart 8 Deluxe.  ## 1.1.326 - 2022-10-23 ### Added: - Ryujinx.Tests.Unicorn: Implement IDisposable.   - Disposes of Unicorn (CPU emulator used to test validity of ARMeilleure instructions) tests when done. No changes to emulator functionality.  ## 1.1.325 - 2022-10-23 ### Fixed: - Attempt to fix issues since github-script v6 upgrade.   - Fixes some issues with GitHub artifact creation. No changes to emulator functionality.  ## 1.1.324 - 2022-10-23 ### Fixed: - Avalonia: Use overlay dialog for controller applet.   - Fixes an issue where the controller applet was not showing properly in the Avalonia UI.  ## 1.1.323 - 2022-10-22 ### Fixed: - nuget: bump SPB from 0.0.4-build24 to 0.0.4-build27.  ## 1.1.322 - 2022-10-21 ### Fixed: - CI: Update workflows.   - Updates Github workflows to the latest version.  ## 1.1.321 - 2022-10-21 ### Fixed: - Vulkan: Fix vertex position Z conversion with geometry shader passthrough.   - Fixes black screen in Game Builder Garage on Vulkan.  ## 1.1.320 - 2022-10-19 ### Fixed: - Avalonia: update it_IT.json.   - Updates the Italian localization for the Avalonia UI.  ## 1.1.319 - 2022-10-18 ### Fixed: - Do not clear the rejit queue when overlaps count is equal to 0.   - No known changes in games.  ## 1.1.318 - 2022-10-18 ### Added: - Implement the GetSessionCacheMode in SSL service.   - No known changes in games.  ## 1.1.317 - 2022-10-18 ### Fixed: - Manage state of NfcManager.   - Fixes Amiibo scanning in Hyrule Warriors Definitive Edition.  ## 1.1.316 - 2022-10-18 ### Fixed: - Fix mapping leaks caused by UnmapView not working on Linux.   - Fixes an issue where UnmapView was failing on Linux because the flags combination being passed was invalid. No known changes in games.  ## 1.1.315 - 2022-10-18 ### Added: - A32: Implement VCVTT, VCVTB.   - Radiant Silvergun is now playable.  ## 1.1.314 - 2022-10-18 ## Added: - A64: Add fast path for Fcvtas_Gp/S/V, Fcvtau_Gp/S/V and Frinta_S/V instructions.   - May reduce stuttering and improve performance in Mario Strikers: Battle League, Mario Party Superstars and Super Smash Bros. Ultimate.  ## 1.1.313 - 2022-10-18 ### Fixed: - Avalonia: Update Polish Translation.   - Updates the Polish localization for the Avalonia UI.  ## 1.1.312 - 2022-10-18 ### Fixed: - Vulkan: Dispose TextureStorage when views hit 0 instead of immediately.   - Reduces VRAM usage in Super Mario Odyssey when running on Vulkan with higher resolution scaling values. May improve VRAM usage on other games.  ## 1.1.311 - 2022-10-18 ### Fixed: - Fix: Arguments Break when Updating.   - Command line arguments will no longer break after updating the emulator.  ## 1.1.310 - 2022-10-18 ### Fixed: - Avoid allocations in .Parse methods.   - No changes in games.  ## 1.1.309 - 2022-10-18 ### Fixed: - Vulkan: Fix blit levels/layers parameters being inverted.   - Fixes a crash before the title screen in Mario + Rabbids Kingdom Battle on Nvidia GPUs using Vulkan.  ## 1.1.308 - 2022-10-17 ### Fixed: - Fix kernel VA allocation when random allocation fails.   - Fixes an issue with random allocations that may have affected some 32-bit games, such as DoDonPachi Resurrection, although no discernible changes were observed during gameplay.  ## 1.1.307 - 2022-10-17 ### Fixed: - Avalonia - Remove on property changed call in Time Zone validation.   - Fixes an issue in the Avalonia UI where using arrow keys in an AutoCompleteTextBox (such as the timezone textbox) would select the first entry and remove all other options.  ## 1.1.306 - 2022-10-17 ### Fixed: - Implement OpenDataStorageWithProgramIndex partially.   - Immortals Fenyx Rising now boots, though it doesn't reach gameplay.   - Bit.Trip Runner, Bit.Trip Void, MLB The Show 22 and RollerCoaster Tycoon 3 now go in-game.   ## 1.1.305 - 2022-10-16 ### Fixed: - TamperMachine: Fix input mask check.   - Cheats that required pressing buttons to enable/disable them will now work.   ## 1.1.304 - 2022-10-16 ### Fixed: - Fix various issues caused by Vertex/Index buffer conversions.   - Fixes some bugs introduced in 1.1.254 and 1.1.278. No known changes in games.  ## 1.1.303 - 2022-10-16 ### Fixed: - Fix primitive count calculation for topology conversion.   - Fixes a regression that caused random triangles to appear on the map in Luigi's Mansion 3.  ## 1.1.302 - 2022-10-16 ### Fixed: - Fix phantom configured controllers.   - Fixes controllers not being disabled properly. Controller applet will no longer ask for a single controller when only one is configured.  ## 1.1.301 - 2022-10-15 ### Fixed: - Improve shader BRX instruction code generation.   - Improves the code generated for BRX instructions. No known changes in games.  ## 1.1.300 - 2022-10-15 ### Fixed: - bsd: Check if socket is bound before calling RecvFrom().   - Fixes a crash in Overpass when selecting a career mode.  ## 1.1.299 - 2022-10-10 ### Fixed: - Vulkan: Fix sampler custom border color.   - Fixes shadows in Xenoblade Chronicles 2 cutscenes when using Vulkan.  ## 1.1.298 - 2022-10-09 ### Fixed: - Fix disposed textures being updated on TextureBindingsManager.   - Fixes a fatal error crash in Crash Team Racing Nitro-Fueled when using Vulkan.  ## 1.1.297 - 2022-10-08 ### Fixed: - GPU: Pass SpanOrArray for Texture SetData to avoid copy.   - Improves performance slightly in NieR Automata: The End of Yorha Edition and UE4 games.  ## 1.1.296 - 2022-10-08 ### Fixed: - Vulkan: Fix some issues with CacheByRange.   - Fixes broken or missing geometry in eBaseball Powerful Pro Yakyuu 2022 and potentially other games that had similar issues with quads.  ## 1.1.295 - 2022-10-05 ### Fixed: - Change NvMap ID allocation to match nvservices.   - Fixes Animal Crossing: New Horizons crashing on start-up without a save file.   - Fixes other miscellaneous crashes and texture corruptions in Animal Crossing: New Horizons.    - Fixes random crashing in The Legend of Zelda: Breath of the Wild.   - Fixes random crashing when entering or exiting Pok\u00e9mon centres in Pok\u00e9mon Sword/Shield.  ## 1.1.294 - 2022-10-04 ### Fixed: - Fix memory corruption in BCAT and FS Read methods when buffer is larger than needed.   - Fixes a crash on the title screen of Sword Art Online: Alicization Lycoris, which now goes in-game.  ## 1.1.293 - 2022-10-03 ### Fixed: - Fix shader SULD (bindless) instruction using wrong register as handle.   - Fixes a regression that caused vertex explosions in Sea of Solitude: The Director's Cut.   - Fixes rendering in Shadowrun Returns.  ## 1.1.292 - 2022-10-03 ### Fixed: - Support use of buffer ranges with size 0.   - Fixes a regression from 1.1.278 that caused a crash in Fire Emblem Warriors: Three Hopes after the Blue Lions prologue ended.  ## 1.1.291 - 2022-10-03 ### Fixed: - Vulkan: Fix buffer texture storage not being updated on buffer handle reuse.   - Fixes an issue where models would randomly swap back to an old animation frame in UE4 games.  ## 1.1.290 - 2022-10-03 ### Fixed: - Avalonia - Fixes updater.   - Autoupdating will now be possible on Avalonia builds.  ## 1.1.289 - 2022-10-02 ### Fixed: - Avalonia: Fix About window not displaying translated window titles.   - \"About\" window will now have a properly translated title in different languages on the Avalonia GUI.  ## 1.1.288 - 2022-10-02 ### Fixed: - Allow Surface Flinger frame enqueue after process has exited.   - Fixes an exception that could occur in some rare cases while ending emulation.  ## 1.1.287 - 2022-10-02 ### Added: - Volume Hotkeys.   - Adds hotkeys to increase and decrease the volume by steps of 5%.   - Default is currently unbound. This can be mapped in Avalonia or via the config json file.  ## 1.1.286 - 2022-10-02 ### Added: - ARMeilleure: Add gfni acceleration.   - Implements gfni instructions to accelerate general purpose bit-shuffling.   - New instructions are useable on Intel (Icelake 2021 &amp; later) and AMD Zen 4 (2022 &amp; later) CPUs.  ## 1.1.285 - 2022-10-02 ### Fixed: - Avoid allocating unmanaged string per shader.   - No known changes in games.  ## 1.1.284 - 2022-10-02 ### Added: - fatal: Implement Service.   - No changes in games.  ## 1.1.283 - 2022-10-01 ### Fixed: - Fix incorrect tessellation inputs/outputs.   - Fixes missing graphics in The Legend of Heroes: Trails from Zero.   - Corrects ground rendering in The Witcher 3: Wild Hunt when using Vulkan.  ## 1.1.282 - 2022-09-29 ### Fixed: - Fix SSL GetCertificates with certificate ID set to All.   - Fixes a crash on launch in Life is Strange Remastered. The game is now playable.  ## 1.1.281 - 2022-09-29 ### Fixed: - Vulkan: Zero blend state when disabled or write mask is 0.   - May reduce stuttering and slightly improve performance on Intel and AMD graphics cards.  ## 1.1.280 - 2022-09-28 ### Fixed: - Fix ListOpenContextStoredUsers and stub LoadOpenContext.   - Fixes a crash when launching the games in Prinny Presents NIS Classics Volume 3: La Pucelle: Ragnarok / Rhapsody: A Musical Adventure. The games are now playable.  ## 1.1.279 - 2022-09-20 ### Fixed: - Fpsr and Fpcr freed.   - May reduce stuttering in Tony Hawk's Pro Skater 1 + 2.   - May further improve pre-rendered video playback.  ## 1.1.278 - 2022-09-20 ### Fixed: - Convert Quads to Triangles in Vulkan.   - Improves Vulkan performance in Fast RMX on Intel GPUs.   - May improve Vulkan performance in The Legend of Zelda: Skyward Sword HD and all 3 Xenoblade games on Intel GPUs. Might improve Vulkan performance in all of the above games on AMD GPUs. Nvidia Vulkan appears to be unaffected.  ## 1.1.277 - 2022-09-19 ### Fixed: - OpenGL: Fix blit from non-multisample to multisample texture.   - Fixes a rendering regression in Fate/EXTELLA.  ## 1.1.276 - 2022-09-19 ### Fixed: - Avalonia - Misc changes to UX.   - Settings navbar is now full-sized.   - Alignment in a few windows has been fixed.   - Number of each controller type is now listed instead of ID.   - Volume widget on status bar is now aligned and localizable.  ## 1.1.275 - 2022-09-19 ### Fixed: - Allow bindless textures with handles from unbound constant buffer.   - Fixes Sniper Elite 3 crashing on startup.  ## 1.1.274 - 2022-09-19 ### Changed: - Avalonia - Use embedded window for Avalonia.   - Improves frame pacing of games when using the Avalonia UI.   - Fixes unresponsiveness of the Avalonia UI when using Vulkan.   - Fixes overlays glitching on fullscreen on Avalonia.   - Fixes an issue where a previous frame would sometimes show up on games played with the new UI.   - Allows switching graphics backends and preferred GPU on Avalonia without requiring a restart of the emulator.  ## 1.1.273 - 2022-09-19 ### Added: - Implemented in IR the managed methods of the ShlReg region of the SoftFallback class.   - No known changes in games.  ## 1.1.272 - 2022-09-14 ### Added: - A32/T32/A64: Implement Hint instructions (CSDB, SEV, SEVL, WFE, WFI, YIELD).   - Needed by Hanayaka Nari Waga Ichizoku Modern Nostalgie and Meiji Katsugeki Haikara Ryuuseigumi - Seibai Shimaseu, Yonaoshi Kagyou.  ## 1.1.271 - 2022-09-14 ### Fixed: - Periodically Flush Commands for Vulkan.   - Improves performance on Pok\u00e9mon Sword/Shield and The Legend of Zelda: Breath of the Wild when using Vulkan.  ## 1.1.270 - 2022-09-14 ### Fixed: - Fix partial unmap reprotection on Windows.   - Fixes a regression in Super Smash Bros. Ultimate that caused some punctuation text to be missing.  ## 1.1.269 - 2022-09-13 ### Added: - Implement PLD and SUB (imm16) on T32, plus UADD8, SADD8, USUB8 and SSUB8 on both A32 and T32.   - Allows more applications to boot through Vita2HOS.   - May increase compatibility with other 32-bit titles and homebrew.  ## 1.1.268 - 2022-09-13 ### Added: - T32: Implement Asimd instructions.   - Allows VITA-8 to boot through Vita2HOS.   - May increase compatibility with other 32-bit titles and homebrew.  ## 1.1.267 - 2022-09-13 ### Fixed: - Fix bindless 1D textures having a buffer type on the shader.   - Fixes black screen on Prinny: Can I Really Be the Hero? and Prinny 2: Dawn of Operation Panties, Dood!  ## 1.1.266 - 2022-09-13 ### Fixed: - Fix increment on Arm32 NEON VLDn/VSTn instructions with regs &gt; 1.   - No More Heroes and No More Heroes 2: Desperate Struggle now go in-game.   - Fixes several missing visual effects in Pikmin 3 Deluxe.   - Fixes bad voice audio quality in Ni no Kuni Wrath of the White Witch and bad sound quality in Double Dragon Neon and Sky Gamblers: Storm Raiders.   - Fixes a crash in Valkyria Chronicles when attempting to view the \"Encounter at Bruhl\" episode.  ## 1.1.265 - 2022-09-13 ### Fixed: - Fix R4G4B4A4 format on Vulkan.   - Fixes text rendering in Ni no Kuni Wrath of the White Witch and Ys VIII: Lacrimosa of Dana.   - Fixes menu icons in Super Kirby Clash and Vroom in the Night Sky.  ## 1.1.264 - 2022-09-11 ### Fixed: - Scale SamplesPassed counter by RT scale on report.   - Fixes gameplay issues caused by resolution scaling in Splatoon 2 and Splatoon 3, namely specials charging up faster and points being multiplied at higher resolutions, and being unable to swim in ink at lower resolutions.  ## 1.1.263 - 2022-09-11 ### Fixed: - Implement VRINT (vector) Arm32 NEON instructions.   - Ni no Kuni Wrath of the White Witch now goes in-game, though it requires a save file.  ## 1.1.262 - 2022-09-10 ### Fixed: - T32: Add Vfp instructions.   - Allows the triangle homebrew to work on Vita2HOS.  ## 1.1.261 - 2022-09-10 ### Fixed: - Implement Thumb (32-bit) memory (ordered), multiply, extension and bitfield instructions.   - Allows Vita2HOS to go a bit further when launching applications.  ## 1.1.260 - 2022-09-10 ### Fixed: - Optimize placeholder manager tree lookup.   - Reduces the time to stop emulation or close the program when running games with a large amount of memory mappings.   - Affected games include: Shin Megami Tensei V, Triangle Strategy and possibly some UE4 titles.  ## 1.1.259 - 2022-09-10 ### Fixed: - Do not output ViewportIndex on SPIR-V if GPU does not support it.   - Fixes a crash in Super Smash Bros. Ultimate on older GPUs (pre-Maxwell) using Vulkan.  ## 1.1.258 - 2022-09-10 ### Fixed: - Rebind textures if format changes or they're buffer textures.   - Fixes a regression in Mario Party Superstars in the spotlight minigame where the red spotlight would not render.   - May affect other titles similarly affected by the regression.  ## 1.1.257 - 2022-09-09 ### Fixed: - Allocate work buffer for audio renderer instead of using guest supplied memory.   - Fixes an access violation crash on Urban Trial Tricky that started happening on 1.1.100.   - Fixes a crash on boot on Mutant Year Zero: Road to Eden.  ## 1.1.256 - 2022-09-09 ### Added: - Add ADD (zx imm12), NOP, MOV (rs), LDA, TBB, TBH, MOV (zx imm16) and CLZ thumb instructions.   - Allows Vita2HOS to launch again.  ## 1.1.255 - 2022-09-09 ### Fixed: - Implement VRSRA, VRSHRN, VQSHRUN, VQMOVN, VQMOVUN, VQADD, VQSUB, VRHADD, VPADDL, VSUBL, VQDMULH and VMLAL Arm32 NEON instructions.   - Allows Baldur's Gate/ Baldur's Gate II Enhanced Editions, Dies irae -Amantes amentes-, Planescape: Torment/ Icewind Dale Enhanced Editions and Star Wars: Republic Commando to go in-game, possibly fixes other 32-bit games.  ## 1.1.254 - 2022-09-08 ### Fixed: - Restride vertex buffer when stride causes attributes to misalign in Vulkan.   - Fixes vertex explosions in Splatoon 3: Splatfest World Premiere on AMD graphics on Windows, and a crash on Mesa drivers. May improve other games that suffered from vertex explosions on AMD GPUs.   ## 1.1.253 - 2022-09-08 ### Fixed: - Clean up rejit queue.   - Code cleanup. No expected changes in games.   ## 1.1.252 - 2022-09-08 ### Fixed: - Implemented in IR the managed methods of the Saturating region of the SoftFallback class (the SatQ ones).   - Greatly improves performance of pre-rendered cutscenes in Astral Chain, Crash Team Racing Nitro-Fueled, Mario + Rabbids: Kingdom Battle, Tony Hawk's Pro Skater 1 + 2, and possibly other games.   ## 1.1.251 - 2022-09-07 ### Fixed: - Transform shader LDC into constant buffer access if offset is constant.   - Fixes intermittent black screen in Ys VIII: Lacrimosa of DANA.  ## 1.1.250 - 2022-09-07 ### Fixed: - bsd: improve socket poll.   - No expected changes in games.  ## 1.1.249 - 2022-09-07 ### Added: - bsd: implement SendMMsg and RecvMMsg.   - No expected changes in games.  ## 1.1.248 - 2022-09-01 ### Fixed: - Bsd: Fix NullReferenceException in BsdSockAddr.FromIPEndPoint().   - Fixes a crash with Guest Internet Access enabled in Victor Vran Overkill Edition.  ## 1.1.247 - 2022-09-01 ### Fixed: - Change vsync signal to happen at 60hz, regardless of swap interval.   - Fixes voice lines becoming delayed during cutscenes in Tokyo Mirage Sessions #FE Encore.   - Might fix some game speed issues in The Legend of Zelda: Link's Awakening and Breath of the Wild.  ## 1.1.246 - 2022-09-01 ### Fixed: - bsd: Fix Poll(0) returning ETIMEDOUT instead of SUCCESS.   - No expected changes in games.  ## 1.1.245 - 2022-09-01 ### Fixed: - sfdsnres: fix endianess issue for port serialisation.   - No expected changes in games.  ## 1.1.244 - 2022-08-31 ### Added: - account: Implement LoadNetworkServiceLicenseKindAsync.   - Required for Pok\u00e9mon Legends: Arceus v1.1.1 to run with Guest Internet Access enabled. The game does not yet boot with this option on, as it requires another change as well.  ## 1.1.243 - 2022-08-28 ### Fixed: - Bsd: Fix ArgumentOutOfRangeException in SetSocketOption.   - Allows Minecraft to boot with \"enable guest internet access\" DISABLED. Enabling will still cause a crash.  ## 1.1.242 - 2022-08-28 ### Changed: - Replace image format magic numbers with enums.   - Refactors GPU texture format tables to match official NVIDIA open-source headers.   - Vertex attribute formats are now represented with their own enum.   - No expected changes in games.  ## 1.1.241 - 2022-08-27 ### Fixed: - Avalonia - Update Japanese translation.   - Brings the Japanese locale up to date for the Avalonia UI.  ## 1.1.240 - 2022-08-26 ### Fixed: - Optimize kernel memory block lookup and consolidate RBTree implementations.   - No known changes, though it might positively affect UE4 games.  ## 1.1.239 - 2022-08-26 ### Fixed: - Avalonia - Update Turkish Translation.   - Updates Turkish localization for the Avalonia UI.  ## 1.1.238 - 2022-08-26 ### Fixed: - Update de_DE.json.   - Updates German localization for the Avalonia UI.  ## 1.1.237 - 2022-08-26 ### Fixed: - Update zh_CN.json.   - Updates simplified Chinese localization for the Avalonia UI.  ## 1.1.236 - 2022-08-26 ### Fixed: - Avalonia - Add Polish Translation.   - Adds a Polish localization for the Avalonia UI.  ## 1.1.235 - 2022-08-26 ### Fixed: - Avalonia - Display language names in their corresponding language under \"Change Language\".   - Changes language names to their native ones in the Avalonia UI. Before, they were all in English.  ## 1.1.234 - 2022-08-26 ### Fixed: - bsd: Fix Poll writting in input buffer.   - Fixes an oversight in the code. No expected changes to emulator functionality.  ## 1.1.233 - 2022-08-26 ### Fixed: - Fast path for Inline-to-Memory texture data transfers.   - Fixes texture corruption on games that use OpenGL on the Switch, such as Blossom Tales II, Digimon Story Cyber Sleuth, Layton's Mystery Journey, River City Girls Zero, Super Perils of Baking, and more.  ## 1.1.232 - 2022-08-25 ### Fixed: - pctl: Implement EndFreeCommunication.   - Fixes a parental controls service crash in Among Us, Colors Live, Game Builder Garage and Splatoon 3: Splatfest World Premiere.  ## 1.1.231 - 2022-08-25 ### Fixed: - misc: Fix missing null terminator for strings with pchtxt.   - No changes in games.  ## 1.1.230 - 2022-08-25 ### Added: - ARMeilleure: Hardware accelerate SHA256.   - No known changes in games.  ## 1.1.229 - 2022-08-25 ### Added: - Implement some 32-bit Thumb instructions.   - Implements LDM/STM, LDAEX/STLEX, LDR/STR (with register offset shifted by immediate) and LDRD/STRD instructions.   - No known changes in games.  ## 1.1.228 - 2022-08-24 ### Fixed: - Update PPTC dialog text to match label and tooltip.   - The warning box now properly states that it's queuing a PPTC rebuild and not deleting it.  ## 1.1.227 - 2022-08-21 ### Fixed: - Check if game directories have been updated before refreshing GUI.   - Prevents both UIs from reloading the games list every time settings are updated, and refreshes only if the game folder changes.  ## 1.1.226 - 2022-08-20 ### Fixed: - Use RGBA16 vertex format if RGB16 is not supported on Vulkan.   - Xenoblade Chronicles 3 now boots on AMD graphics cards.  ## 1.1.225 - 2022-08-19 ### Fixed: - Change 'Purge PPTC Cache' label &amp; tooltip to reflect function behavior.   - It is now named \"Queue PPTC Rebuild\" as the option doesn't purge it completely.  ## 1.1.224 - 2022-08-19 ### Fixed: - A few minor documentation fixes.   - Small code cleanup. No changes in games.  ## 1.1.223 - 2022-08-18 ### Removed: - Removed unused usings.   - Small code cleanup. No changes in games.  ## 1.1.222 - 2022-08-17 ### Fixed: - Skipped over the last \"Count\" key explicitly.   - Small code cleanup. No changes in games.  ## 1.1.221 - 2022-08-17 ### Fixed: - Fix SpirV parse failure.   - Fixes the Mii editor applet on Vulkan.  ## 1.1.220 - 2022-08-17 ### Removed: - Removed extra semicolons.   - Minor code cleanup. No expected changes.  ## 1.1.219 - 2022-08-16 ### Fixed: - Avalonia - Couple fixes and improvements to Vulkan.   - Fixes a crash that occurred when toggling fullscreen.   - Adds fallback to OpenGL if Vulkan is not available.   - Adds swapchain present mode control to GTK.   - Fixes screenshot feature on Avalonia Vulkan.   - Fixes favorites not being saved on Avalonia.  ## 1.1.218 - 2022-08-16 ### Added: - Vulkan: Add ETC2 texture formats.   - Adds missing texture formats to Vulkan. On supported Intel and AMD GPUs, games that use these formats, such as Radiation Island or Vegas Party, should now work on Vulkan.  ## 1.1.217 - 2022-08-15 ### Added: - am: Stub SetWirelessPriorityMode, SaveCurrentScreenshot and GetHdcpAuthenticationState.   - Fixes Xenoblade Chronicles 3 photo gallery crash.   - Fixes Hulu app crashing on startup.  ## 1.1.216 - 2022-08-15 ### Fixed: - ControllerApplet: Override player counts when SingleMode is set   - Reduces controller applet spam in certain titles such as Splatoon 2, Xenoblade Chronicles 3 and other titles that don't like multiple connections.   - Any title that had significant controller applet log spam may be helped.  ## 1.1.215 - 2022-08-14 ### Fixed: - PreAllocator: Check if instruction supports a Vex prefix in IsVexSameOperandDestSrc1.   - No changes expected in games.  ## 1.1.214 - 2022-08-14 ### Fixed: - Fix texture bindings using wrong sampler pool in some cases.   - Fixes a regression that caused flickering in Animal Crossing: New Horizons, Atelier Ryza (only with Vsync disabled) and No More Heroes 3.  ## 1.1.213 - 2022-08-11 ### Fixed: - OpenGL: Limit vertex buffer range for non-indexed draws.   - Fixes the triangle glitch on fog/smoke in Super Mario Odyssey.   - Fixes a TDR/driver crash in Xenoblade Chronicles 3 (only on OpenGL).  ## 1.1.212 - 2022-08-11 ### Fixed: - Fix blend with RGBX color formats.   - Fixes broken blending in La-Mulana.  ## 1.1.211 - 2022-08-11 ### Fixed: - Rename ToSpan to AsSpan.   - Small code cleanup.  ## 1.1.210 - 2022-08-11 ### Added: - Add Japanese translation to Avalonia UI.  ## 1.1.209 - 2022-08-08 ### Fixed: - OpenGL: Fix clear of unbound color targets.   - Fixes a regression that caused New Super Mario Bros U Deluxe to crash with a NullReferenceException. May fix other games with the same problem.  ## 1.1.208 - 2022-08-05 ### Fixed: - Implement Arm32 Sha256 and MRS Rd, CPSR instructions.   - Mario Kart 8 Deluxe with update 2.1.0 is now playable.  ## 1.1.207 - 2022-08-04 ### Added: - Implement HLE macros for render target clears.   - Adds a HLE macro for render target clears (color and depth-stencil).   - May result in a minor performance improvement on games that render to array or 3D textures.  ## 1.1.206 - 2022-08-03 ### Fixed: - Fix Multithreaded Compilation of Shader Cache on OpenGL.   - Fixes a regression from 1.1.200 that caused OpenGL to build caches at boot on a single thread. Now it's properly multithreaded again.  ## 1.1.205 - 2022-08-02 ### Fixed: - Sfdnsres: Stub ResolverSetOptionRequest.   - Fixes a crash on boot in Ark: Survival Evolved when Guest Internet Access is enabled.   - Allows Danger Mouse to go in-game.  ## 1.1.204 - 2022-08-02 ### Fixed: - Fix resolution scale values not being updated.   - Fixes a regression that caused graphical glitches on Xenoblade games when using resolution scaling.  ## 1.1.203 - 2022-08-02 ### Fixed: - Fix geometry shader passthrough fallback being used when feature is supported.   - Fixes a regression on Marvel Ultimate Alliance 3 on Maxwell and newer NVIDIA GPUs when using OpenGL.  ## 1.1.202 - 2022-08-02 ### Fixed: - SPIR-V: Initialize undefined variables with 0.   - Fixes tilt shift blur effect in The Legend of Zelda: Link's Awakening on NVIDIA GPUs.   - Fixes block flickering in Splatoon 2 on newer NVIDIA GPUs.  ## 1.1.201 - 2022-08-01 ### Fixed: - Fix a crash occurring when trying to launch a game with Vulkan on FlatHub releases.  ## 1.1.200 - 2022-07-31 ### Added: - Vulkan backend. - Implemented a Vulkan graphics backend. You can now switch between OpenGL and Vulkan in Settings &gt; Graphics &gt; Graphics Backend.   - Implemented a GPU selector in the same menu, labeled \"Preferred GPU\", for systems with more than one graphics card. Keep in mind you can only select the GPU that Vulkan will use, not the one OpenGL will use.    - Added a \"Texture Recompression\" option in graphics settings which, when enabled, will reduce VRAM usage in exchange for slightly worse texture quality (affects both Vulkan and OpenGL). We recommend this for graphics cards that have less than 4GB VRAM.   - When using Vulkan, AMD and Intel GPUs will see large improvements in compatibility and performance across the board. Use latest graphics drivers for the best experience.   - Implemented SPIR-V shader backend. Reduces shader compilation times considerably for all GPU vendors, compared to OpenGL's GLSL backend. This results in much less stuttering on first runs.   - Vulkan supports supersampling at higher than 2x the display resolution, which acts as antialiasing when the rendering resolution is higher than the display's, whereas OpenGL only supports it up to 2x the screen resolution.   - Vulkan may not have graphical glitches that OpenGL has, such as the co-op player 2 screen in Fire Emblem Warriors: Three Hopes.   - Certain games, such as Pok\u00e9mon Legends: Arceus, Pokk\u00e9n Tournament, Super Mario Odyssey and The Legend of Zelda: Breath of the Wild, have shown slightly better performance on Nvidia Vulkan than on Nvidia OpenGL.    - Shader caches from before this change will be deleted, and new shader caches will be starting from zero. This is due to Vulkan and OpenGL caches now being shared.   - Shader caches built with Vulkan will now be usable with OpenGL and vice versa.   - Vulkan shaders do not require to be rebuilt after driver updates; however, OpenGL shaders still do.  ## 1.1.199 - 2022-07-29 ### Fixed: - Move partial unmap handler to the native signal handler.   - Greatly improves performance and reduces stuttering on Windows 11.  ## 1.1.198 - 2022-07-29 ### Fixed: - Minor Avalonia UI verbiage/case fixes Across languages.  ## 1.1.197 - 2022-07-28 ### Fixed: - Avalonia: Another Cleanup.   - Fixes crashes in the Avalonia UI's DLC Manager that would occur when managing DLC for a game that already had DLC added to it, when selecting 1 or more DLC files and adding them, or when clicking \"Remove\", \"Remove All\" or \"Save\" for titles with no DLC.  ## 1.1.196 - 2022-07-28 ### Fixed: - Avalonia: Cleanup UserEditor a bit.   - Small code cleanup for the user profile editor in the Avalonia UI.  ## 1.1.195 - 2022-07-28 ### Fixed: - Fix DMA linear texture copy fast path.   - Fixes a crash in SD Gundam Battle Alliance Demo.  ## 1.1.194 - 2022-07-27 ### Added: - Add a sampler pool cache and improve texture pool cache.   - Improves performance on Super Zangyura.  ## 1.1.193 - 2022-07-25 ### Added: - Backport Avalonia menu/settings tooltips to GTK where possible.   - New tooltips from the Avalonia UI are now on the current UI as well.  ## 1.1.192 - 2022-07-25 ### Changed: - misc: Reformat Ryujinx.Audio with dotnet-format.  ## 1.1.191 - 2022-07-24 ### Added: - Resolution scaling hotkeys.   - Adds hotkeys for changing resolution scaling while a game is running. One increases resolution by a factor of 1 up to 4x; the other decreases resolution by a factor of 1 up to 1x. The hotkeys aren't configured by default, requiring the user to set them up on Avalonia.  ## 1.1.190 - 2022-07-24 ### Fixed: - Add support for conditional (with CC) shader Exit instructions.   - Fixes bloom in Tokyo Mirage Sessions.   ## 1.1.189 - 2022-07-24 ### Added: - feat: add traditional chinese translate (Avalonia).   - Adds a traditional Chinese localization for the Avalonia UI.   ## 1.1.188 - 2022-07-24 ### Fixed: - Avalonia - Make menuitems toggleable on textclick.   - Makes it so checkboxes can be enabled/disabled when pressing on their corresponding text on the Avalonia GUI.   ## 1.1.187 - 2022-07-24 ### Changed: - Avalonia - Use content dialog for user profile manager.   - Moves the user profile window and related windows to a single content dialog on the Avalonia GUI.   ## 1.1.186 - 2022-07-24 ### Fixed: - fix: Ensure to load latest version of ffmpeg libraries first.   - Fixes a crash related to loading an older version of ffmpeg, instead of the one shipped with the emulator.   ## 1.1.185 - 2022-07-23 ### Fixed: - Minor GTK &amp; Avalonia UI verbiage/case fixes.   - Small text adjustments in the UIs.   ## 1.1.184 - 2022-07-23 ### Fixed: - Fix decoding of block after shader BRA.CC instructions without predicate.   - Fixes green lights in Jump Force.   ## 1.1.183 - 2022-07-23 ### Fixed: - Avoid adding shader buffer descriptors for constant buffers that are not used.   - May slightly improve performance in some games.   ## 1.1.182 - 2022-07-15 ### Fixed: - Avoid scaling 2d textures that could be used as \u201c3d\u201c.   - Fixes red-tinted textures when upscaling in Agatha Christie: Hercule Poirot - The First Cases, A Hat in Time, Cruis'n Blast, Demon Gaze Extra, Far: Changing Tides, Lost in Random, Pascal's Wager: Definitive Edition, Sherlock Holmes: Devil's Daughter, World's End Club, possibly more.   ## 1.1.181 - 2022-07-14 ### Fixed: - Reduce some unnecessary allocations in DMA handler.   - Reduces load times slightly and reduces stutters during pre-recorded videos.   ## 1.1.180 - 2022-07-14 ### Fixed: - Remove dependency for FFmpeg.AutoGen and Update FFmpeg to 5.0.1 for Windows.   - Fixes games crashing on Linux whenever an mpeg pre-rendered video would play.   ## 1.1.179 - 2022-07-14 ### Added: - BSD: Allow use of DontWait flag in Receive.   - No known changes in games.   ## 1.1.178 - 2022-07-12 ### Changed: - Ava/MainWindow: Do not show Show Console menu item on non-Windows.   - Hides \"Show Console\" on Linux in the Avalonia UI.   ## 1.1.177 - 2022-07-11 ### Fixed: - Handle the case where byte size option values are sent to BSD.   - Fixes a crash in the Super Mario Odyssey online mod when connecting to the server. Note that the SMO online mod still may not work properly.  ## 1.1.176 - 2022-07-11 ### Fixed: - Avalonia - Add border to Flyouts.   - Adds a border to flyouts (menus, dropdowns, etc) to easily tell them from the background.   ## 1.1.175 - 2022-07-11 ### Fixed: - Propagate Shader phi nodes with the same source value from all blocks.   - Fixes flickering in Monster Hunter Rise: Sunbreak (still requires further changes to get in-game).   ## 1.1.174 - 2022-07-11 ### Fixed: - Avalonia - Make tooltips more useful and descriptive, update Spanish localization.   - Expands several tooltips to better explain what their respective settings do, and updates the Spanish localization accordingly.   ## 1.1.173 - 2022-07-11 ### Fixed: - Avalonia - Couple fixes and improvements.   - Fixes a crash in the Avalonia UI when bringing up the autoupdater.   - Reduces size of cheat window.   - Enables Tiered Compilation (speeds up Avalonia UI startup time).   - Removes compiler warnings from the Avalonia project.  ## 1.1.172 - 2022-07-11 ### Fixed: - Avalonia - Further Optimize Chinese Translation.   - Updates the Simplified Chinese localization for Avalonia.  ## 1.1.171 - 2022-07-08 ### Added: - UI - Avalonia Part 3.   - Adds the remaining Avalonia windows. The UI is now at parity with the current GTK UI.  ## 1.1.170 - 2022-07-08 ### Fixed: - Avalonia - Use loaded config when assigning controller input.   - Fixes a crash in the upcoming Avalonia UI that occurs when mapping controller input while a config hasn't been saved for that controller.  ## 1.1.169 - 2022-07-08 ### Fixed: - Avalonia - Ensure mouse cursor is only hidden when mouse is in renderer.   - Fixes a bug in the upcoming Avalonia UI where the mouse cursor wouldn't be hidden properly.   ## 1.1.168 - 2022-07-08 ### Changed: - Relicense Ryujinx.Audio under the terms of the MIT license   - Adjusts the licence of Amadeus from LGPLv3 to MIT.  ## 1.1.167 - 2022-07-08 ### Fixed: - Fix deadlock in mouse input on Avalonia.   - Fixes a deadlock in the upcoming Avalonia UI that occurs if you open any window while direct mouse input is enabled.  ## 1.1.166 - 2022-07-06 ### Fixed: - Fix Vi managed and stray layers open/close/destroy.   - Portal and Portal 2 are now playable.  ## 1.1.165 - 2022-07-06 ### Added: - Implement CPU FCVT Half &lt;-&gt; Double conversion variants.   - Required by Portal and Portal 2 (however they still require further changes to get in-game).   ## 1.1.164 - 2022-07-05 ### Fixed: - Add support for alpha to coverage dithering.   - Fixes missing dithering (semi-transparency) effect on objects close to the camera and at the edges of the draw distance in Pok\u00e9mon Legends: Arceus.   ## 1.1.163 - 2022-07-05 ### Added: - UI - Avalonia Part 2.   - Adds settings window and subsequent windows and controls to the upcoming Avalonia-based user interface.   ## 1.1.162 - 2022-07-03 ### Added: - ptm: Stub GetTemperature.   - Stubs GetTemperature service needed by the latest version of nx-hbmenu (Homebrew menu).  ## 1.1.161 - 2022-07-02 ### Fixed: - Bindless elimination for constant sampler handle.   - Allows the Monster Hunter Rise: Sunbreak update to render (still requires further changes to get in-game).   ## 1.1.160 - 2022-06-29 ### Fixed: - ui: Fix timezone abbreviation since #3361.   - Fixes timezone abbreviation text in system settings.   ## 1.1.159 - 2022-06-25 ### Added: - Add Simplified Chinese to Avalonia (V2).   - Adds a Chinese localization to the upcoming Avalonia UI.   ## 1.1.158 - 2022-06-25 ### Fixed: - Account for pool change on texture bindings cache.   - Fixes a regression from 1.1.149 that caused garbled textures on Super Zangyura.   ## 1.1.157 - 2022-06-24 ### Fixed: - timezone: Fix regression caused by #3361.   - Fixes games that were crashing due to the change in 1.1.156.   ## 1.1.156 - 2022-06-24 [Unpublished] ### Fixed: - time: Make TimeZoneRule blittable and avoid copies.   - No known changes in games.   ## 1.1.155 - 2022-06-24 ### Fixed: - Fix ThreadingLock deadlock on invalid access and ExitProcess.   - Fixes a specific case of the emulator freezing when closing. Does not fix all instances where this happens, however.   ## 1.1.154 - 2022-06-24 ### Fixed: - Ensure texture ID is valid before getting texture descriptor.   - Fixes a crash in A Hat in Time that would occur after progressing past a certain point in the game.  ## 1.1.153 - 2022-06-23 ### Changed: - UI: Some Avalonia cleanup.   - Cleans up some of the new GUI code. No changes to emulator functionality.  ## 1.1.152 - 2022-06-22 ### Changed: - Rewrite kernel memory allocator.   - Cleans up the kernel memory allocator code. No changes expected in games.  ## 1.1.151 - 2022-06-20 ### Fixed: - Fix doubling of detected gamepads on program start.   - May fix some instances of controller duplicates appearing on the Input Device dropdown.  ## 1.1.150 - 2022-06-17 ### Fixed: - Account for res scale changes when updating bindings.   - Fixes graphical regression when scaling certain games (XCDE/XC2).  ## 1.1.149 - 2022-06-17 ### Changed: - Optimize Texture Binding and Shader Specialization Checks.   - Improves performance in Super Mario Odyssey, The Legend of Zelda: Breath of the Wild, Xenoblade Chronicles Definitive Edition, and possibly others.  ## 1.1.148 - 2022-06-17 ### Fixed: - Fix VIC out of bounds copy.   - Fixes a video crash in LOOPERS.  ## 1.1.147 - 2022-06-14 ### Fixed: - Support Array/3D depth-stencil render target, and single layer clears.   - Fixes missing crowd in Mario Strikers: Battle League.  ## 1.1.146 - 2022-06-12 ### Fixed: - Less invasive fix for EventFd blocking operations.   - Return to single-thread approach for handling sockets.   - Fixes issues in some games (Pok\u00e9mon Sword/Shield) where a Hipc response error would crash early into launching.  ## 1.1.145 - 2022-06-11 ### Fixed: - Allow concurrent BSD EventFd read/write.   - Fixes a regression in Diablo II: Resurrected where the game would just hang on a black screen on boot.  ## 1.1.144 - 2022-06-11 ### Fixed: - Ignore ClipControl on draw texture fallback.   - Fixes some games rendering upside-down on AMD and Intel graphics cards, such as Moero Chronicle Hyper. Nvidia is unaffected.  ## 1.1.143 - 2022-06-10  ### Fixed: - Fix instanced indexed inline draw index count.   - Fixes index count used on the draw passing the count for a single instance.    - Fixes performance issues in the 3D sections on Genkai Tokki Moero Crystal H.   ## 1.1.142 - 2022-06-06 ### Fixed: - Fix instanced indexed inline draws.   - Fixes remaining issues with 3D sections in Genkai Tokki Moero Crystal H. Also fixes performance drops in the game.  ## 1.1.141 - 2022-06-05 ### Fixed: - Remove freed memory range from tree on memory block disposal.   - Fixes an issue where the emulator could crash after stopping emulation and starting another game afterwards.  ## 1.1.140 - 2022-06-05 ### Fixed: - Extend uses count from ushort to uint on Operand Data structure.   - Taiko Risshiden V DX now goes in-game.  ## 1.1.139 - 2022-06-05 ### Fixed: - Copy dependency for multisample and non-multisample textures.   - Fixes black screen in Perky Little Things.    - Partially fixes 3D sections in Genkai Tokki Moero Crystal H.  ## 1.1.138 - 2022-06-04 ### Fixed: - Fix a potential GPFIFO submission race.   - No expected changes in games.  ## 1.1.137 - 2022-06-02 ### Fixed: - Fix 3D semaphore counter type 0 handling.   - Fixes a bug where 0 would be released from counter instead of a semaphore payload.   - The Elder Scrolls V: Skyrim now goes in-game.  ## 1.1.136 - 2022-06-01 ### Changed: - infra: Switch to win10-x64 RID and fix PR comment for Avalonia and SDL2 artifact rename.   - Windows Ryujinx builds now target Windows 10/11.   - Windows 7, 8 and 8.1 are no longer supported.   - Avalonia builds posted on PRs by the GitHub bot will be hidden under an \"Experimental GUI (Avalonia)\" tab.    - Headless builds will move back under the \"GUI-less (SDL2)\" tab.   ## 1.1.135 - 2022-05-31 ### Changed: - Rewrite SVC handler using source generators rather than IL emit.   - Replace all instances of Reflection.Emit from the codebase with new source generators for runtime code generation.   - Ryujinx codebase should now be eligible for .NET Ahead-of-Time compilation.   - Fixes black screen deadlock on boot in Genkai Tokki Moero Crystal H.  ## 1.1.134 - 2022-05-31 ### Changed: - Refactor CPU interface to allow the implementation of other CPU emulators.   - Refactors the existing CPU related interfaces (and also adds new ones) to allow other CPU emulators to be implemented. This includes not only JIT-based emulators, but also hypervisors (for example, Apple Hypervisor).   - No expected changes in games.  ## 1.1.133 - 2022-05-31 ### Fixed: - Allow loading NSPs without a NCA inside.   - Homebrew applications that are packed as NSP files can now boot.  ## 1.1.132 - 2022-05-21 ### Fixed: - Don't force DPI aware on Avalonia.   - Fixes an issue where per-monitor DPI was not working on the new UI. Does not affect the current UI.  ## 1.1.131 - 2022-05-18 ### Fixed: - Fix audio renderer error message result code base.   - Changes how this specific error is displayed on the console. No changes to emulator functionality.  ## 1.1.130 - 2022-05-16 ### Fixed: - UI - Scale end framebuffer blit.   - Fixes rendering when desktop scaling is over 150%.  ## 1.1.129 - 2022-05-15  ### Fixed: - Fixes the Avalonia updater.   - Updates the auto-updater code to include the Avalonia paths.   ## 1.1.128 - 2022-05-15  ### Fixed: - Fix Amiibo image path.   - Fixes a regression that caused crashing when an Amiibo was scanned.  ## 1.1.127 - 2022-05-15  ### Fixed: - gh-actions: Prefix Avalonia builds with test- and disable pre-release.   - Fixes the updater downloading the wrong Ryujinx build.   ## 1.1.126 - 2022-05-15  ### MISC: - Pre-release build.  ## 1.1.125 - 2022-05-15  ### Added: - Add Avalonia builds to release.   - Avalonia builds will now be downloadable on GitHub PR artifacts.  ## 1.1.124 - 2022-05-15  ### Fixed: - misc: Clean up of CS project after Avalonia merge.   - No expected changes in emulator functionality.  ## 1.1.123 - 2022-05-15  ### Fixed: - sdl2: Update to Ryujinx.SDL2-CS 2.0.22.   - Fixes G-Shark gamepads.   - Fixes wired PowerA GameCube controllers.   - Fixes broken motion controls on Linux.   - Likely fixes compatibility with more unofficial controllers.  ## 1.1.122 - 2022-05-15 ### Added: - Avalonia UI: Part 1   - Implements the foundations for the UI update to Avalonia.   - Further parts will be merged before the UI is active.  ## 1.1.121 - 2022-05-14 ### Fixed: - Prefetch capabilities before spawning translation threads.   - Fixes a race condition that could cause games to crash when recompiling shaders.  ## 1.1.120 - 2022-05-12 ### Fixed: - Implement Viewport Transform Disable.   - Fixes the interface in Dragon Quest Builders.   - Fixes the title screen in River City Girls Zero.   - Fixes a regression that caused broken menus in Zombies Ate My Neighbors and Ghoul Patrol.   - Fixes save slot thumbnails and screen copies in the NSO N64 emulator (Mario Kart 64 monitors), screen copies in the Citra RetroArch core, icons in RetroArch, possibly other similar bugs.  ## 1.1.119 - 2022-05-07 ### Added: - hid: Various fixes and cleanup.   - Implements and cleans up various hid functions and services.    - RetroArch and likely other similar homebrew are now bootable.  ## 1.1.118 - 2022-05-05 ### Fixed: - Add alternative \"GL\" enum values for StencilOp.   - Fixes some broken graphics in the Citra RetroArch core, possibly fixes graphics in other homebrew applications.  ## 1.1.117 - 2022-05-05  ### Added: - Enable JIT service LLE.   - Enables the JIT service, required by the NSO Nintendo 64 emulator and Super Mario 3D All-Stars (Super Mario 64), allowing them to run. It is not an actual service implementation, rather it runs the service on the firmware, so this is an \"LLE\" approach as opposed to the usual HLE approach where the service is re-implemented on the emulator.   - Requires firmware version 10.0.0 minimum.  ## 1.1.116 - 2022-05-05  ### Fixed: - Fix shared memory leak on Windows.   - Fixes a memory leak that would occur when stopping and restarting emulation.   ## 1.1.115 - 2022-05-04  ### Added: - infra: Warn about support drop of old Windows versions.   - Shows a warning message to users on Windows 7, 8, 8.1 and older Windows 10 versions stating that Ryujinx support for these versions will be dropped starting June 1st, 2022.  ## 1.1.114 - 2022-05-04  ### Fixed: - Remove AddProtection count &gt; 0 assert.   - Small code correction. This change only affects debug builds.   ## 1.1.113 - 2022-05-03  ### Changed: - Change github build workflow to not use hardcoded versioning   - Fixes an oversight that caused a few PR builds to display an incorrect version number.   ## 1.1.112 - 2022-05-03  ### Added: - Implement PM GetProcessInfo Atmosphere extension (partially).   - Adds support for Skyline + ARCropolis mods. Super Smash Bros Ultimate mods that rely on ARCropolis are now usable on Ryujinx.   ## 1.1.111 - 2022-05-02  ### Added: - Implement code memory syscalls.   - Implements code memory related syscalls, used by applications that generate and/or modify code at runtime.   - Required by emulators that use a JIT (NSO N64) and mods that patch for function hooking game code on-the-fly (Skyline/ARCropolis). Note that neither will work with these changes alone.  ## 1.1.110 - 2022-05-02 ### Added: - Support memory aliasing.   - Increases accuracy of fast memory manager modes, allowing for things like IPC, shared memory, transfer memory and code memory to be implemented properly.   - Paves the way for running sysmodules with fast memory manager modes enabled, as well as running the NSO Nintendo 64 emulator and the Skyline mod manager for Super Smash Bros Ultimate in the future.   - Fast memory manager modes will no longer work on Windows 7 and Windows 8.  ## 1.1.109 - 2022-05-02  ### Fixed: - Fix flush action from multiple threads regression.   - Fixes graphical issues in Catherine: Full Body and Pok\u00e9mon Legends: Arceus due to a regression introduced in 1.1.107.  ## 1.1.108 - 2022-05-01  ### Fixed: - Restrict cases where vertex buffer size from index buffer type is used.   - Fixes a regression introduced in 1.1.95 that caused visual glitches on certain particle effects in Xenoblade 2 (visible for instance in Godfrey's awakening).  ## 1.1.107 - 2022-04-29 ### Fixed: - Fix various issues with texture sync.   - Fixes a regression in Xenoblade titles where visuals would randomly flash.   - May fix random bugs in Breath of the Wild such as \"air swimming\" or other texture streaming bugs.  ## 1.1.106 - 2022-04-20  ### Added: - T32: Implement load/store single (immediate).   - No changes expected in games.  ## 1.1.105 - 2022-04-20 ### Fixed: - Fix broken motion controls when using SDL2.   - Fixes motion controls on multiple games such as Mario Kart 8 Deluxe; The Legend Of Zelda: Breath of the Wild; Kirby And The Forgotten Land and many others when enabled using the default SDL2 option.  ## 1.1.104 - 2022-04-15 ### Added: - Implement HwOpus multistream functions.   -  Implements multistream related Opus decoding functions.    -  Required by MLB The Show 22 and potentially others.   ## 1.1.103 - 2022-04-15 ### Fixed: - ReactiveObject: Handle case when oldValue is null.   - Fixes a possible null exception in the future Avalonia UI.  ## 1.1.102 - 2022-04-10 ### Fixed: - ForceDpiAware: X11 implementation.   - Makes Ryujinx DPI aware on X11 for Linux.  ## 1.1.101 - 2022-04-10  ### Added: - New shader cache implementation.   - Rewrites both the memory shader cache and the disk shader cache.   - Old shaders will automatically be converted to the new format when you first boot a game with an existing shader cache.   - Fixes a slight performance degradation that could occur over time as more shaders were cached.   - Closing a game will now be slightly faster as the shader cache no longer needs to be recompressed (since shader caches no longer use .zip archives).   - It is now possible to close the emulator while shaders are loading.    - Fixes crashing due to corrupted shaders. The emulator will now rebuild the broken shaders and boot normally.   - Bindless textures, used by Mario Party Superstars, Pok\u00e9mon Brilliant Diamond/Shining Pearl, and the vast majority of UE4 games (No More Heroes 3, Shin Megami Tensei V), can now be cached by the emulator's shader cache. These games will be a lot smoother as a result.   - Completely fixes long boot times on Pok\u00e9mon BDSP after 2nd run.   - Fixes graphical glitches in Yokai Watch 1, possibly other games.   - Fixes a freeze in the Near Forest in Atelier Sophie 2: The Alchemist of the Mysterious Dream.  ## 1.1.100 - 2022-04-09  ### Fixed:  - Fix tail merge from block with conditional jump to multiple returns   - Fixes audio and visual slowdowns after scanning an Amiibo in games like Animal Crossing: New Horizons. May help similar issues in other titles.  ## 1.1.99 - 2022-04-08  ### Added:  - Implement VMAD shader instruction and improve InvocationInfo and ISBERD handling.   - Fixes homebrew that uses Nouveau OpenGL and geometry or tessellation shaders. No known changes in commercial games.  ## 1.1.98 - 2022-04-08  ### Fixed: - Allow copy texture views to have mismatching multisample state.   - Fixes black screen in Pinball FX3.  ## 1.1.97 - 2022-04-08 ### Fixed: - Lop3Expression: Optimize expressions.   - No changes expected in games.  ## 1.1.96 - 2022-04-08 ### Changed: - Remove save data creation prompt.   - Save data directories will now be created automatically and logged in the console.  ## 1.1.95 - 2022-04-08 ### Fixed: - Calculate vertex buffer size from index buffer type.   - Prevents out of memory errors and crashes on Super Mario 64 (SM3DAS) and Perky Little Things. Note that these games need more fixes to work.  ## 1.1.94 - 2022-04-08 ### Fixed: - amadeus: Improve and fix delay effect processing.   - Reworks the sound delay effect processing and cleans up the code.   - Fixes a bug in the surround sound code. No known changes in games.  ## 1.1.93 - 2022-04-07  ### Fixed: - HID: Signal event on AcquireNpadStyleSetUpdateEventHandle.   - Fixes random controller disconnects on Flip Wars.  ## 1.1.92 - 2022-04-07  ### Fixed: - LibHac: Update to 0.16.1.   - Don't fail when EnsureApplicationSaveData tries to create a temporary storage that already exists. Should allow NSO titles to boot again.   - Support reading XCI files that contain the initial data/key area.   - Add key sources for system version 14.0.0  ## 1.1.91 - 2022-04-06  ### Added: - amadeus: Update to REV11.   - This implements all of the ABI changes from REV11 from the new 14.0.0 firmware update.    - To our knowledge no games on the Nintendo Switch use these new features at the current moment, but future games likely will.   ## 1.1.90 - 2022-04-05  ### Fixed: - Do not clamp SNorm outputs to the [0, 1] range on OpenGL.   - Fixes reflections and lighting on LEGO Star Wars: The Skywalker Saga.   - Fixes white geometry in Fast RMX.  ## 1.1.89 - 2022-04-04  ### Fixed: - Implement primitive restart draw arrays properly on OpenGL.   - Fixes white lines in the sky on some Hatsune Miku: Project DIVA Mega Mix clips.  ## 1.1.88 - 2022-04-04  ### Fixed: - Do not force scissor on clear if scissor is disabled.   - Fixes menu and text glitches on Kirby and the Forgotten Land, and maybe other titles with similar problems.  ## 1.1.87 - 2022-04-04  ### Fixed: - Small graphics abstraction layer cleanup.   - No known changes in games.  ## 1.1.86 - 2022-04-04  ### Fixed: - Fix shader textureSize with multisample and buffer textures.   - Fixes graphical issues in Rune Factory 5 and Bubble Bobble 4 Friends.  ## 1.1.85 - 2022-03-26  ### Changed: - infra: Put SDL2 headless release inside a GUI-less block in PR.   - Download links of PR builds without an user interface will now be hidden. This avoids people downloading them unknowingly.  ## 1.1.84 - 2022-03-23  ### Fixed: - Support NVDEC H264 interlaced video decoding and VIC deinterlacing.   - Fixes videos in non-Japanese versions of Layton's Mystery Journey. The game now plays them instead of crashing.   - Fixes every video in Star Wars Episode I: Racer.  ## 1.1.83 - 2022-03-22  ### Fixed: - hle: Some cleanup.   - Cleaned up the HLE and VirtualFileSystem folders in the code. No changes expected in games.  ## 1.1.82 - 2022-03-21  ### Fixed: - Memory.Tests: Make Multithreading test.   - Makes the intermittent test failure more explicit so it\u2019s not confused with other errors.   ## 1.1.81 - 2022-03-20  ### Fixed: - Don't restore Viewport 0 if it hasn't been set yet.   - Fixes a driver crash when starting some games, introduced in 1.1.79.   - Games that were black screening with a GPU syncpoint error should now boot correctly (Triangle Strategy, DBFZ etc.)  ## 1.1.80 - 2022-03-20  ### Fixed: - De-tile GOB when DMA copying from block linear to pitch kind memory regions.   - Fixes texture corruption on games that use OpenGL on the Switch, including Cartoon Network: Battle Crashers, Digimon Story Cyber Sleuth: Complete Edition, Ghoul Patrol (partially), Professor Layton's Mystery Journey, Snack World: The Dungeon Crawl, Zombies Ate My Neighbours (partially), among others.  ## 1.1.79 - 2022-03-20  ### Fixed: - Fix OpenGL issues with RTSS overlays and OBS Game Capture   - RTSS and overlays that use it should no longer cause certain textures to load incorrectly (Mario Kart 8, Pok\u00e9mon Legends Arceus).   - OBS Game Capture should no longer crop the game output incorrectly, flicker randomly, or capture with incorrect gamma.  ## 1.1.78 - 2022-03-20  ### Fixed: - oslc: Fix condition in GetSaveDataBackupSetting.   - Fixes a regression introduced in 1.1.69 where Animal Crossing: New Horizons would not boot anymore without a save file. Note that the game still crashes most of the time without one.  ## 1.1.77 - 2022-03-19  ### Fixed: - InstEmitMemoryEx: Barrier after write on ordered store.   - No changes expected in games.  ## 1.1.76 - 2022-03-14 ### Added: - ntc: Implement IEnsureNetworkClockAvailabilityService.   - Needed by Splatoon 2 with Guest Internet Access enabled. The game is now playable with this setting.  ## 1.1.75 - 2022-03-14 ### Fixed: - Caching local network info and using an event handler to invalidate as needed.   - Improves slowdown in calendar menu in Fire Emblem: Three Houses.  ## 1.1.74 - 2022-03-14 ### Added: - Implement S8D24 texture format.   - Fixes starbits interaction in Super Mario Galaxy, now allowing the game to be progressed through.   - Fixes fog/depth of field/depth particles in SuperTuxKart.  ## 1.1.73 - 2022-03-14 ### Fixed: - Dynamically increase buffer size when resizing.   - Reduces the boot time (from black screen to Game Freak logo) on Pok\u00e9mon Brilliant Diamond/Shining Pearl by almost half with PPTC enabled.   - Greatly improves title screen animation and overall performance on Super Mario Galaxy.  ## 1.1.72 - 2022-03-14  ### Added: - Ui: Add option to show/hide console window (Windows-only).   - Windows users can now toggle the console under Options &gt; Show Log Console.  ## 1.1.71 - 2022-03-14  ### Fixed: - Initialize indexed inputs used on next shader stage.   - Fixes another regression introduced in 1.1.61 that would cause shaders to fail to compile on WarioWare: Get It Together! and probably other games using indexed attributes.  ## 1.1.70 - 2022-03-14  ### Fixed: - Do not initialize geometry shader passthrough attributes.   - Fixes a regression introduced in 1.1.61 that caused solid black/ transparent characters (again) on Game Builder Garage.   ## 1.1.69 - 2022-03-12  ### Added: - Implement `GetSaveDataBackupSetting` of OLSC service.   - Allows ACNH from 2.0.5 onwards to boot.  ## 1.1.68 - 2022-03-12  ### Added: - Implement setting to rotate stick axis by 90 degrees.   - Allows the stick to be rotated in all possible orientations (in conjunction with inversion).   - Games that use sideways joycons (Super Mario Party etc.) will be able to take advantage of this.  ## 1.1.67 - 2022-03-12  ### Fixed: - Fix GetUserDisableCount NRE.   - Fixes a \"NullReferenceException\" that could happen when closing the emulator or stopping emulation, reported on Splatoon 2.    - Does NOT fix most instances of emulator crashing when quitting.  ## 1.1.66 - 2022-03-12  ### Fixed: - Limit number of events that can be retrieved from GetDisplayVSyncEvent.   - Fixes \"WaitSynchronization InvalidHandle\" error spam on .hack//G.U. Last Recode, making the game playable with logs enabled.  ## 1.1.65 - 2022-03-11  ### Fixed: - KThread: Fix GetPsr mask   - No changes expected in games.  ## 1.1.64 - 2022-03-07  ### Fixed: - amadeus: Fix wrong Span usage in CopyHistories.   - Fixes a crash in Mononoke Slashdown, which now goes in-game.   - Fixes a crash in Paper Mario: The Origami King during a cutscene in Shangri-Spa.   ## 1.1.63 - 2022-03-06  ### Added: - T32: Implement Data Processing (Modified Immediate) instructions.   - No changes expected in games.  ## 1.1.62 - 2022-03-06  ### Added: - Mod loading from atmosphere SD directories.   - Implements addition of SD card paths into the ModLoader so that standard Atmosphere/hardware directory set up mods can be used semi-seamlessly. You can now right click a game and click \"Open Atmosphere Mods Directory\" to access the folder.  ## 1.1.61 - 2022-03-06  ### Fixed: - Only initialize shader outputs that are actually used on the next stage.   - Fixes models not rendering in Pok\u00e9mon Legends: Arceus on AMD OpenGL (Windows).   - May improve performance in select games e.g. PLA and Link's Awakening for Intel iGPUs (Mesa).  ## 1.1.60 - 2022-03-05  ### Fixed: - A32: Fix ALU immediate instructions.   - No changes expected in games.  ## 1.1.59 - 2022-03-05  ### Fixed: - Decoders: Fix instruction lengths for 16-bit branch instructions.   - No changes expected in games.  ## 1.1.58 - 2022-03-04  ### Changed: - Decoder: Exit on trapping instructions, and resume execution at trapping instruction.   - No changes expected in games.  ## 1.1.57 - 2022-03-04  ### Added: - T32: Implement B, B.cond, BL, BLX.   - Implements remaining thumb CPU instructions. No changes expected in games.  ## 1.1.56 - 2022-03-04  ### Added: - Preparation for initial Flatpack and FlatHub integration.   - Initial changes required to publish Ryujinx on FlatHub, a Linux app store which is also used by the Steam Deck.  ## 1.1.55 - 2022-03-02  ### Added: - Implement -p or --profile command line argument.   - Implements a command line argument for specifying which profile to load, overriding the default behavior of loading the most recently used profile. This is useful for people with shared computers, who can now set up 2 (or more) different Ryujinx desktop shortcuts by adding -p and the profile name in shortcut properties &gt; target.  ## 1.1.54 - 2022-02-26  ### Fixed: - Update LibHac to v0.16.0.   - Adds support for reading NCAs with compressed sections. Iridium and Gunvolt Chronicles: Luminous Avenger iX 2 can now boot.   - The emulator will now be able to recover from situations where external things mess with extra data files in the save data file system, instead of just erroring.  ## 1.1.53 - 2022-02-22  ### Added: - T32: Implement ALU (shifted register) instructions.   - No expected changes to emulator functionality.  ## 1.1.52 - 2022-02-22 ### Fixed: - Allow textures to have their data partially mapped.   - Fixes Miitopia crashing in the underground maze.   - Fixes crashing in Star Ocean First Departure R.  ## 1.1.51 - 2022-02-22  ### Fixed: - Perform unscaled 2d engine copy on CPU if source texture isn't in cache.   - Reduces stuttering and fixes texture problems in A Hat in Time.   - Improves stuttering in UE4 games that use texture streaming, such as Yoshi's Crafted World.   - Fixes the water in Fatal Frame: Maiden of Black Water.  ## 1.1.50 - 2022-02-22  ### Added: - ARMeilleure: Implement single stepping.   - No expected changes to emulator functionality.  ## 1.1.49 - 2022-02-22  ### Fixed: - gui: Fixes the games icon when there is an update.   - Updated games will now also display the updated icon on the games list.  ## 1.1.48 - 2022-02-22  ### Fixed: - ARMeilleure: Fix BLX and BXWritePC.   - Ensures PC is appropriately masked in BXWritePC and BLX (reg) uses BXWritePC.  ## 1.1.47 - 2022-02-22  ### Changed: - Collapse AsSpan().Slice(..) calls into AsSpan(..).   - No changes to emulator functionality.  ## 1.1.46 - 2022-02-19  ### Fixed: - Add dedicated ServerBase for FileSystem services.   - Improves menu performance in Super Smash Bros Ultimate.   - Reduces stuttering on some button advanced cutscenes in Xenoblade Chronicles: Definitive Edition.   - May improve other instances of stuttering while streaming assets or loading anything.  ## 1.1.45 - 2022-02-17  ### Fixed: - PPTC version increment.   - Fixes games getting stuck during boot, right after loading shaders.  ## 1.1.44 - 2022-02-17  ### Added: - Enable CPU JIT cache invalidation.   - This change will be required in the future to make applications that load code dynamically (NROs, mainly Super Smash Bros Ultimate) or that have self-modifying code (certain Skyline/ARCropolis mods) function properly.  ## 1.1.43 - 2022-02-17  ### Fixed: - Prefer texture over textureSize for sampler type.   - Fixes shaders failing to compile on some games, however, there seems to be no visible differences.  ## 1.1.42 - 2022-02-17  ### Changed: - Use BitOperations methods and delete now unused BitUtils methods.   - Replaces BitUtils.CountTrailingZeros/CountLeadingZeros/IsPowerOfTwo with BitOperations methods.   - No changes expected in games.  ## 1.1.41 - 2022-02-17  ### Changed: - Move kernel syscall logs to new trace log level.  ## 1.1.40 - 2022-02-17  ### Added: - Implement/Stub mnpp:app service and some hid calls.   - Required by SNES v3.0.0 games (NSO collection), however, these are not playable yet.   - Allows Nintendo Switch Sports Online Play Test to boot.  ## 1.1.39 - 2022-02-17  ### Fixed: - Decoders: Add IOpCode32HasSetFlags.   - Fixes \"Unhandled exception caught: System.InvalidCastException: Specified cast is not valid\" error on boot introduced in 1.1.36.  ## 1.1.38 - 2022-02-17 ### Added: - Added trace log level.   - Adds a \"trace\" log level in developer logs.  ## 1.1.37 - 2022-02-17 ### Changed: - Change ServiceNv map creation logs to the Debug level.   - Removes quite a bit of unneeded log spam.  ## 1.1.36 - 2022-02-17  ### Added: - ARMeilleure: Thumb support (all T16 instructions).   - Implements all 16-bit thumb CPU instructions.   - No changes expected in games.  ## 1.1.35 - 2022-02-17  ### Fixed: - misc: Update GtkSharp.Dependencies and speed up initial Windows build.   - Fixes flickering tooltips.   - Windows versions will now build faster on GitHub.  ## 1.1.34 - 2022-02-17  ### Added: - Use ReadOnlySpan compiler optimization for static data.   - No changes expected in games.  ## 1.1.33 - 2022-02-17  ### Fixed: - Use a basic cubic interpolation for the audren upsampler.   - Improves audio in The Legend of Zelda: Skyward Sword HD.  ## 1.1.32 - 2022-02-16  ### Fixed: - amadeus: Fix PCMFloat datasource command v1.   - Small code correction. No changes expected in games.  ## 1.1.31 - 2022-02-16 ### Fixed: - Do not allow render targets not explicitly written by the fragment shader to be modified.   - Fixes cave rendering in Pok\u00e9mon Legends: Arceus.   - Fixes weird lines in Pok\u00e9mon Sword/Shield.   - Fixes black water in Paper Mario: The Origami King.   - Fixes blue emblems on ships in Monster Hunter Rise.   - Fixes overbright jellyfish in NEO: The World Ends with You.  ## 1.1.30 - 2022-02-16  ### Fixed: - amadeus: Fix limiter correctness.   - Fixes missing audio on Nintendo Switch Sports Online Play Test.  ## 1.1.29 - 2022-02-16  ### Fixed: - When copying linear textures, DMA should ignore region X/Y.   - Allows River City Girls Zero to get ingame.  ## 1.1.28 - 2022-02-16  ### Changed: - Adjustmentments to controller deadzone calculation.   - Improves small movements at cardinal directions.   - Removes \"8-axis\" effect at high deadzone values.  ## 1.1.27 - 2022-02-13  ### Changed: - Use Enum and Delegate.CreateDelegate generic overloads.   - Remove unused EnumExtensions.cs.   - No changes to emulator functionality.  ## 1.1.26 - 2022-02-11  ### Fixed: - InstEmitMemory32: Literal loads always have word-aligned PC.   - No changes to emulator functionality.  ## 1.1.25 - 2022-02-11  ### Fixed: - Fix missing geometry shader passthrough inputs.   - Fixes a regression introduced in 1.0.6988 that caused solid black/ transparent characters on Game Builder Garage.  ## 1.1.24 - 2022-02-10  ### Fixed: - Ship SoundIO library only for the specified runtime.   - Ensures that the SoundIO project gets \"RuntimeIdentifiers\" property when built as a subproject, so that the correct platform-specific files are provided.  ## 1.1.23 - 2022-02-09  ### Fixed: - Add a limit on the number of uses a constant may have.   - Deathsmiles II now works.  ## 1.1.22 - 2022-02-09  ### Changed: - misc: Make PID unsigned long instead of long.   - Code cleanup. No changes in games.  ## 1.1.21 - 2022-02-08 ### Added: - ARMeilleure: A32: Implement SHSUB8 and UHSUB8.   - Implements missing CPU instructions. No known changes in games.  ## 1.1.20 - 2022-02-07 ### Fixed: - Fix headless sdl2 option string.  ## 1.1.19 - 2022-02-06 ### Fixed: - Make sure mesa_glthread gets a lowercase string on Linux.   - Fixes a bug in which MESA was provided with an incorrect environment variable controlling backend threading.  ## 1.1.18 - 2022-02-06 ### Added: - ARMeilleure: A32: Implement SHADD8.   - Implements SHADD8 CPU instruction. No expected changes in games.  ## 1.1.17 - 2022-02-06 ### Added: - ARMeilleure: OpCodeTable: Add CMN (RsReg).   - Implements missing variant of CMN instruction.  ## 1.1.16 - 2022-02-02 ### Fixed: - Try to ensure save data always has a valid owner ID.   - Fixes \"ResultFsPermissionDenied (2002-6400)\" error that would cause games to close during boot with lots of \"ThreadTerminating\" errors.  ## 1.1.15 - 2022-01-31 ### Fixed: - Fix bug that could cause depth buffer to be missing after clear.   - Fixes a regression introduced in 1.0.7168 that caused models not to render in Sonic Colors: Ultimate.  ## 1.1.14 - 2022-01-30 ### Changed: - Remove Appveyor from Readme and SLN.  ## 1.1.13 - 2022-01-29 ### Fixed: - Fix small precision error on CPU reciprocal estimate instructions.   - Fixes some twitching animations in Pok\u00e9mon Legends: Arceus, for example on the main character's left arm.  ## 1.1.12 - 2022-01-29 ### Fixed: - kernel: A bit of refactoring and fix GetThreadContext3 correctness.   - Code cleanup for the kernel. No changes expected in games.  ## 1.1.11 - 2022-01-27 ### Fixed: - Add timestamp to 16-byte/4-word semaphore releases.   - Fixes 20fps cap in The Legend of Zelda: Breath of the Wild.   - Fixes Pok\u00e9mon Legends: Arceus being more pixelated than normal.  ## 1.1.10 - 2022-01-27 ### Fixed: - Fix res scale parameters not being updated in vertex shader.   - Pok\u00e9mon Legends: Arceus no longer breaks graphics at higher resolutions when Gastly is spawned.   ## 1.1.9 - 2022-01-25 ### Fixed: - Convert Octal-Mode to Decimal.   - Fixes autoupdater not setting the correct permissions on Linux/Unix. This would sometimes cause the Ryujinx file to lose its \"executable\" attribute after an autoupdate.   ## 1.1.8 - 2022-01-24 ### Fixed: - Fix regression on PR builds version number since new release system.   - Fixes PR builds showing as \"dirty\" builds.  ## 1.1.7 - 2022-01-24 ### Fixed: - Fix calls passing V128 values on Linux.   - Fixes a regression introduced in 1.0.7000 where in some cases, during the pre-allocation stage, the new register operations would not be added to the call operation node. This would cause the register allocator to not keep track of the fixed registers (possibly overwriting the register values), and also to do register allocation for the operands passed on the call (which it should not do).   - Fixes Pok\u00e9mon Sword/Shield saves becoming corrupted on Linux.   - Fixes a crash when booting Splatoon 2 v5.5.0 on Linux.   - Fixes software memory manager mode not working on Linux.  NOTE: existing saves created on any version after 1.0.7000 are most likely actually corrupted, so you'll need to delete them. Saves created before the bug was introduced (or created on Windows) should be fine.  ## 1.1.6 - 2022-01-23 ### Fixed: - amadeus: Fix possible device sink input out of bound.   - Fixes a crash in Death Coming. Game now boots to menus, however, it will still crash when attempting to contact online servers.  ## 1.1.5 - 2022-01-23 ### Fixed: - Set _vibrationPermitted to return True.   - Games which respect IHidServer::IsVibrationPermitted should now allow vibration to function, for example, Catherine: Full Body.  ## 1.1.4 - 2022-01-22 ### Fixed: - Add support for BC1/2/3 decompression (for 3D textures).   - Fixes garbled text in Tales of Vesperia.   - Fixes blocky explosions in Xenoblade Chronicles 2.   - Fixes rain in Ghosts 'n Goblins Resurrection.  ## 1.1.3 - 2022-01-22 **WARNING**: This version requires a manual update by redownloading it from  as a result of AppVeyor takedown of the project. ### Changed: - Release system was switched to GitHub Release as a result of AppVeyor takedown of the project."},{"location":"dev-guide/","title":"Documents Index","text":"<p>This repo includes several documents that explain both high-level and low-level concepts about Ryujinx and its functions. These are very useful for contributors, to get context that can be very difficult to acquire from just reading code.</p>"},{"location":"dev-guide/#intro-to-ryujinx","title":"Intro to Ryujinx","text":"<p>Ryujinx is an open-source Nintendo Switch emulator, created by gdkchan, written in C#.  * The CPU emulator, ARMeilleure, emulates an ARMv8 CPU and currently has support for most 64-bit ARMv8 and some of the ARMv7 (and older) instructions. * The GPU emulator emulates the Switch's Maxwell GPU using either the OpenGL (version 4.5 minimum), Vulkan, or Metal (via MoltenVK) APIs through a custom build of OpenTK or Silk.NET respectively. * Audio output is entirely supported via C# wrappers for SDL2, with OpenAL &amp; libsoundio as fallbacks.</p>"},{"location":"dev-guide/#getting-started","title":"Getting Started","text":"<ul> <li>Installing the .NET SDK</li> <li>Official .NET Docs</li> </ul>"},{"location":"dev-guide/#contributing-building-testing-benchmarking-profiling-etc","title":"Contributing (Building, testing, benchmarking, profiling, etc.)","text":"<p>If you want to contribute a code change to this repo, start here.</p> <ul> <li>Contributor Guide</li> </ul>"},{"location":"dev-guide/#coding-guidelines","title":"Coding Guidelines","text":"<ul> <li>C# coding style</li> <li>Service Implementation Guidelines - WIP</li> </ul>"},{"location":"dev-guide/#project-docs","title":"Project Docs","text":"<p>To be added. Many project files will contain basic XML docs for key functions and classes in the meantime.</p>"},{"location":"dev-guide/coding-guidelines/coding-style/","title":"C# Coding Style","text":"<p>The general rule we follow is \"use Visual Studio defaults\".  Using an IDE that supports the <code>.editorconfig</code> standard will make this much simpler.</p> <ol> <li>We use Allman style braces, where each brace begins on a new line. A single line statement block can go without braces but the block must be properly indented on its own line and must not be nested in other statement blocks that use braces (See rule 18 for more details). One exception is that a <code>using</code> statement is permitted to be nested within another <code>using</code> statement by starting on the following line at the same indentation level, even if the nested <code>using</code> contains a controlled block.</li> <li>We use four spaces of indentation (no tabs).</li> <li>We use <code>_camelCase</code> for internal and private fields and use <code>readonly</code> where possible. Prefix internal and private instance fields with <code>_</code>, static fields with <code>s_</code> and thread static fields with <code>t_</code>. When used on static fields, <code>readonly</code> should come after <code>static</code> (e.g. <code>static readonly</code> not <code>readonly static</code>).  Public fields should be used sparingly and should use PascalCasing with no prefix when used.</li> <li>We avoid <code>this.</code> unless absolutely necessary.</li> <li>We always specify the visibility, even if it's the default (e.g.    <code>private string _foo</code> not <code>string _foo</code>). Visibility should be the first modifier (e.g.    <code>public abstract</code> not <code>abstract public</code>).</li> <li>Namespace imports should be specified at the top of the file, outside of <code>namespace</code> declarations.</li> <li>Avoid more than one empty line at any time. For example, do not have two    blank lines between members of a type.</li> <li>Avoid spurious free spaces.    For example avoid <code>if (someVar == 0)...</code>, where the dots mark the spurious free spaces.    Consider enabling \"View White Space (Ctrl+R, Ctrl+W)\" or \"Edit -&gt; Advanced -&gt; View White Space\" if using Visual Studio to aid detection.</li> <li>If a file happens to differ in style from these guidelines (e.g. private members are named <code>m_member</code>    rather than <code>_member</code>), the existing style in that file takes precedence.</li> <li>We only use <code>var</code> when the type is explicitly named on the right-hand side, typically due to either <code>new</code> or an explicit cast, e.g. <code>var stream = new FileStream(...)</code> not <code>var stream = OpenStandardInput()</code>.<ul> <li>Similarly, target-typed <code>new()</code> can only be used when the type is explicitly named on the left-hand side, in a variable definition statement or a field definition statement. e.g. <code>FileStream stream = new(...);</code>, but not <code>stream = new(...);</code> (where the type was specified on a previous line).</li> </ul> </li> <li>We use language keywords instead of BCL types (e.g. <code>int, string, float</code> instead of <code>Int32, String, Single</code>, etc) for both type references as well as method calls (e.g. <code>int.Parse</code> instead of <code>Int32.Parse</code>). See issue #13976 for examples.</li> <li>We use PascalCasing to name all our constant local variables and fields. The only exception is for interop code where the constant value should exactly match the name and value of the code you are calling via interop.</li> <li>We use PascalCasing for all method names, including local functions.</li> <li>We use <code>nameof(...)</code> instead of <code>\"...\"</code> whenever possible and relevant.</li> <li>Fields should be specified at the top within type declarations.</li> <li>When including non-ASCII characters in the source code use Unicode escape sequences (\\uXXXX) instead of literal characters. Literal non-ASCII characters occasionally get garbled by a tool or editor.</li> <li>When using labels (for goto), indent the label one less than the current indentation.</li> <li>When using a single-statement if, we follow these conventions:<ul> <li>Never use single-line form (for example: <code>if (source == null) throw new ArgumentNullException(\"source\");</code>)</li> <li>Using braces is always accepted, and required if any block of an <code>if</code>/<code>else if</code>/.../<code>else</code> compound statement uses braces or if a single statement body spans multiple lines.</li> <li>Braces may be omitted only if the body of every block associated with an <code>if</code>/<code>else if</code>/.../<code>else</code> compound statement is placed on a single line.</li> </ul> </li> <li>Make all internal and private types static or sealed unless derivation from them is required.  As with any implementation detail, they can be changed if/when derivation is required in the future.</li> <li>XML docs should be used when writing interfaces or when a class/method is deemed sufficient in scope or complexity.</li> <li>So-called Magic Numbers should be defined as named constants before use (for example <code>for (int i = 56; i &lt; 68; i++)</code> could read <code>for (int i = _currentAge; i &lt; _retireAge; i++)</code>).      This may be ignored for trivial or syntactically common statements.</li> </ol> <p>An EditorConfig file (<code>.editorconfig</code>) has been provided at the root of the runtime repository, enabling C# auto-formatting conforming to the above guidelines.</p>"},{"location":"dev-guide/coding-guidelines/coding-style/#example-file","title":"Example File:","text":"<p><code>ShaderCache.cs:</code></p> <pre><code>using Ryujinx.Common.Configuration;\nusing Ryujinx.Common.Logging;\nusing Ryujinx.Graphics.GAL;\nusing Ryujinx.Graphics.Gpu.Engine.Threed;\nusing Ryujinx.Graphics.Gpu.Engine.Types;\nusing Ryujinx.Graphics.Gpu.Image;\nusing Ryujinx.Graphics.Gpu.Memory;\nusing Ryujinx.Graphics.Gpu.Shader.DiskCache;\nusing Ryujinx.Graphics.Shader;\nusing Ryujinx.Graphics.Shader.Translation;\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\n\nnamespace Ryujinx.Graphics.Gpu.Shader\n{\n    /// &lt;summary&gt;\n    /// Memory cache of shader code.\n    /// &lt;/summary&gt;\n    class ShaderCache : IDisposable\n    {\n        /// &lt;summary&gt;\n        /// Default flags used on the shader translation process.\n        /// &lt;/summary&gt;\n        public const TranslationFlags DefaultFlags = TranslationFlags.DebugMode;\n\n        private readonly struct TranslatedShader\n        {\n            public readonly CachedShaderStage Shader;\n            public readonly ShaderProgram Program;\n\n            public TranslatedShader(CachedShaderStage shader, ShaderProgram program)\n            {\n                Shader = shader;\n                Program = program;\n            }\n        }\n        ...\n\n        /// &lt;summary&gt;\n        /// Processes the queue of shaders that must save their binaries to the disk cache.\n        /// &lt;/summary&gt;\n        public void ProcessShaderCacheQueue()\n        {\n            // Check to see if the binaries for previously compiled shaders are ready, and save them out.\n\n            while (_programsToSaveQueue.TryPeek(out ProgramToSave programToSave))\n            {\n                ProgramLinkStatus result = programToSave.HostProgram.CheckProgramLink(false);\n\n                if (result != ProgramLinkStatus.Incomplete)\n                {\n                    if (result == ProgramLinkStatus.Success)\n                    {\n                        _cacheWriter.AddShader(programToSave.CachedProgram, programToSave.BinaryCode ?? programToSave.HostProgram.GetBinary());\n                    }\n\n                    _programsToSaveQueue.Dequeue();\n                }\n                else\n                {\n                    break;\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>For other languages, our current best guidance is consistency. When editing files, keep new code and changes consistent with the style in the files. For new files, it should conform to the style for that component. If there is a completely new component, anything that is reasonably broadly accepted is fine.</p>"},{"location":"dev-guide/guides/metal-frame-capture/","title":"Mac Metal Frame Capture","text":"<p>Written by: @jcm93</p> <p>Below is the method that I have found to produce reliable Metal GPU frame captures of Switch titles in Ryujinx, using Xcode and the lldb debugger. The first draft of this guide will be \"quick and dirty;\" hopefully, it will be updated continuously so it eventually conforms to best practices, insofar as such a thing can be said to exist in this situation.</p> <p></p>"},{"location":"dev-guide/guides/metal-frame-capture/#external-build-system-project-in-xcode","title":"External Build System Project in Xcode","text":"<p>Xcode seems to be more willing to harness an application properly if it's nominally in charge of the entire build process, even if the application isn't using a familiar C-family build toolchain. So we will add Ryujinx as an \"External Build System\" project, with <code>dotnet</code>, our favorite external build system.</p> <ol> <li>Clone the Ryujinx github repository as normal: <code>git clone https://github.com/ryujinx-mirror/ryujinx</code></li> <li>In Xcode, create a New Project. For the template, navigate to \"Other\", then search for or select \"External Build System\". For the \"Build Tool\", provide the location of your <code>dotnet</code> installation. For me, this is <code>/usr/local/share/dotnet/dotnet</code>. Create the project in any directory you wish; for convenience, you may want to create a folder in your cloned Ryujinx repository named <code>macos-xcode</code> or similar.</li> <li>With your project created, for the build Arguments, substitute <code>build -c debug src/Ryujinx</code>. For the directory, browse and pick the base directory for your cloned Ryujinx repository that contains the <code>Ryujinx.sln</code> file. Uncheck \"Pass build settings in environment.\"<ul> <li>If you have better knowledge of Ryujinx dotnet build arguments, please put whatever here for your preferred Ryujinx build settings. This is just the most minimal way I found to get it building without poring over Ryujinx build scripts.</li> </ul> </li> <li>Optionally, add all project files to the project with \"File-&gt;Add Files to...\", creating folder references and selecting the build target.</li> <li>Build the project.</li> <li>Tell Xcode the binary you want it to debug by navigating to Product-&gt;Scheme-&gt;Edit Scheme. Under Info, then Executable, select Other.... Then, at the prompt, navigate to your repository folder, then the binary location. In the example from step 3, this would be <code>&lt;base directory&gt;/src/Ryujinx/bin/Debug/net8.0/Ryujinx</code>.</li> <li>Also in the Scheme editor, under Options, then \"GPU Frame Capture\", select \"Metal\" instead of \"Automatically.\"</li> <li>At this point, Ryujinx should be building properly, and launching and harnessing properly within the Xcode debugger. However, we're not done yet!</li> </ol>"},{"location":"dev-guide/guides/metal-frame-capture/#build-debug-moltenvk","title":"Build Debug MoltenVK","text":"<p>We need a version of MoltenVK compiled with debug symbols. Luckily, building MoltenVK per its documentation is straightforward. Follow its build steps here, making sure you end up building in Debug mode.</p> <p>[!NOTE] Ryujinx uses an old version of MoltenVK, 1.2.0. Checking out its code at 1.2.0 and building on a current SDK should be straightforward. However, I typically opt to build current/main MoltenVK with a one line patch to fix an issue with occlusion queries. That patch is reproduced here: MoltenVK/MoltenVK/Commands/MVKCommandEncoderState.mm</p> <p>With debug MoltenVK in hand, replace the <code>libMoltenVK.dylib</code> binary in the <code>src/Ryujinx/bin/Debug/net8.0/</code> directory of your Ryujinx repository with the debug .dylib you just built.</p>"},{"location":"dev-guide/guides/metal-frame-capture/#miscellany","title":"Miscellany","text":"<p>You should now be able to produce frame captures stably within Xcode of Ryujinx titles. To save a capture as a shareable file, use the Export button in the Summary tab. A couple of other notes: * You will need to tell lldb to ignore <code>SIGUSR1</code>; for whatever reason, this pops up everywhere once guest code is loaded. To do so within your current lldb debugger session, just enter <code>pro hand -p true -s false SIGUSR1</code>. * We did not enter any of the usual \"secret sauce\" for enabling capture, like adding <code>Metal Capture Enabled = YES</code> to the Info.plist file or <code>MTL_CAPTURE_ENABLE=1</code> to our environment variables. In my testing, none of these variables actually exposed the option for frame capture in Xcode. Rather, the important determinant in the option being enabled was what we did in Step 7. If you better integrate Ryujinx's build scripts, these other options might come into play more. * The usual caveats for Ryujinx debugging apply. Mainly, if we aren't using the Hypervisor, we need to use the Software memory mode, or else hit segfaults nearly instantly in guest code.</p>"},{"location":"dev-guide/workflow/pr-guide/","title":"Pull Request Guide","text":""},{"location":"dev-guide/workflow/pr-guide/#contributing-rules","title":"Contributing Rules","text":"<p>All contributions to Ryujinx/Ryujinx repository are made via pull requests (PRs) rather than through direct commits. The pull requests are reviewed and merged by the maintainers after a review and at least two approvals from the core development team.</p> <p>To merge pull requests, you must have write permissions in the repository.</p>"},{"location":"dev-guide/workflow/pr-guide/#quick-code-review-rules","title":"Quick Code Review Rules","text":"<ul> <li>Do not mix unrelated changes in one pull request. For example, a code style change should never be mixed with a bug fix.</li> <li>All changes should follow the existing code style. You can read more about our code style at docs/coding-guidelines.</li> <li>Adding external dependencies is to be avoided unless not doing so would introduce significant complexity. Any dependency addition should be justified and discussed before merge.</li> <li>Use Draft pull requests for changes you are still working on but want early CI loop feedback. When you think your changes are ready for review, change the status of your pull request.</li> <li>Rebase your changes when required or directly requested. Changes should always be commited on top of the upstream branch, not the other way around.</li> <li>If you are asked to make changes during the review process do them as a new commit.</li> <li>Only resolve GitHub conversations with reviewers once they have been addressed with a commit, or via a mutual agreement.</li> </ul>"},{"location":"dev-guide/workflow/pr-guide/#pull-request-ownership","title":"Pull Request Ownership","text":"<p>Every pull request will have automatically have labels and reviewers assigned. The label not only indicates the code segment which the change touches but also the area reviewers to be assigned.</p> <p>If during the code review process a merge conflict occurs, the PR author is responsible for its resolution. Help will be provided if necessary although GitHub makes this easier by allowing simple conflict resolution using the conflict-editor.</p>"},{"location":"dev-guide/workflow/pr-guide/#pull-request-builds","title":"Pull Request Builds","text":"<p>When submitting a PR to the <code>Ryujinx/Ryujinx</code> repository, various builds will run validating many areas to ensure we keep developer productivity and product quality high. These various workflows can be tracked in the Actions tab of the repository. If the job continues to completion, the build artifacts will be uploaded and posted as a comment in the PR discussion.</p>"},{"location":"dev-guide/workflow/pr-guide/#review-turnaround-times","title":"Review Turnaround Times","text":"<p>Ryujinx is a project that is maintained by volunteers on a completely free-time basis. As such we cannot guarantee any particular timeframe for pull request review and approval. Weeks to months are common for larger (&gt;500 line) PRs but there are some additional best practises to avoid review purgatory.</p> <ul> <li>Make the reviewers life easier wherever possible. Make use of descriptive commit names, code comments and XML docs where applicable.</li> <li>If there is disagreement on feedback then always lean on the side of the development team and community over any personal opinion.</li> <li>We're human. We miss things. We forget things. If there has been radio silence on your changes for a substantial period of time then do not hesitate to reach out directly either with something simple like \"bump\" on GitHub or a directly on Discord.</li> </ul> <p>To re-iterate, make the review as easy for us as possible, respond promptly and be comfortable to interact directly with us for anything else.</p>"},{"location":"dev-guide/workflow/pr-guide/#merging-pull-requests","title":"Merging Pull Requests","text":"<p>Anyone with write access can merge a pull request manually when the following conditions have been met:</p> <ul> <li>The PR has been approved by two reviewers and any other objections are addressed.<ul> <li>You can request follow up reviews from the original reviewers if they requested changes.</li> </ul> </li> <li>The PR successfully builds and passes all tests in the Continuous Integration (CI) system. In case of failures, refer to the Actions tab of your PR.</li> </ul> <p>Typically, PRs are merged as one commit (squash merges). It creates a simpler history than a Merge Commit. \"Special circumstances\" are rare, and typically mean that there are a series of cleanly separated changes that will be too hard to understand if squashed together, or for some reason we want to preserve the ability to dissect them.</p>"},{"location":"dev-guide/workflow/pr-guide/#blocking-pull-request-merging","title":"Blocking Pull Request Merging","text":"<p>If for whatever reason you would like to move your pull request back to an in-progress status to avoid merging it in the current form, you can turn the PR into a draft PR by selecting the option under the reviewers section. Alternatively, you can do that by adding [WIP] prefix to the pull request title.</p>"},{"location":"dev-guide/workflow/pr-guide/#old-pull-request-policy","title":"Old Pull Request Policy","text":"<p>From time to time we will review older PRs and check them for relevance. If we find the PR is inactive or no longer applies, we will close it. As the PR owner, you can simply reopen it if you feel your closed PR needs our attention.</p>"},{"location":"faq/faq/","title":"FAQ / Troubleshooting","text":"<p>This is an assortment of the most common questions and issues Ryujinx users are having as of this document's latest revision date.</p> <p>Press <code>CTRL+F</code> or <code>F3</code> and search for any keywords or errors you may be interested in. If your question, error or issue is not addressed here, please join Discord and we\u2019ll answer it there, and perhaps add it to this page.</p>"},{"location":"faq/faq/#table-of-contents","title":"Table of Contents","text":"<p>Frequently Asked Questions</p> <p>Common Errors and Troubleshooting</p> <p>Game-Specific Errors and Troubleshooting</p>"},{"location":"faq/faq/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"faq/faq/#wheres-the-prodkeys-filewhere-can-i-download-game","title":"\u2022 Where's the prod.keys file?/Where can I download [game]?","text":"<p>We do not support piracy. It is forbidden to request copyrighted content (Firmware/Games/Keys/Shaders) on our repositories or on the Ryujinx Discord.</p>"},{"location":"faq/faq/#do-i-need-a-switch-to-use-this-emulator","title":"\u2022 Do I need a Switch to use this emulator?","text":"<p>Ryujinx emulator is capable of running many homebrew applications, and can be a crucial tool in the development and debugging of homebrew applications and games. To play commercial games, you will need access to a Switch compatible with custom firmware (CFW), which will enable you to dump your system firmware, keys and legally purchased games.</p>"},{"location":"faq/faq/#what-does-dumping-mean","title":"\u2022 What does \"dumping\" mean?","text":"<p>In this context, to dump files is to transfer them from your hacked Nintendo Switch to your PC, using either a microSD card or a USB-C cable.</p>"},{"location":"faq/faq/#how-can-i-dump-my-firmwaregameskeys","title":"\u2022 How can I dump my firmware/games/keys?","text":"<p>First, you need to hack your Nintendo Switch, which you can learn how to do here: https://nh-server.github.io/switch-guide/.</p> <p>Once you have hacked your Switch, backed up your keys and dumped your firmware, you may use the nxdumptool homebrew on your Switch to dump your games, updates and DLC files.</p>"},{"location":"faq/faq/#why-use-an-emulator-if-i-already-have-a-switch","title":"\u2022 Why use an emulator if I already have a Switch?","text":"<ol> <li>To play in 4K/higher resolutions than the Switch.</li> <li>Allows multiple different controllers to be used.</li> <li>Smoother/higher FPS with good enough hardware.</li> <li>Play over the internet with LDN on games that support local wireless.</li> <li>Modding games is faster and easier than on Switch.</li> <li>Don't need a capture card to stream or record.</li> <li>Easily use older updates of games you've dumped before if something you want gets patched.</li> <li>Convenience: you avoid having several consoles plugged in and switching between them to play what you want.</li> <li>Years down the line, online shops and services will close, and hardware will start breaking down, but emulation and digital dumps won\u2019t; in the future, the console and its games will be preserved digitally thanks to Ryujinx and your game backups that you created in the present, even after the system is long dead and your console has become a paperweight.</li> </ol>"},{"location":"faq/faq/#how-well-does-game-run-on-ryujinx","title":"\u2022 How well does [game] run on Ryujinx?","text":"<p>You can find compatibility reports here: https://github.com/ryujinx-mirror/ryujinx-Games-List/issues</p> <p>If you wish to contribute, you can open a new issue if the game has never been added, or you can add your test results as a comment on a game's issue for it to be merged into the top post, as long as it contains all the necessary information.</p>"},{"location":"faq/faq/#what-are-the-optimal-best-settings","title":"\u2022 What are the optimal best settings?","text":"<p>Default settings and Vulkan if your GPU supports it. Ryujinx works out of the box and is already on the best settings by default.</p> <p>You can of course tinker with the graphics settings (resolution, antialiasing, scaling filter, anisotropic filtering) so you can achieve the proper image quality for your setup, but you shouldn\u2019t change anything else unless specified in compatibility entries or instructed by a staff member. You\u2019re very likely to make performance worse (and in a few cases, crash) if you do.</p>"},{"location":"faq/faq/#i-have-no-idea-what-im-doing-how-do-i-ryujinx","title":"\u2022 I have no idea what I'm doing. How do I Ryujinx?","text":"<p>Follow the Ryujinx Setup &amp; Configuration Guide: https://github.com/ryujinx-mirror/ryujinx/wiki/Ryujinx-Setup-&amp;-Configuration-Guide or see the Readme: https://github.com/ryujinx-mirror/ryujinx/blob/master/README.md .</p> <p>If you are still having trouble, please visit a support channel on our Discord Server and we will be happy to assist.</p>"},{"location":"faq/faq/#how-do-i-add-games-to-ryujinx","title":"\u2022 How do I add games to Ryujinx?","text":"<p>Add a games directory in <code>Settings</code> &gt; <code>User Interface</code> &gt; <code>Game Directories</code> &gt; <code>Add</code>.</p> <p></p> <p>The games don\u2019t have to show up on the window where you are selecting the folder, as it\u2019s looking for folders, not game files.</p> <p>If after selecting the correct game directory your games still do not show up on the main Ryujinx window, either your games aren\u2019t in the correct format or you\u2019ve chosen the wrong directory.</p>"},{"location":"faq/faq/#how-can-i-use-a-single-joyconds4ds5ps4ps5pro-controllerxbox-controller-on-ryujinx","title":"\u2022 How can I use a single joycon/DS4/DS5/PS4/PS5/Pro Controller/Xbox controller on Ryujinx?","text":"<p>All of these controllers are supported natively. Simply head to <code>Options</code> &gt; <code>Settings</code> &gt; <code>Input</code> &gt; <code>Player 1</code> &gt; <code>Configure</code>, select your gamepad from the <code>Input Device</code> dropdown, click <code>Load</code> top right, then click <code>Save</code>.</p>"},{"location":"faq/faq/#how-can-i-use-dual-joycons-on-ryujinx","title":"\u2022 How can I use dual joycons on Ryujinx?","text":"<p>You need DS4Windows for the joycon pair to show up on Ryujinx (they will be an \"Xbox\" controller under input devices). On DS4Windows, select joycon support and enable the UDP server for motion controls.</p>"},{"location":"faq/faq/#how-can-i-use-a-gamecube-controller-on-ryujinx","title":"\u2022 How can I use a GameCube controller on Ryujinx?","text":"<p>You will need Delfinovin.</p> <p>If your joysticks don\u2019t work, spin them for a bit until they do.</p>"},{"location":"faq/faq/#how-can-i-play-with-mouse-and-keyboard-controls","title":"\u2022 How can I play with mouse and keyboard controls?","text":"<p>Mouse controls are not currently supported. You can make do with something like mouse2joy or reWASD, but the vast majority of our users have preferred controller gyro over this workaround.</p>"},{"location":"faq/faq/#how-can-i-unbind-a-buttonkey","title":"\u2022 How can I unbind a button/key?","text":"<p>Left click on the binding then press middle click on your mouse.</p>"},{"location":"faq/faq/#help-why-is-the-emulator-crashing","title":"\u2022 Help! Why is the emulator crashing?","text":"<p>Refer to the troubleshooting and game-specific sections below.</p> <p>If you can\u2019t find your issue in this page: join our Discord server, provide an explanation of the issue and upload a .log file to the appropriate support channel. Our staff will take a look and give you some pointers on what's going wrong.</p>"},{"location":"faq/faq/#how-can-i-lower-the-resolution","title":"\u2022 How can I lower the resolution?","text":"<p>Disable docked mode or set a custom resolution multiplier of 0.xx (for example: <code>0.75</code>) or 0,xx (<code>0,75</code>), depending on what your language uses.</p> <p>Though if you\u2019re trying to improve performance by doing this, keep in mind it will only work in the unlikely scenario that your GPU is the bottleneck. The vast majority of the time, emulation is CPU-bottlenecked, as it mostly runs on CPU.</p>"},{"location":"faq/faq/#game-runs-really-slow-for-me-what-can-i-do-to-increase-the-fps","title":"\u2022 Game runs really slow for me. What can I do to increase the FPS?","text":"<p>Make sure your graphics card drivers and Ryujinx are up to date.</p> <p>If you have an AMD or Intel graphics card, you should always use the Vulkan backend instead of OpenGL. You may also dual boot Linux if you're still experiencing issues, as Mesa drivers are usually less buggy than AMD/Intel Windows drivers.</p> <p>You may also be experiencing shader compilation stuttering (see the below answer), in which case, the more you play, the less of a problem it\u2019ll be, as the shader cache will build up and the stutters will slowly go away.</p> <p>If your game is still slow, you might need to get a better PC or wait for emulator optimizations.</p>"},{"location":"faq/faq/#what-are-shaders-and-why-do-i-need-them","title":"\u2022 What are shaders and why do I need them?","text":"<p>Shaders are small programs used in videogame rendering. In modern emulation (and even some PC games), every time a new model or effect shows up on screen, its shader needs to be compiled (read: translated) for your GPU. While the shader is being compiled, the game needs to pause, which you will know as shader compilation stuttering. Once the shader has been compiled, it gets stored in a shader cache, which will ensure you don\u2019t stutter the next time that shader comes up.</p> <p>Unfortunately, shader compilation is not easy to circumvent. Vulkan is significantly faster at shader compilation than OpenGL thanks to SPIR-V, Vulkan's shader backend. On first runs we recommend letting games play out opening cutscenes and then restarting, or running anything that makes them play themselves, such as automatic racing in MK8 or bot matches in SSBU. This will compile some shaders and, with a fast enough CPU and Vulkan, the hiccups will be greatly reduced.</p>"},{"location":"faq/faq/#how-do-i-enable-asynchronous-shader-compilationasync-shaders","title":"\u2022 How do I enable asynchronous shader compilation/async shaders?","text":"<p>Asynchronous shader compilation introduces graphical glitches, which sometimes don\u2019t go away until a restart, and does not actually eliminate stuttering completely; as such, the Ryujinx developers have no plans to implement this feature. However, outside contributors are welcome to write and open a pull request for it, and it will be reviewed, approved and added to the main builds if it's up to Ryujinx standards.</p>"},{"location":"faq/faq/#why-is-my-game-30fps","title":"\u2022 Why is my game 30fps?","text":"<p>Because the game you're playing is a 30fps game.</p>"},{"location":"faq/faq/#how-do-i-uncap-the-framerate","title":"\u2022 How do I uncap the framerate?","text":"<p><code>F1</code> uncaps fps, or <code>Tab</code> if you have an older install. You can also click <code>Vsync</code> at the bottom left of the status bar in windowed mode.</p>"},{"location":"faq/faq/#but-now-my-game-is-going-too-fast-how-do-i-make-it-normal-speed","title":"\u2022 But now my game is going too fast! How do I make it normal speed?","text":"<p>The vast majority of Nintendo Switch games have their physics and speed tied to the framerate, and as such, increasing the framerate increases the game speed. In these cases, you need to find a 60fps mod (or whatever target you want; some 120fps mods exist) for your specific game.</p> <p>You also have to keep in mind that these mods may be static, which means going under the target may cause the game to run in slow motion. If your hardware can\u2019t run a game at that target, you will be better off not using framerate mods.</p>"},{"location":"faq/faq/#how-do-i-install-mods-for-a-game","title":"\u2022 How do I install mods for a game?","text":"<p>Right click the game &gt; <code>Open Mods Directory</code>. Extract your mods here. Folder structure should be <code>Ryujinx</code> &gt; <code>mods</code> &gt; <code>contents</code> &gt; [game ID] &gt; [mod name] &gt; <code>exefs</code> or <code>romfs</code> &gt; mod files.</p> <p></p> <p>Afterwards, right click the game and click on <code>Manage Mods</code> to ensure that the mods are enabled before playing.</p> <p></p> <p>If the mods don't work in-game, they are most likely not for your version of the game.</p>"},{"location":"faq/faq/#how-do-i-install-cheats-for-a-game","title":"\u2022 How do I install cheats for a game?","text":"<p>Right click the game &gt; <code>Open Mods Directory</code>. Create a folder named <code>Cheats</code>, and inside it, create a .txt file with the first 16 characters of the game version\u2019s build ID as the file name. The BID is usually mentioned somewhere in the same page as the cheats themselves, but if you can't find it, it can be obtained from the cheat manager. </p> <p></p> <p></p> <p>Open the .txt file and add your cheats into it. Afterwards, right click the game &gt; <code>Manage Cheats</code> and enable the ones you want to use. You can also manage them during gameplay by going into <code>Actions</code> &gt; <code>Manage Cheats</code>.</p> <p>If the cheats don't work in-game, they are most likely not for your version of the game.</p>"},{"location":"faq/faq/#what-are-the-hotkeyskeyboard-shortcuts-in-ryujinx","title":"\u2022 What are the hotkeys/\"keyboard shortcuts\" in Ryujinx?","text":"<ul> <li><code>ESC</code> exits the emulation.</li> <li><code>F1</code> toggles Vsync (read: framerate cap).</li> <li><code>F2</code> toggles mute/unmute.</li> <li><code>F4</code> unhides the UI. It doesn\u2019t hide it so as to avoid accidents.</li> <li><code>F5</code> pauses and unpauses emulation.</li> <li><code>F8</code> takes a screenshot at the internal resolution the game is rendering at (and not at the screen resolution). The screenshots are saved in your system\u2019s pictures folder (ex. <code>C:\\Users\\yourname\\Pictures\\Ryujinx</code>) or in <code>portable\\screenshots</code> if you\u2019re using a portable install.</li> <li><code>F9</code> toggles docked/handheld mode.</li> <li><code>F11</code>/<code>Alt+Enter</code> toggles fullscreen.</li> </ul> <p>There are also hotkeys for increasing and decreasing resolution scaling, and increasing and decreasing sound volume, but they are unbound by default. Most of these are exposed and configurable in the Avalonia UI, and there's an open pull request to add the remaining ones.</p>"},{"location":"faq/faq/#what-is-avalonia","title":"\u2022 What is Avalonia?","text":"<p>Avalonia is a user interface framework. We have been developing a new Avalonia-based UI for quite some time now, and we plan to completely remove the old GTK UI soon.</p>"},{"location":"faq/faq/#where-can-i-try-this-avalonia-thing","title":"\u2022 Where can I try this Avalonia thing?","text":"<p>As of 1.1.1217, Avalonia has become the default UI.</p>"},{"location":"faq/faq/#does-avalonia-autoupdate","title":"\u2022 Does Avalonia autoupdate?","text":"<p>Yes.</p>"},{"location":"faq/faq/#how-do-i-update-the-emulator","title":"\u2022 How do I update the emulator?","text":"<p>Click on <code>Help</code> then <code>Check for Updates</code>.</p>"},{"location":"faq/faq/#how-do-i-report-a-bug","title":"\u2022 How do I report a bug?","text":"<p>If you've found a bug, please first make sure it's not been reported on the main issue tracker or on the game compatibility list. Then post a comment in the game's compatibility entry with a screenshot, a log and a save file, along with an explanation on how to reproduce the issue. This allows our developers to quickly look into bugs, without having to worry about how to reproduce them.</p>"},{"location":"faq/faq/#how-well-does-ryujinx-run-on-macos","title":"\u2022 How well does Ryujinx run on macOS?","text":"<p>Apple Silicon macOS devices, such as the M1 or M2, can run Ryujinx with good playability across many titles.</p> <p>Intel Macs have a lot more issues due to old, deprecated drivers or unsupported hardware. A lot of integrated Intel GPUs (5<sup>th</sup> gen or older) don\u2019t support the necessary Vulkan featureset to work.</p> <p>On Intel Macs with AMD GPUs or newer Intel iGPUs, you likely want to either dual boot Linux or use Boot Camp to run Windows, as macOS drivers for these graphics cards leave much to be desired.</p> <p>Keep in mind Ryujinx needs bare metal access, so it won't run on a VM without some kind of GPU passthrough.</p>"},{"location":"faq/faq/#can-i-run-ryujinx-on-iphoneipadios","title":"\u2022 Can I run Ryujinx on iPhone/iPad/iOS?","text":"<p>No. iOS heavily restricts JIT, does not completely support .NET runtime and does not give apps sufficient RAM to run something such as Ryujinx, plus sideloading has plenty of issues, among other things. The iOS space needs to change significantly before Ryujinx on iOS is even a consideration.</p>"},{"location":"faq/faq/#can-i-run-ryujinx-on-android","title":"\u2022 Can I run Ryujinx on Android?","text":"<p>No. While we would love to see Ryujinx on Android devices, our priorities currently lie in improving the core experience for Windows, Linux and macOS users.</p>"},{"location":"faq/faq/#can-i-run-ryujinx-on-xbox-series-x","title":"\u2022 Can I run Ryujinx on Xbox Series X?","text":"<p>No. It requires a DirectX renderer, which Ryujinx does not have at the moment. There are also RAM limitations and some graphics features that Ryujinx needs aren\u2019t supported on DirectX, among other things.</p>"},{"location":"faq/faq/#when-is-feature-coming","title":"\u2022 When is [feature] coming?","text":"<p>We don\u2019t like giving ETAs, as all of our developers work on Ryujinx in their free time, and you can never know when something will be entirely ready in open source projects in general.</p> <p>If you would like to help speed up the process, we currently have a Patreon goal that, when reached, will help gdkchan, the main developer and project lead, to become a full-time developer.</p>"},{"location":"faq/faq/#has-feature-been-implementedbug-been-fixed-yet","title":"\u2022 Has [feature] been implemented/[bug] been fixed yet?","text":"<p>You can search for it by pressing <code>CTRL+F</code> or <code>F3</code> on our changelog page: https://github.com/ryujinx-mirror/ryujinx/wiki/Changelog</p>"},{"location":"faq/faq/#how-can-i-create-a-mii","title":"\u2022 How can I create a Mii?","text":"<p><code>File</code> &gt; <code>Load/Open Applet</code> &gt; <code>Mii Editor</code>. You can\u2019t create them from in-game as Ryujinx doesn\u2019t support loading applets during gameplay yet.</p>"},{"location":"faq/faq/#how-can-i-use-an-amiibo","title":"\u2022 How can I use an Amiibo?","text":"<p>Go in-game to where it asks you to scan one, then click on <code>Actions</code> &gt; <code>Scan an Amiibo</code>.</p>"},{"location":"faq/faq/#where-can-i-find-a-games-save-files","title":"\u2022 Where can I find a game's save files?","text":"<p>Once you have added a games directory, right click a game and select <code>Open User Save Directory</code> or <code>Open Device Save Directory</code>. Most games utilise a user save, but some games use a system save; for example Animal Crossing.</p> <p></p> <p>Save files are all compatible across Switch devices and all Switch emulators, so you may copy and paste them anywhere and they will still work.</p>"},{"location":"faq/faq/#where-can-i-find-all-game-save-files","title":"\u2022 Where can I find ALL game save files?","text":"<p><code>C:\\Users\\yourname\\AppData\\Roaming\\Ryujinx\\bis\\user\\save\\</code> or <code>\\portable\\bis\\user\\save</code> if you're on a portable install.</p>"},{"location":"faq/faq/#why-are-the-save-folders-all-sorted-by-some-weird-numerical-order-instead-of-having-their-game-ids","title":"\u2022 Why are the save folders all sorted by some weird numerical order instead of having their game IDs?","text":"<p>This is how the Switch itself does it. We are merely trying to emulate the Nintendo Switch filesystem properly.</p>"},{"location":"faq/faq/#can-i-extract-data-from-a-game-using-ryujinx","title":"\u2022 Can I extract data from a game using Ryujinx?","text":"<p>Once you have added a games directory, right click on a game &gt; <code>Extract Data</code>, choose the section you want to extract, then select the folder you want to extract it to.</p> <p>DLC data is NOT extracted currently.</p>"},{"location":"faq/faq/#why-is-the-option-to-extract-data-greyed-out","title":"\u2022 Why is the option to extract data greyed out?","text":"<p>It's disabled on the LDN builds. Use the main Ryujinx build.</p>"},{"location":"faq/faq/#what-is-fifo-and-how-do-i-lower-it","title":"\u2022 What is FIFO% and how do I lower it?","text":"<p>FIFO (First In First Out) is the emulated GPU's command queue. Higher percentage means the commands are taking longer to be processed by your CPU/Ryujinx, lower percentage means the command queue is not the limiting factor. The acronym describes the order in which the commands are processed.</p> <p>To reiterate, this is not GPU usage, it's the emulated Nintendo Switch's GPU commands, which are processed by your CPU (as is most of the stuff in an emulator) and then fed to your GPU in order to present an image.</p>"},{"location":"faq/faq/#how-does-cpu-usage-work-in-ryujinx","title":"\u2022 How does CPU usage work in Ryujinx?","text":"<p>Ryujinx has 1:1 guest to host threads (but a scheduler keeps only one active per 4 cores at a time), there is one GPU command processing thread, there is optionally one GPU backend thread, there are up to 8 shader background compile threads, there is a dynamic number of JIT highcq background threads, and there are an unbounded number of ASTC decompression threads.</p>"},{"location":"faq/faq/#how-do-i-build-a-pr","title":"\u2022 How do I build a PR?","text":"<p>To build a pull request, first of all download and install the .NET SDK. Go to the top of the PR &gt; click the link after \"from\" (ex. <code>gdkchan:true-gmem</code>), click the green <code>&lt;&gt; Code</code> button &gt; <code>Download ZIP</code>, extract it, open the extracted folder, <code>shift+right click</code> on an empty area of the folder, then click <code>Open PowerShell window here</code>, type <code>dotnet publish -c Release</code> and click <code>Enter</code>. After it\u2019s done, the window will say where it put the files. If you still can\u2019t find them, search for <code>Ryujinx.exe</code>, or <code>Ryujinx.Ava.exe</code> for the Avalonia build.</p>"},{"location":"faq/faq/#how-do-i-play-online-multiplayer","title":"\u2022 How do I play online multiplayer?","text":"<p>With our LDN build, which allows playing games that feature local wireless or local play, simulating 2 consoles being within close proximity to each other, with other Ryujinx LDN players over the Internet.</p> <p>See the Multiplayer Guide here: https://github.com/ryujinx-mirror/ryujinx/wiki/Multiplayer-(LDN-Local-Wireless)-Guide</p>"},{"location":"faq/faq/#when-i-click-on-connect-to-the-internet-ryujinx-doesnt-connect","title":"\u2022 When I click on connect to the internet, Ryujinx doesn\u2019t connect?","text":"<p>See the multiplayer guide above. You\u2019re not supposed to click on anything that mentions \u201conline\u201d or \u201cthe internet\u201d in-game as that leads to Nintendo servers; you\u2019re supposed to find the local play/local wireless/play locally option, which is then used to connect over the internet with other Ryujinx users.</p>"},{"location":"faq/faq/#what-multiplayer-modes-does-ryujinx-support-and-what-are-the-differences-between-them","title":"\u2022 What multiplayer modes does Ryujinx support and what are the differences between them?","text":"<p>LDN/local wireless/local play is an ad-hoc WiFi connection between 2 or more consoles in close proximity. A ton of games have this on the Switch. We use this to connect Ryujinx instances over the internet.</p> <p>ldn_mitm makes LDN/local wireless/local play behave as if it were LAN, allowing for same-network (local) connections. This can be used to connect Ryujinx with hacked consoles that have ldn_mitm installed on them. If you use XLink Kai, you can connect via ldn_mitm with other Ryujinx and hacked Switch consoles through the internet, not just locally.</p> <p>LAN is 2 or more systems connecting through an access point locally. About 15 games have this on the Switch. Games with a LAN mode can connect with any consoles or Ryujinx instances on the same network. If you use XLink Kai or a VPN like Zerotier, you can connect LAN games across any Ryujinx instances, Switch consoles and other emulators through the internet, not just locally.</p> <p>Nintendo Switch Online is not supported. Custom servers that replicate Nintendo Switch Online are not supported.</p>"},{"location":"faq/faq/#how-can-i-connect-ryujinx-to-a-switch","title":"\u2022 How can I connect Ryujinx to a Switch?","text":"<p>Read the above answer, specifically the LAN and ldn_mitm parts.</p> <p>Hacked consoles can use both LAN and ldn_mitm. To connect with unhacked consoles, the game needs to include a LAN mode. At the time of writing, only a handful of games support LAN mode on Switch; if the game you\u2019re playing is not one of them, you can\u2019t connect them to an unhacked Switch yet. It may become possible in the future.</p>"},{"location":"faq/faq/#can-i-play-online-with-my-friend-whos-using-a-nintendo-switch","title":"\u2022 Can I play online with my friend who\u2019s using a Nintendo Switch?","text":"<p>See the previous two answers. To play with a Nintendo Switch over the internet, you\u2019re gonna need XLink Kai or a VPN like Zerotier, and also, if the game doesn\u2019t have a LAN mode, the Nintendo Switch will need to be hacked as you will need to use ldn_mitm. There is currently no way to hook up a Nintendo Switch console to Ryujinx\u2019s LDN servers. However, in the future it may be possible to connect a PC to an unmodded Switch via LDN locally, without the need for ldn_mitm.</p>"},{"location":"faq/faq/#can-i-trade-pokemon-between-ryujinx-and-my-switch","title":"\u2022 Can I trade Pok\u00e9mon between Ryujinx and my Switch?","text":"<p>If the Switch isn't hacked, you can only do it on Pok\u00e9mon Sword and Shield. However, an update to the game (not to Ryujinx) broke LAN mode, and it only works for a select lucky few.</p>"},{"location":"faq/faq/#why-do-we-keep-disconnecting","title":"\u2022 Why do we keep disconnecting?","text":"<p>Some games are extremely finicky and will disconnect the moment anyone\u2019s framerate drops, like Mario Kart 8 Deluxe. This includes shader compilation stuttering, so every player will have to play through every track in single player mode first, in order to cache shaders, and also ensure that they can maintain 60fps on every stage. Remember to keep Vsync enabled as well, since it acts as a framelimiter.</p>"},{"location":"faq/faq/#im-playing-with-a-friend-and-why-is-it-so-laggy","title":"\u2022 I\u2019m playing with a friend and why is it so laggy?","text":"<p>Real world distance still applies, so if you\u2019re in different continents or just really far away from each other on the Earth, then you will have the corresponding latency.</p> <p>It can also be that a P2P connection was not formed and you\u2019re connecting via the master server, which will of course increase latency as well. If this is happening, you can try connecting using ldn_mitm in conjunction with either XLink Kai or a VPN like Zerotier, which would allow you to connect to each other directly.</p> <p>If you\u2019re playing Super Smash Bros. Ultimate, the game has latency baked into it and pretty bad netcode. Most Smash players use Parsec instead of LDN to play together, so you could try that instead.</p>"},{"location":"faq/faq/#what-does-ldn-stand-for","title":"\u2022 What does LDN stand for?","text":"<p>Nobody actually knows, but our best guess is \u201cLocal Direct Network\u201d or \"Local Distance Network\". Nintendo internally refer to local wireless functionality as \u201cLDN\u201d, but the full name is never used.</p>"},{"location":"faq/faq/#can-i-make-ryujinx-into-a-portable-install","title":"\u2022 Can I make Ryujinx into a portable install?","text":"<p>Yes! See the portable mode quick reference guide.</p>"},{"location":"faq/faq/#whats-a-portable-install","title":"\u2022 What\u2019s a portable install?","text":"<p>By default, Ryujinx uses your <code>C:\\Users\\yourname\\AppData\\Roaming\\Ryujinx</code> directory for storing firmware, keys, save files, configs, caches etc. If you make a folder named <code>portable</code> in the same directory as the Ryujinx executable, the emulator will use that folder instead of the AppData one to store all those files. This is useful if you would like to keep everything in one place, or to avoid settings resetting or shaders constantly rebuilding if you\u2019re testing multiple different Ryujinx versions.</p>"},{"location":"faq/faq/#how-can-i-support-ryujinx","title":"\u2022 How can I support Ryujinx?","text":"<p>There are many ways to support or contribute to Ryujinx. You can support us through Patreon (https://www.patreon.com/ryujinx) or you can boost the server with Discord Nitro. If you know how to help somebody in support, you can help us by answering questions there. You can help with testing future changes to the emulator in Discord\u2019s #pr-testing channel or in a PR\u2019s discussion page as well.</p> <p>If you are a developer, there are Good First Issues listed on our issue tracker. We do encourage you to talk to some devs in our Discord\u2019s development channel before setting off, so we can confirm your work isn't conflicting with another user's, and so we can help you get used to the codebase and what needs to be done with various issues.</p>"},{"location":"faq/faq/#common-errors-and-troubleshooting","title":"Common Errors and Troubleshooting","text":"<p>Most of the errors below will be displayed on the console or log files. To view your log files, go to <code>File</code> &gt; <code>Open Logs Folder</code>. You\u2019ll likely want to open the biggest and latest one of the 3 files.</p> <p></p> <p></p>"},{"location":"faq/faq/#cant-open-ryujinx-e-application-unhandled-exception-caught-systemtypeinitializationexception-the-type-initializer-for-gtkapplication-threw-an-exception-systemdllnotfoundexception-gtk-libgtk-3-0dll-libgtk-3so0-libgtk-30dylib-gtk-3dll","title":"\u2022 Can\u2019t open Ryujinx: <code>|E| Application : Unhandled exception caught: System.TypeInitializationException: The type initializer for 'Gtk.Application' threw an exception. ---&gt; System.DllNotFoundException: Gtk: libgtk-3-0.dll, libgtk-3.so.0, libgtk-3.0.dylib, gtk-3.dll</code>","text":"<p>This error is specific to the old GTK UI. As of 1.1.1217, Avalonia has become the default, so please redownload Ryujinx if possible. If you're on an old, unsupported version:</p> <p>Some emulator files are missing. Redownload Ryujinx, make sure it\u2019s extracted properly and don\u2019t put it on the desktop or the root of a drive, as those are protected folders. Third party antivirus software can also randomly delete these files, so if you have one, make exceptions for Ryujinx or uninstall the antivirus.</p>"},{"location":"faq/faq/#cant-open-ryujinx-e-application-unhandled-exception-caught-glibgexception-unrecognized-image-file-format-at-gdkpixbufloaderwritebyte-buf-uint64-count","title":"\u2022 Can\u2019t open Ryujinx: <code>|E| Application : Unhandled exception caught: GLib.GException: Unrecognized image file format   at Gdk.PixbufLoader.Write(Byte[] buf, UInt64 count)</code>","text":"<p>Similar to the above, Ryujinx is most likely in a protected folder. Move it somewhere else.</p>"},{"location":"faq/faq/#cant-open-ryujinx-console-closes-without-any-errors-and-without-opening-the-main-window","title":"\u2022 Can\u2019t open Ryujinx, console closes without any errors and without opening the main window:","text":"<p>Ensure Ryujinx is not on the desktop or a protected folder and that you don't have any third party antivirus software. This issue has also been reported to have been caused by \"defender omega\" controllers, so disconnect it if you have one.</p>"},{"location":"faq/faq/#crashing-after-selecting-vulkan-trying-to-open-settings-or-booting-a-game-using-vulkan-with-e-guirenderloop-application-unhandled-exception-caught-ryujinxgraphicsvulkanvulkanexception-initialization-failed-none-of-the-available-gpus-meets-the-minimum-requirements-at-ryujinxgraphicsvulkanvulkaninitializationfindsuitablephysicaldevicevk-api-instance-instance-surfacekhr-surface-string-preferredgpuid-in-daryujinxryujinxryujinxgraphicsvulkanvulkaninitializationcsline-217","title":"\u2022 Crashing after selecting Vulkan, trying to open settings or booting a game using Vulkan with <code>|E| GUI.RenderLoop Application : Unhandled exception caught: Ryujinx.Graphics.Vulkan.VulkanException: Initialization failed, none of the available GPUs meets the minimum requirements.   at Ryujinx.Graphics.Vulkan.VulkanInitialization.FindSuitablePhysicalDevice(Vk api, Instance instance, SurfaceKHR surface, String preferredGpuId) in D:\\a\\Ryujinx\\Ryujinx\\Ryujinx.Graphics.Vulkan\\VulkanInitialization.cs:line 217</code>","text":"<p>If you have a system consisting of an AMD Ryzen CPU with an AMD Radeon iGPU (4600H, 4800H, 5600H etc) and an Nvidia dGPU, you need to update BOTH graphics card drivers from their respective websites. Not just the dedicated Nvidia one, and not just from Windows update.</p> <p>https://www.amd.com/en/support</p> <p>https://www.nvidia.com/download/index.aspx</p> <p>If your hardware doesn\u2019t match the above, it\u2019s possible your GPU drivers are simply out of date. In the case that they aren\u2019t, your GPU might not meet the minimum requirements to run Ryujinx, for example any Intel iGPUs 5<sup>th</sup> gen or older.</p>"},{"location":"faq/faq/#crashing-after-selecting-vulkan-trying-to-open-settings-or-booting-a-game-using-vulkan-with-e-guirenderloop-application-unhandled-exception-caught-systemnullreferenceexception-object-reference-not-set-to-an-instance-of-an-object-at-ryujinxgraphicsvulkancommandbufferpooladdwaitableint32-cbindex-multifenceholder-waitable-in-daryujinxryujinxsrcryujinxgraphicsvulkancommandbufferpoolcsline-147","title":"\u2022 Crashing after selecting Vulkan, trying to open settings or booting a game using Vulkan with <code>|E| GUI.RenderLoop Application : Unhandled exception caught: System.NullReferenceException: Object reference not set to an instance of an object.   at Ryujinx.Graphics.Vulkan.CommandBufferPool.AddWaitable(Int32 cbIndex, MultiFenceHolder waitable) in D:\\a\\Ryujinx\\Ryujinx\\src\\Ryujinx.Graphics.Vulkan\\CommandBufferPool.cs:line 147</code>","text":"<p>Same as above.</p>"},{"location":"faq/faq/#e-guirenderthread-application-unhandled-exception-caught-ryujinxgraphicsvulkanvulkanexception-unexpected-api-error-errorfeaturenotpresent","title":"\u2022 <code>|E| GUI.RenderThread Application : Unhandled exception caught: Ryujinx.Graphics.Vulkan.VulkanException: Unexpected API error \"ErrorFeatureNotPresent\".</code>","text":"<p>Similar to the issue above, the emulator cannot detect a graphics card with Vulkan support. Check that your GPU drivers are on the latest possible version, and if they are, then unfortunately your GPU doesn\u2019t meet minimum requirements.</p>"},{"location":"faq/faq/#e-guirenderloop-application-unhandled-exception-caught-systemiofilenotfoundexception-could-not-find-or-load-the-native-library-vulkan-1dll-attempted-vulkan-1dll-cuserspcdesktoppublishvulkan-1dll-at-silknetcoreloaderlibraryloaderthrowlibnotfoundstring-name-pathresolver-resolver","title":"\u2022 <code>|E| GUI.RenderLoop Application : Unhandled exception caught: System.IO.FileNotFoundException: Could not find or load the native library: vulkan-1.dll Attempted: \"vulkan-1.dll\", \"C:\\Users\\pc\\Desktop\\publish\\vulkan-1.dll\"   at Silk.NET.Core.Loader.LibraryLoader.ThrowLibNotFound(String name, PathResolver resolver)</code>","text":"<p>Similar to the issue above, the emulator cannot detect a graphics card with Vulkan support. Check that your GPU drivers are on the latest possible version, and if they are, then unfortunately your GPU doesn\u2019t meet minimum requirements.</p>"},{"location":"faq/faq/#e-guirenderloop-application-unhandled-exception-caught-systemnotsupportedexception-no-supported-vulkan-surface-found-at-spbgraphicsvulkanvulkanhelperensureinit","title":"\u2022 <code>|E| GUI.RenderLoop Application : Unhandled exception caught: System.NotSupportedException: No supported Vulkan surface found!   at SPB.Graphics.Vulkan.VulkanHelper.EnsureInit()</code>","text":"<p>Similar to the issue above, the emulator cannot detect a graphics card with Vulkan support. Check that your GPU drivers are on the latest possible version, and if they are, then unfortunately your GPU doesn\u2019t meet minimum requirements.</p>"},{"location":"faq/faq/#crashing-after-double-clicking-any-game-with-ryujinx18152-gtk-critical-004423202-gtk_list_store_get_value-assertion-iter_is_valid-iter-list_store-failed-000000058-i-gpu-backend-threading-auto-true-marshaling-row-activated-signal-000000265-e-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-systemnullreferenceexception-object-reference-not-set-to-an-instance-of-an-object-at-ryujinxuimainwindowloadapplicationstring-path-boolean-startfullscreen-in-daryujinxryujinxryujinxuimainwindowcsline-718","title":"\u2022 Crashing after double-clicking any game with <code>(Ryujinx:18152): Gtk-CRITICAL **: 00:44:23.202: gtk_list_store_get_value: assertion 'iter_is_valid (iter, list_store)' failed   00:00:00.058 |I| Gpu : Backend Threading (Auto): True   Marshaling row-activated signal   00:00:00.265 |E| Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.NullReferenceException: Object reference not set to an instance of an object.   at Ryujinx.Ui.MainWindow.LoadApplication(String path, Boolean startFullscreen) in D:\\a\\Ryujinx\\Ryujinx\\Ryujinx\\Ui\\MainWindow.cs:line 718</code>","text":"<p>This error is specific to the old GTK UI. As of 1.1.1217, Avalonia has become the default, so please redownload or update Ryujinx if possible. If you're on an old, unsupported version: If the error looks like this, click the game once then press <code>Enter</code> or use the Avalonia UI. </p> <p></p>"},{"location":"faq/faq/#crashing-after-booting-a-game-or-crashing-after-applying-an-update-with-e-hleosthread8-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-libhaccommonhorizonresultexception-resultfsnonrealdataverificationfailed-2002-4604-hash-error","title":"\u2022 Crashing after booting a game or crashing after applying an update with <code>|E| HLE.OsThread.8 Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; LibHac.Common.HorizonResultException: ResultFsNonRealDataVerificationFailed (2002-4604): Hash error!</code>","text":"<p>Your game file, update file or both are corrupted/invalid, you need to dump them again and ensure nothing goes wrong in the process. - If removing the update works, it's the update file that is corrupted. - If the error still occurs, it's the game file that is corrupted.</p>"},{"location":"faq/faq/#e-application-unhandled-exception-caught-libhaccommonhorizonresultexception-resultfspartitionsignatureverificationfailed-2002-4644-invalid-partition-fs-type-at-libhaccommonthrowhelperthrowresultresult-result-string-message","title":"\u2022 <code>|E| Application : Unhandled exception caught: LibHac.Common.HorizonResultException: ResultFsPartitionSignatureVerificationFailed (2002-4644): Invalid Partition FS type \"????\"   at LibHac.Common.ThrowHelper.ThrowResult(Result result, String message)</code>","text":"<p>Similar to the above error, the file you\u2019re trying to load is not a supported file type or may be corrupt.</p>"},{"location":"faq/faq/#crashing-after-booting-a-game-with-e-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-libhaccommonhorizonresultexception-resultfspathnotfound-2002-0001","title":"\u2022 Crashing after booting a game with <code>|E| Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; LibHac.Common.HorizonResultException: ResultFsPathNotFound (2002-0001)</code>","text":"<p>You might be running an update file instead of a game file. See here for how to properly update a game. Another possible cause is Ryujinx might be forbidden from accessing the save folder for this game. This can be either due to a permission issue, for instance, from being placed on the desktop, the root of a drive or any kind of protected folder; or due to an antivirus not allowing the files to be accessed by the emulator.</p>"},{"location":"faq/faq/#crashing-with-e-hleosthread8-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-systemiofilenotfoundexception-system-archive-with-titleid-0100000000000823-was-not-found-on-storage-builtinsystem-found-in-none","title":"\u2022 Crashing with <code>|E| HLE.OsThread.8 Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.IO.FileNotFoundException: System archive with titleid 0100000000000823 was not found on Storage BuiltInSystem. Found in None.</code>","text":"<p>Your firmware is too old to run the game you\u2019re trying to run, and it tried to use files that don\u2019t exist in such an old version. Update your keys and firmware.</p>"},{"location":"faq/faq/#ryujinx-has-encountered-an-error-system-update-title-was-not-found-in-the-firmware-package","title":"\u2022 \u201cRyujinx has encountered an error: System update title was not found in the firmware package.\u201d","text":"<p>The file you're trying to install as a firmware does not contain actual firmware. See the firmware dumping guide for how to dump yours.</p>"},{"location":"faq/faq/#ryu-0003-firmware-parsing-error-ryujinx-was-unable-to-parse-the-provided-firmware-this-is-usually-caused-by-outdated-keys","title":"\u2022 \u201cRYU-0003: Firmware parsing error Ryujinx was unable to parse the provided firmware. This is usually caused by outdated keys.\u201d","text":"<p>The error itself tells you. Firmware and keys go hand in hand; if you update your firmware, you need to update your keys too.</p>"},{"location":"faq/faq/#crashing-on-boot-with-e-hleosthread8-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-libhaccommonkeysmissingkeyexception-missing-nca-title-key","title":"\u2022 Crashing on boot with <code>|E| HLE.OsThread.8 Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; LibHac.Common.Keys.MissingKeyException: Missing NCA title key.</code>","text":"<p>Similar to the above; redump and update your keys.</p>"},{"location":"faq/faq/#crashing-on-boot-with-e-hleosthread8-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-libhaccommonkeysmissingkeyexception-unable-to-decrypt-title-key","title":"\u2022 Crashing on boot with <code>|E| HLE.OsThread.8 Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; LibHac.Common.Keys.MissingKeyException: Unable to decrypt title key.</code>","text":"<p>Similar to the above; redump and update your keys.</p>"},{"location":"faq/faq/#e-hleosthread8-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-systemcollectionsgenerickeynotfoundexception-the-given-key-none-was-not-present-in-the-dictionary","title":"<code>|E| HLE.OsThread.8 Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.Collections.Generic.KeyNotFoundException: The given key 'None' was not present in the dictionary.</code>","text":"<p>Similar to the above; redump and update your keys.</p>"},{"location":"faq/faq/#n-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-libhaccommonkeysmissingkeyexception-unable-to-decrypt-nca-section","title":"\u2022 <code>|N| Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; LibHac.Common.Keys.MissingKeyException: Unable to decrypt NCA section.</code>","text":"<p>Similar to the above; redump and update your keys.</p>"},{"location":"faq/faq/#cant-open-settingscrashing-with-e-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-systemargumentexception-an-item-with-the-same-key-has-already-been-added","title":"\u2022 Can\u2019t open settings/crashing with <code>|E| Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentException: An item with the same key has already been added.</code>","text":"<p>Go to <code>C:\\Users\\yourname\\AppData\\Roaming\\Ryujinx\\bis\\system\\Contents\\registered</code> (or <code>portable\\bis\\system\\Contents\\registered</code> if on a portable install) and delete the contents of the \u201cregistered\u201d folder, then reinstall your firmware. If that doesn't work, redump/update your keys.</p> <p>If you get this error but the below strings mention <code>PTC</code>, it means your PPTC is corrupted, in which case right click the game on the games list &gt; <code>Cache Management</code> &gt; <code>Queue PPTC Rebuild</code>.</p>"},{"location":"faq/faq/#game-hangs-on-boot-log-says-e-loader-loadnca-no-exefs-found-in-nca","title":"\u2022 Game hangs on boot, log says <code>|E| Loader LoadNca: No ExeFS found in NCA</code>","text":"<p>When dumping your game, enable \u201cRemove console specific data\u201d, \u201cGenerate ticket-less dump\u201d and \u201cChange NPDM RSA key/sig in Program NCA\u201d in nxdumptool.</p>"},{"location":"faq/faq/#nsp-file-wont-show-on-the-main-menu-loading-it-from-file-will-hang-the-emulator-and-log-the-following-warning-w-loader-getnpdm-npdm-file-not-found-using-default-values-followed-by-these-errors-e-loader-loadnsos-process-initialization-returned-error-invalidmemoryregion-e-loader-tryload-unable-to-load-could-not-find-main-nca","title":"\u2022 NSP file won't show on the main menu, loading it from file will hang the emulator and log the following warning: <code>|W| Loader GetNpdm: NPDM file not found, using default values!</code> followed by these errors:  <code>|E| Loader LoadNsos: Process initialization returned error \"InvalidMemoryRegion\".</code> <code>|E| Loader TryLoad: Unable to load: Could not find Main NCA</code>","text":"<p>You're trying to load an update file instead of a game file. See the setup guide for how to properly update your games.</p>"},{"location":"faq/faq/#ryujinx-showing-a-black-screen","title":"\u2022 Ryujinx showing a black screen:","text":"<p>First, make sure that the game you are trying to run is actually supported and that your graphics card is capable of running it.</p> <p>If you have an Nvidia GPU, go to the Nvidia control panel and click <code>Restore</code> to set it to default settings.</p> <p>If you have an AMD or Intel GPU, update your GPU drivers and use the Vulkan graphics backend.</p> <p>If you only have an Intel iGPU, make sure it's on a 6<sup>th</sup>-gen CPU or newer. Older Intel iGPUs do not support the necessary features to run Ryujinx.</p> <p>If the problem persists, make sure that any external application that could affect rendering is disabled. This includes software which puts an overlay on top of the emulator display window, like the MSI Afterburner overlay or Twitch Studio.</p>"},{"location":"faq/faq/#black-screen-with-sound-on-nvidia","title":"\u2022 Black screen with sound on Nvidia:","text":"<p>Restore your Nvidia control panel global settings to defaults.</p> <p></p>"},{"location":"faq/faq/#ryujinx-window-is-transparentsee-through","title":"\u2022 Ryujinx window is transparent/see-through:","text":"<p>Disable sharpening under global graphics in the Radeon control panel.</p> <p></p>"},{"location":"faq/faq/#emulator-window-hangingnot-responding-after-exiting-a-game","title":"\u2022 Emulator window hanging/not responding after exiting a game:","text":"<p>Close the console window, it will also close the other one. If you\u2019ve hidden the console, you\u2019ll need to use the task manager to terminate the Ryujinx process. As of 1.1.848, this should happen much less frequently.</p>"},{"location":"faq/faq/#game-crashes-with-e-guirenderthread-application-unhandled-exception-caught-ryujinxgraphicsvulkanvulkanexception-unexpected-api-error-erroroutofdevicememory","title":"\u2022 Game crashes with <code>|E| GUI.RenderThread Application : Unhandled exception caught: Ryujinx.Graphics.Vulkan.VulkanException: Unexpected API error \"ErrorOutOfDeviceMemory\".</code>","text":"<p>This means your VRAM was exhausted. Check that your resolution scaling isn\u2019t too high; 4x is overkill for virtually every setup.</p> <p>If you\u2019re playing Astral Chain, Bayonetta 3, Fire Emblem Engage, Metroid Prime Remastered, Super Mario Bros. Wonder or The Legend of Zelda: Tears of the Kingdom, you might need to enable texture recompression in graphics settings. This is because these games use ASTC textures, which are supported natively without needing to be decompressed on the Switch, but when decompressed on PC can become massive and take up a lot of VRAM.</p> <p>If you\u2019re playing other games and your resolution is on native, it might be an issue with emulating that particular game. Check the game compatibility list to see if it\u2019s been reported, and if not, post a test result.</p>"},{"location":"faq/faq/#game-crashes-with-e-guirenderloop-application-unhandled-exception-caught-ryujinxgraphicsvulkanvulkanexception-unexpected-api-error-errordevicelost","title":"\u2022 Game crashes with <code>|E| GUI.RenderLoop Application : Unhandled exception caught: Ryujinx.Graphics.Vulkan.VulkanException: Unexpected API error \"ErrorDeviceLost\".</code>","text":"<p>This is a generic Vulkan crash. There\u2019s hardly any information that can be gleaned from it, and the solutions vary wildly from case to case, but most of the time it\u2019s not something users can fix or workaround.</p> <p>On Nvidia, some device loss crashes were introduced in driver version 527.37 (not just in emulated games; native PC games too) and, at time of writing, it seems drivers newer than this still have some problems. If you are on newer Nvidia drivers and can\u2019t find any mention of these crashes in the compatibility list for your game, it might be worth downgrading the driver version.</p> <p>On AMD and Intel GPUs, a bigger amount of games have this issue. If updating to the latest drivers doesn\u2019t fix it, your best bet will be Linux and Mesa drivers.</p>"},{"location":"faq/faq/#game-crashing-with-e-hleguestthread19-application-unhandled-exception-caught-ryujinxhleexceptionsguestbrokeexecutionexception-the-guest-program-broke-execution-at-ryujinxhlehoskernelsupervisorcallsyscallbreakuint64-reason-in-daryujinxryujinxryujinxhlehoskernelsupervisorcallsyscallcsline-1873","title":"\u2022 Game crashing with <code>|E| HLE.GuestThread.19 Application : Unhandled exception caught: Ryujinx.HLE.Exceptions.GuestBrokeExecutionException: The guest program broke execution!   at Ryujinx.HLE.HOS.Kernel.SupervisorCall.Syscall.Break(UInt64 reason) in D:\\a\\Ryujinx\\Ryujinx\\Ryujinx.HLE\\HOS\\Kernel\\SupervisorCall\\Syscall.cs:line 1873</code>","text":"<p>This means the game itself crashed, and not the emulator. The cause could be a million different things; however the key for troubleshooting this is not in the error itself, but rather what comes before it.</p> <p></p> <p>As shown in this example, right before the \u201cguest stack trace\u201d, there will be a short error with a code at the end. There can be many of these as well, but we\u2019ll cover the most common.</p> <ul> <li><code>ResultFsPermissionDenied (2002-6400)</code> here usually means Ryujinx has been denied access to the save folder for this game. Most of the time it\u2019s solved if you delete the save folder: Right click the game &gt; <code>Open User Save Directory</code>. Backup the contents if you care about the save. Go up 2 levels and delete the selected folder. Run the game again. </li> <li> <p>If this doesn\u2019t fix it, check that Ryujinx isn\u2019t on a protected folder (such as the desktop or the root of a drive) and that a third party antivirus (if you have one) isn\u2019t blocking Ryujinx from using the save folder. If all else fails, make a portable install and bring over your caches and saves from the previous install.</p> </li> <li> <p><code>ResultFsTargetNotFound (2002-1002)</code> might have the same causes and solutions as those described above.</p> </li> <li> <p><code>ResultKvdbInvalidKeyValue (2020-0005)</code>, also similar to the 2 above errors, means the savedata index for the game isn\u2019t found, so the savedata is corrupted. Try backing up and then deleting the game's savedata folders. If this doesn't solve it, backup your whole Ryujinx data folder (<code>C:\\Users\\yourname\\AppData\\Roaming\\Ryujinx</code>, or the portable folder if you've made a portable install) and then delete it. Then restore the subfolders (caches, save files) you'd like to keep.</p> </li> <li> <p><code>ResultFsOutOfRange (2002-3005)</code> usually indicates a bad dump (corrupt game files). If FS integrity checks is disabled and you are getting this error, enable it, run the game again and check if you now get a hash error as described here.</p> </li> <li> <p><code>ResultErrApplicationAborted (2162-0001)</code> is as generic as it gets. Check your game\u2019s compatibility list entry or the game-specific troubleshooting entry in this page if you get this.</p> </li> </ul>"},{"location":"faq/faq/#crashing-with-fatal-error-systemaccessviolationexception-attempted-to-read-or-write-protected-memory-this-is-often-an-indication-that-other-memory-is-corrupt","title":"\u2022 Crashing with <code>Fatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.</code>","text":"<p>This is another generic error. It also doesn\u2019t normally show on logs, only on the console when crashing. A possible cause is Ryujinx being in a protected folder or blocked by a third party antivirus. If this is not the case, check the compatibility page for your game.</p> <p>If you're getting this error when running a game on Vulkan and the below strings mention SDL2, you need to uninstall Gshade or stop it from trying to hook onto Ryujinx. Similarly, if Ryujinx won't open and the below strings also mention SDL2, close Medal.</p> <p>If you're getting this error on a Rog Ally, go to <code>Add or remove programs</code> on Windows and uninstall the \"OpenCL, OpenGL, and Vulkan Compatibility Pack\".</p> <p></p>"},{"location":"faq/faq/#e-hleguestthread20-cpu-invalidaccesshandler-invalid-memory-access-at-virtual-address-0x0000000000000000-e-hleguestthread20-application-unhandled-exception-caught-ryujinxmemoryinvalidmemoryregionexception-attempted-to-access-an-invalid-memory-region","title":"\u2022 <code>|E| HLE.GuestThread.20 Cpu InvalidAccessHandler: Invalid memory access at virtual address 0x0000000000000000. |E| HLE.GuestThread.20 Application : Unhandled exception caught: Ryujinx.Memory.InvalidMemoryRegionException: Attempted to access an invalid memory region.</code>","text":"<p>Invalid memory access errors, especially ones with the <code>0x0000000000000000</code> address, are usually caused by mod or cheat conflicts. Check that any given 2 (or more) mods or cheats you\u2019re using don\u2019t modify the same game files, and remove them if they do. This error can also be caused by poorly-made mods that don\u2019t work on Nintendo Switch hardware.</p> <p>Be aware that disabled cheats are still loaded into memory, so that they can be enabled while the game is running; if you are getting this crash and only have cheats but no mods, the issue is likely a conflict among the cheats, even if they\u2019re disabled.</p>"},{"location":"faq/faq/#inconsistent-frame-pacingframe-times","title":"\u2022 Inconsistent frame pacing/frame times:","text":"<p>Disable Ryujinx vsync and cap the framerate externally via your GPU driver settings or RivaTuner Statistics Server. Note that this won\u2019t work for all games; Super Smash Bros. Ultimate, for instance, speeds up even if you cap the framerate externally, as it relies on the vsync signal to determine game speed.</p> <p>As of 1.1.739, frametimes are considerably smoother.</p>"},{"location":"faq/faq/#fullscreen-framerate-is-not-as-smooth-as-on-windowed-modeg-sync-not-working","title":"\u2022 Fullscreen framerate is not as smooth as on windowed mode/G-Sync not working:","text":"<p>On the Nvidia control panel, head to <code>Vulkan/OpenGL present method</code> and select <code>Prefer layered on DXGI Swapchain</code> to enable GSync on a GSync-compatible monitor.</p> <p></p>"},{"location":"faq/faq/#rtssmsi-afterburner-wont-hook-to-ryujinx","title":"\u2022 RTSS/MSI Afterburner won\u2019t hook to Ryujinx:","text":"<p>Open Ryujinx settings before running a game.</p>"},{"location":"faq/faq/#controller-buttons-exit-emulationjoystick-moves-cursormouse-moves-on-its-owncontroller-presses-keyboard-keys","title":"\u2022 Controller buttons exit emulation/joystick moves cursor/mouse moves on its own/controller presses keyboard keys:","text":"<p>Shutdown Steam or disable the gamepad configurations you may have active on Steam.</p>"},{"location":"faq/faq/#any-kind-of-issue-using-dualshock-4-dualshock-5-gamepads","title":"\u2022 Any kind of issue using DualShock 4, DualShock 5 gamepads:","text":"<p>Do not use Betterjoy or DS4Windows, they work with Ryujinx natively and external software may cause issues.</p>"},{"location":"faq/faq/#instant-communication-error-trying-to-play-ldn","title":"\u2022 Instant communication error trying to play LDN:","text":"<p>Make sure Ryujinx is allowed on your firewall. If it still occurs, disable P2P in multiplayer settings.</p>"},{"location":"faq/faq/#ldn_mitm-wont-connectryujinx-and-switch-wont-see-each-other","title":"\u2022 ldn_mitm won't connect/Ryujinx and Switch won\u2019t see each other:","text":"<p>Both Ryujinx and the CFW Switch must be on the same network, timezone setting and game version. Check that Ryujinx is not being blocked by the firewall or a third party antivirus, that you're using a custom user profile on Ryujinx, that you\u2019ve actually selected ldn_mitm in Ryujinx\u2019s multiplayer settings, that you've enabled ldn_mitm on your Switch console and that no passphrase is being used. Try several times as well, since it doesn\u2019t always work on the first attempt.</p>"},{"location":"faq/faq/#game-says-save-file-is-corrupted","title":"\u2022 Game says save file is corrupted:","text":"<p>If the save is from a newer game version, trying to use it on an older update may cause the game to read it as corrupted. In this case simply exit the emulation and update the game.</p> <p>If your PC shuts down unexpectedly (blue screen, power outage) while the game is running, the save file might also get corrupted. This is due to Windows keeping the file open at all times, and not just when the game is being saved. As a general rule of thumb, we recommend making frequent backups of your save files, in case something like this happens.</p>"},{"location":"faq/faq/#w-hleosthread10-servicenv-wait-gpu-processing-thread-is-too-slow-waiting-on-cpu","title":"\u2022 <code>|W| HLE.OsThread.10 ServiceNv Wait: GPU processing thread is too slow, waiting on CPU.</code>","text":"<p>The wording is a bit unclear. The error refers to the CPU thread that processes the emulated GPU being too slow, and not your GPU being too slow. This error mostly pops up during shader compilation, which is normal and you shouldn't worry about.</p> <p>However, if you're getting it even with shaders cached, that may mean your CPU is a tad slower than what is recommended to run Ryujinx properly.</p>"},{"location":"faq/faq/#w-gpumainthread-gpu-log-shader-translator-shader-instruction-votevtg-is-not-implemented-e-gpumainthread-gpu-getinfo-invalid-texture-format-0x7ffff-srgb-false","title":"\u2022 <code>|W| GPU.MainThread Gpu Log: Shader translator: Shader instruction Votevtg is not implemented</code> ///<code>|E| GPU.MainThread Gpu GetInfo: Invalid texture format 0x7FFFF (sRGB: False).</code>","text":"<p>These are both errors that don\u2019t actually affect how any game runs and are safe to ignore.</p>"},{"location":"faq/faq/#crashing-with-e-hleosthread6-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-systemargumentexception-no-valid-channel-configuration-found","title":"\u2022 Crashing with <code>|E| HLE.OsThread.6 Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.ArgumentException: No valid channel configuration found!</code>","text":"<p>Change your audio backend to SDL2 or OpenAL. SoundIO can cause this crash in certain situations.</p>"},{"location":"faq/faq/#updated-ryujinx-and-it-didnt-restart-when-clicking-yes","title":"\u2022 Updated Ryujinx and it didn\u2019t restart when clicking \u201cYes\u201d:","text":"<p>If you are on Windows 11, Windows Command Line needs to be set to <code>Windows Console Host</code> instead of <code>Windows Terminal</code> for it to work.</p>"},{"location":"faq/faq/#ryujinx-executable-disappeareddeleted-itself-after-updating","title":"\u2022 Ryujinx executable disappeared/deleted itself after updating:","text":"<p>Redownload the emulator and do not update while a game is running or settings are open. Do not extract it to a protected folder such as the desktop. Make exceptions for or uninstall any third party antivirus you might be using.</p>"},{"location":"faq/faq/#updated-ryujinx-and-now-the-executableall-my-files-are-gonenamed-ryuold","title":"\u2022 Updated Ryujinx and now the executable/all my files are gone/named \u201c.ryuold\u201d:","text":"<p>Simply head to the website, download the latest version and delete the Ryujinx folder that failed to update, with care not to delete your <code>portable</code> folder if you have one. This may happen if you update while a game is running or while emulator settings are open, if you have a third party antivirus falsely flagging Ryujinx upon updating or if you have Ryujinx on a protected folder, such as the desktop or the root of a drive.</p>"},{"location":"faq/faq/#cant-connect-to-the-interneterror-code-2306-0520-unable-to-connect-to-the-internet-the-dns-settings-or-proxy-server-may-have-been-entered-incorrectly","title":"\u2022 Can\u2019t connect to the internet/Error Code: 2306-0520 Unable to connect to the Internet. The DNS settings or proxy server may have been entered incorrectly:","text":"<p>Read here. Ryujinx does not support connecting to Nintendo Switch Online (NSO). Any options in a game that prompt you to connect to the internet will almost assuredly try to connect to Nintendo servers, which will not work. </p> <p>If you are trying to play multiplayer with other Ryujinx users, you will want local wireless/local play/play locally, which despite the name will work over the internet. If you are trying to play with Nintendo Switch users, you want LAN mode in games that support it, or ldn_mitm which will allow playing with consoles via LDN, though only if they\u2019re hacked.</p>"},{"location":"faq/faq/#experiencing-audio-delay-after-playing-for-over-an-hour","title":"\u2022 Experiencing audio delay after playing for over an hour:","text":"<p>Pause and unpause emulation (<code>F5</code> by default). You may also try changing your audio backend to OpenAL if you're on SDL2.</p>"},{"location":"faq/faq/#antivirus-flagged-ryujinx-as-filerepmalware","title":"\u2022 Antivirus flagged Ryujinx as <code>FileRepMalware</code>:","text":"<p>Uninstall Avast. Ryujinx is safe as long as you downloaded it from our GitHub or official downloads.</p>"},{"location":"faq/faq/#games-not-loadingfreezing-after-loading-cachespptc","title":"\u2022 Games not loading/freezing after loading caches/PPTC:","text":"<p>Uninstall AVG. Ryujinx is safe as long as you downloaded it from our GitHub or official downloads.</p>"},{"location":"faq/faq/#updated-ryujinx-and-now-every-game-is-crashing-with-e-application-unhandled-exception-caught-systemreflectiontargetinvocationexception-exception-has-been-thrown-by-the-target-of-an-invocation-systeminvalidoperationexception-could-not-map-view-of-backing-memory-va0x0000000008000000-size0x0000000000010000-error-code-998","title":"\u2022 Updated Ryujinx and now every game is crashing with <code>|E| Application : Unhandled exception caught: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---&gt; System.InvalidOperationException: Could not map view of backing memory. va=0x0000000008000000 size=0x0000000000010000, error code 998)</code>","text":"<p>You are using ESET antivirus, so you will need to create a HIPS exception for Ryujinx, in: ESET &gt; Advanced Settings &gt; HIPS &gt; DEEP BEHAVIOR INSPECTION &gt; Exclusions &gt; Edit &gt; Add the Ryujinx folder (the one with the executable) there.</p>"},{"location":"faq/faq/#e-hleguestthread22-application-unhandled-exception-caught-ryujinxhleexceptionsundefinedinstructionexception-the-instruction-at-0x000000000bfaeff0-opcode-0x00000000-is-undefined","title":"\u2022 <code>|E| HLE.GuestThread.22 Application : Unhandled exception caught: Ryujinx.HLE.Exceptions.UndefinedInstructionException: The instruction at 0x000000000bfaeff0 (opcode 0x00000000) is undefined!</code>","text":"<p>Usually, this error means that a CPU instruction is not implemented, in which case all you can do is wait for it to be implemented. However, <code>opcode 0x00000000</code> indicates something is wrong, as that\u2019s not a real instruction. If you have this opcode, right click the game &gt; <code>Cache Management</code> &gt; <code>Open PPTC Directory</code> and delete its contents.</p>"},{"location":"faq/faq/#low-performance-on-linuxsteam-deck","title":"\u2022 Low performance on Linux/Steam Deck:","text":"<p>Ensure you are running Ryujinx through <code>Ryujinx.sh</code> and NOT the executable itself.</p> <p></p>"},{"location":"faq/faq/#any-kind-of-audio-issuessoftlockingcrashing-on-macos","title":"\u2022 Any kind of audio issues/softlocking/crashing on macOS:","text":"<p>Ensure you set SDL2 as the audio backend and that your Mac meets the minimum requirements.</p>"},{"location":"faq/faq/#crashing-on-mac-with-e-hleguestthread16-application-unhandled-exception-caught-systemexception-unhandled-exception-from-guest-kernel-with-esr-0x82000086-instructionabortlowerel-at-ryujinxcpuapplehvhvexecutioncontextexecutehvmemorymanager-memorymanager-uint64-address-in-runner_workryujinx_everyujinx_everyujinxcpuapplehvhvexecutioncontextcsline-143","title":"\u2022 Crashing on Mac with <code>|E| HLE.GuestThread.16 Application : Unhandled exception caught: System.Exception: Unhandled exception from guest kernel with ESR 0x82000086 (InstructionAbortLowerEl).   at Ryujinx.Cpu.AppleHv.HvExecutionContext.Execute(HvMemoryManager memoryManager, UInt64 address) in /runner/_work/Ryujinx_Eve/Ryujinx_Eve/Ryujinx.Cpu/AppleHv/HvExecutionContext.cs:line 143</code>","text":"<p>Update your macOS version.</p>"},{"location":"faq/faq/#touch-screen-not-working-properly","title":"\u2022 Touch screen not working properly:","text":"<p>Disable docked mode and <code>Direct Mouse Access</code>. Touch functionality will not work properly on docked mode for obvious reasons, and <code>Direct Mouse Access</code> doesn't allow it to work.</p>"},{"location":"faq/faq/#ldn-error-codes","title":"\u2022 LDN Error Codes","text":"Error code Description 2203-0016 WiFi not available. 2203-0022 WiFi disabled/LDN unavailable: download the LDN build, make sure LDN is enabled. 2203-0032 Invalid state. 2203-0048 Invalid client (node) data. 2203-0064 Connection failed. 2203-0065 Network wasn't found. 2203-0066 Connection timeout. 2203-0067 Not allowed to connect (rejected). 2203-0096 Invalid argument. 2203-0097 Invalid object. 2203-0113 Local game version too low, you need to update your game. 2203-0114 Local game version too high, the other players need to update their games. 2203-0144 Lobby is full. 2318-0006 Network connection lost: ensure Ryujinx is allowed on your firewall, try restarting your router. 2318-0311 Local game version is too low, you need to update your game. 2318-0312 Local game version is too high, the other players need to update their games. 2618-0006 Network connection lost: ensure Ryujinx is allowed on your firewall, try restarting your router. 2618-0008 Invalid state. 2618-0014 Timeout. 2618-0302 Invalid client data. 2618-0308 Generic error occurred. 2618-0309 Network wasn't found. 2618-0310 Network is full. 2618-0311 Local game version is too low, you need to update your game. 2618-0312 Local game version is too high, the other players need to update their games. 2618-0313 WiFi is disabled, enable guest internet access. 2618-0314 Console fell asleep."},{"location":"faq/faq/#game-specific-errors-and-troubleshooting","title":"Game-Specific Errors and Troubleshooting","text":""},{"location":"faq/faq/#animal-crossing-new-horizons","title":"Animal Crossing New Horizons","text":"<ul> <li> <p>In-game time is wrong: set your timezone in system settings.</p> </li> <li> <p>Crashing on ARM macOS: disable the hypervisor.</p> </li> </ul>"},{"location":"faq/faq/#astral-chain","title":"Astral Chain","text":"<ul> <li> <p>Crashing with <code>ErrorOutOfDeviceMemory</code>: see above.</p> </li> <li> <p>Game is not the right speed: right click on the games list &gt; <code>Cache Management</code> &gt; <code>Queue PPTC Rebuild</code>.</p> </li> </ul>"},{"location":"faq/faq/#bayonetta-3","title":"Bayonetta 3","text":"<ul> <li> <p>Stuck in training mode/loading screen in chapter 1: dump your game from your Switch console again, your file is corrupted.</p> </li> <li> <p>Crashing with <code>ErrorOutOfDeviceMemory</code>: see above.</p> </li> <li> <p>Audio desync during cutscenes: this is unavoidable as the game was not made with stutters in mind, rolling the whole cutscene audio and assuming the video will always play at the same speed. As a result of shader compilation and ASTC texture decoding, there will always be stutters during cutscenes, and the video will always fall behind the audio. In the future, when ASTC texture decoding and shader compilation are improved, it may be possible to minimize the stutters to a point where they\u2019re not noticeable on a fast enough CPU. Currently, the only solution is to watch the cutscenes elsewhere or try to resync the video via speeding it up by toggling Vsync.</p> </li> </ul>"},{"location":"faq/faq/#bayonetta-origins-cereza-and-the-lost-demon","title":"Bayonetta Origins: Cereza and the Lost Demon","text":"<ul> <li>Flickering square artifacts: it\u2019s a driver issue on Nvidia RTX 3000/4000 graphics cards and on drivers newer than 522.25. Surprisingly, the higher the emulator scaling, the less apparent it is; at 2x it\u2019s much less noticeable, and at 3x it goes away almost completely.</li> </ul>"},{"location":"faq/faq/#fifa-202anything","title":"FIFA 202anything","text":"<ul> <li>Player indicators are invisible. No solution as of yet.</li> </ul>"},{"location":"faq/faq/#fire-emblem-engage","title":"Fire Emblem Engage","text":"<ul> <li> <p>Crashing with <code>ErrorOutOfDeviceMemory</code>: see above.</p> </li> <li> <p>There are reports of users corrupting their save files and being unable to progress through chapter 13 due to using certain mods. Last reported batch of mods used on a broken save file were \"arena 100 exp mod, playable emblems mod through cobalt, and battle outfits mod through cobalt\". Beware of using these mods on your first playthrough.</p> </li> </ul>"},{"location":"faq/faq/#hyrule-warriors-age-of-calamity","title":"Hyrule Warriors: Age of Calamity","text":"<ul> <li>This game is hard to emulate at an acceptable speed. If you\u2019re having bad performance on both backends, all you can do is upgrade your hardware or wait for improvements to Ryujinx.</li> </ul>"},{"location":"faq/faq/#kirby-and-the-forgotten-land","title":"Kirby and the Forgotten Land","text":"<ul> <li>Do not use the \u201cNo DoF\u201d mod available for this game, as it causes it to hang.</li> </ul>"},{"location":"faq/faq/#luigis-mansion-3","title":"Luigi\u2019s Mansion 3","text":"<ul> <li>Requires a mod for disabling dynamic resolution and running on game version 1.0.0 in order to attain the best possible performance.</li> </ul>"},{"location":"faq/faq/#mario-kart-8-deluxe","title":"Mario Kart 8 Deluxe","text":"<ul> <li> <p>Crashing every other boot: select a default Mii. Having a custom Mii selected will crash every second time the game is launched.</p> </li> <li> <p>Communication error during races: every player needs to have cached shaders beforehand and hardware capable of holding 60fps at all times, otherwise after a couple frame drops the game will desync and disconnect.</p> </li> </ul>"},{"location":"faq/faq/#mario-party-superstars","title":"Mario Party Superstars","text":"<ul> <li> <p>\u201cMultiple players are using the same save data. Please choose different user profiles\u201d: run the game on version 1.0.0, as the update doesn\u2019t currently work on LDN.</p> </li> <li> <p>Communication error during matches: every player needs to have cached shaders beforehand and hardware capable of holding 60fps at all times, otherwise after several frame drops the game will desync and disconnect. Luckily this game isn\u2019t as prone to desyncs as Mario Kart 8.</p> </li> <li> <p>Crashing when trying to use local play: right click the game &gt; <code>Cache Management</code> &gt; <code>Open PPTC Directory</code>, delete the contents of the folder.</p> </li> </ul>"},{"location":"faq/faq/#mario-strikers-battle-league","title":"Mario Strikers: Battle League","text":"<ul> <li>Crashing on boot: use this mod to bypass the intro video.</li> </ul>"},{"location":"faq/faq/#metroid-dread","title":"Metroid Dread","text":"<ul> <li>Requires a mod for disabling FXAA (1.0.0) to better increase the resolution in docked mode. This mod is not needed if running on handheld mode.</li> </ul>"},{"location":"faq/faq/#metroid-prime-remastered","title":"Metroid Prime Remastered","text":"<ul> <li>Crashing with <code>ErrorOutOfDeviceMemory</code>: see above.</li> </ul>"},{"location":"faq/faq/#monster-hunter-rise","title":"Monster Hunter Rise","text":"<ul> <li> <p>Crashing on the loading splash screen on the multiplayer build: you need LDN 3.0.0, as it's currently the only LDN build where Sunbreak (anything newer than 3.9.1) will run. (The game is playable on the main builds.)</p> </li> <li> <p>LDN 3.0.0 for Windows: https://cdn.discordapp.com/attachments/801087226649509889/1044298521978876016/ryujinx-1.1.0-ldn3.0-win_x64.zip</p> </li> <li> <p>LDN 3.0.0 for Linux: https://cdn.discordapp.com/attachments/801087226649509889/1044298522658353152/ryujinx-1.1.0-ldn3.0-linux_x64.tar.gz</p> </li> <li> <p>Do not use LDN 3.0.0 for other games, only for this one.</p> </li> </ul>"},{"location":"faq/faq/#nintendo-switch-sports","title":"Nintendo Switch Sports","text":"<ul> <li>Crashing anywhere: you need this PR build https://github.com/ryujinx-mirror/ryujinx/pull/4047</li> <li>If the artifacts are expired, you'll need to build it yourself.</li> </ul>"},{"location":"faq/faq/#octopath-traveler-ii","title":"Octopath Traveler II","text":"<ul> <li>Crashing on boot: disable ignore missing services, queue a PPTC rebuild, delete both caches if that doesn't work.</li> </ul>"},{"location":"faq/faq/#pokemon-legends-arceus","title":"Pok\u00e9mon Legends Arceus","text":"<ul> <li> <p>Game crashes on launch: make sure <code>Use alternative memory layout (Developers)</code> is disabled in system settings.</p> </li> <li> <p>Controller going crazy/moving to the left/pressing buttons on its own: disable the handheld controller in input settings. Alternatively, disable the player 1 controller if playing on handheld mode. If it still occurs after doing this: Go to <code>File</code> &gt; <code>Open Ryujinx Folder</code>, delete <code>config.json</code> (or <code>LDNconfig.json</code> if using LDN version), restart the emulator, open the player 1 settings, select your controller from the <code>Input Device</code> dropdown top left, click <code>Load</code> top right, click <code>Save</code> bottom right, re-add your games directory, click <code>Save</code> and run the game.</p> </li> <li> <p>If you have invisible models and are on the latest Ryujinx version, then your GPU is probably too old and doesn\u2019t support the necessary features to render models in this game. Check if you can update your graphics drivers and ensure you're on the latest Ryujinx build.</p> </li> </ul>"},{"location":"faq/faq/#pokemon-lets-go-pikachueevee","title":"Pok\u00e9mon Let's Go Pikachu/Eevee","text":"<ul> <li>This game can only be played with single joycons in docked mode. To play with a normal controller, you need to disable docked mode and configure the handheld controller in input settings.</li> </ul>"},{"location":"faq/faq/#pokemon-scarletpokemon-violet","title":"Pok\u00e9mon Scarlet/Pok\u00e9mon Violet","text":"<ul> <li> <p>Game crashes on launch: make sure <code>Use alternative memory layout (Developers)</code> is disabled in system settings.</p> </li> <li> <p>Controller going crazy/pressing buttons on its own: disable the handheld controller in input settings. Alternatively, disable the player 1 controller if playing on handheld mode. If it still occurs after doing this: Go to <code>File</code> &gt; <code>Open Ryujinx Folder</code>, delete <code>config.json</code> (or <code>LDNconfig.json</code> if using LDN version), restart the emulator, open the player 1 settings, select your controller from the <code>Input Device</code> dropdown top left, click <code>Load</code> top right, click <code>Save</code> bottom right, re-add your games directory, click <code>Save</code> and run the game.</p> </li> <li> <p>Can\u2019t click on director Clavell on the electric gym challenge: increase your stick deadzone to <code>0.15</code>-<code>0.20</code> in input settings.</p> </li> <li> <p>To play the special event raids for Pikachu, Charizard, Greninja, Iron Leaves, Walking Wake, Scrumbling Jumblo, Poffin McGuffin etc: you can inject them into your save file using pkhex. They will also not be tied to a timeframe if you do this, which means you can do any of them at any moment.</p> </li> </ul>"},{"location":"faq/faq/#pokemon-swordpokemon-shield","title":"Pok\u00e9mon Sword/Pok\u00e9mon Shield","text":"<ul> <li>LAN mode doesn\u2019t work: it's been reported that players must update their Wild Area news files via pkhex for LAN mode to work properly. </li> </ul>"},{"location":"faq/faq/#sonic-frontiers","title":"Sonic Frontiers","text":"<ul> <li>Flashing textures: only happens on AMD GPUs on Windows, it\u2019s not an issue on Linux with Mesa drivers.</li> </ul>"},{"location":"faq/faq/#sonic-origins","title":"Sonic Origins","text":"<ul> <li>Crashing/freezing: there\u2019s no fix yet.</li> </ul>"},{"location":"faq/faq/#splatoon-2","title":"Splatoon 2","text":"<ul> <li>Can\u2019t level up or get weapons: NSO is not supported and therefore it\u2019s impossible to level up on Ryujinx. You need to download a save file with gear already unlocked or transfer your own from your Switch.</li> </ul>"},{"location":"faq/faq/#splatoon-3","title":"Splatoon 3","text":"<ul> <li> <p>Softlock on the yellow/purple loading screen: disable guest internet access. If you want to use LAN mode, you have to enable guest internet access when you\u2019re in the Shoal, not before booting the game.</p> </li> <li> <p>Can\u2019t level up or get weapons: NSO is not supported and therefore it\u2019s impossible to level up on Ryujinx. You need to download a save file with gear already unlocked or transfer your own from your Switch.</p> </li> </ul>"},{"location":"faq/faq/#super-mario-bros-wonder","title":"Super Mario Bros. Wonder","text":"<ul> <li> <p>Crashing with <code>ErrorOutOfDeviceMemory</code>: see above.</p> </li> <li> <p>Crashing on the LDN build: this game does not have LDN. If you would like to play multiplayer over the internet, use Parsec.</p> </li> </ul>"},{"location":"faq/faq/#super-mario-maker-2","title":"Super Mario Maker 2","text":"<ul> <li>Can\u2019t connect to course world and download levels: you need a save file with the levels already loaded into it, as NSO is not supported.</li> </ul>"},{"location":"faq/faq/#super-mario-odyssey","title":"Super Mario Odyssey","text":"<ul> <li> <p>Do not use \u201cDisable Dynamic Resolution\u201d mods with this game. They are not needed and might cause issues.</p> </li> <li> <p>In case of abnormally low performance, purge your shader cache.</p> </li> <li> <p>Can\u2019t scan an Amiibo: this game needs you to hold the <code>D-pad right</code> button first, as it asks on screen.</p> </li> </ul>"},{"location":"faq/faq/#super-smash-bros-ultimate","title":"Super Smash Bros. Ultimate","text":"<ul> <li>This game has some performance issues due to the fact that NROs aren\u2019t cached by the emulator. Unfortunately there\u2019s nothing that users can do about it at the moment. </li> <li> <p>This issue does not exist on ARM macOS devices running with the hypervisor enabled.</p> </li> <li> <p>Input lag/laggy connection: this game has really bad netcode, which also manifests during LDN games. Most Smash players use Parsec instead, as that doesn\u2019t interact with the game\u2019s own network code.</p> </li> <li> <p>Stuck on infinite loading when creating local play match: Skyline blocks LDN connectivity, which means you can\u2019t play LDN with mods unless every player attaches a Skyline logger, which disables this blocker. Alternatively, as mentioned above, use Parsec.</p> </li> <li> <p>Black screen/softlock on boot when using mods: disable guest internet access.</p> </li> </ul>"},{"location":"faq/faq/#taiko-no-tatsujin","title":"Taiko no Tatsujin","text":"<ul> <li>Crashing after accepting User Agreement: you need to accept the first User License agreement and not accept the second Data Analysis Policy to launch the game.</li> </ul>"},{"location":"faq/faq/#the-great-ace-attorney-chronicles","title":"The Great Ace Attorney Chronicles","text":"<ul> <li>Black screen: set resolution scaling to native.</li> </ul>"},{"location":"faq/faq/#the-legend-of-zelda-breath-of-the-wild","title":"The Legend of Zelda: Breath of the Wild","text":"<ul> <li> <p>While this game runs perfectly fine on Ryujinx, we always recommend playing the Wii U version on Cemu if possible, as it\u2019s the superior experience. If you\u2019ve already made progress on your Switch save, you can convert it to a Wii U save with the BotW save manager.</p> </li> <li> <p>20fps lock: if the game can\u2019t hold 30fps, it will lock to 20. This is how the game works on both Wii U and Switch. You can use a 30fps mod (for 1.6.0) to stop this from happening.</p> </li> <li> <p>Crashing on ARM macOS: disable the hypervisor.</p> </li> </ul>"},{"location":"faq/faq/#the-legend-of-zelda-links-awakening","title":"The Legend of Zelda: Link\u2019s Awakening","text":"<ul> <li>Requires a \u201c60fps\u201d mod to stabilise performance.</li> </ul>"},{"location":"faq/faq/#the-legend-of-zelda-skyward-sword-hd","title":"The Legend of Zelda: Skyward Sword HD","text":"<ul> <li>Audio issues seem to appear on slower CPUs.</li> </ul>"},{"location":"faq/faq/#the-legend-of-zelda-tears-of-the-kingdom","title":"The Legend of Zelda: Tears of the Kingdom","text":"<ul> <li> <p>20fps lock: if the game can\u2019t hold 30fps, it will lock to 20. This is how the game works on Switch. You can use the dynamic fps mod included with Ultracam to stop this from happening. As of 1.1.802, this should happen much less frequently.</p> </li> <li> <p>Blurry graphics: the game uses both FSR and FXAA, which don't work that well with resolution scaling. You can use the mods included with Ultracam to workaround the issue.</p> </li> <li> <p>Crashing with <code>ErrorOutOfDeviceMemory</code>: see above.</p> </li> <li> <p>Crashing with <code>ErrorDeviceLost</code>: this can happen on older Nvidia drivers, in which case update them to version 516.94 or newer, or use OpenGL.</p> </li> <li> <p>Crashing with <code>|E| GPU.MainThread Application : Unhandled exception caught: System.NullReferenceException: Object reference not set to an instance of an object.', '</code>: you are using a certain broken mod called \"Visualfixes\", remove it.</p> </li> <li> <p>Still crashing after removing faulty mods: right click the game &gt; <code>Cache Management</code> &gt; <code>Open PPTC Directory</code> and delete its contents.</p> </li> <li> <p>Infinite saving/loading: close any programs that could be accessing your save and restart explorer.exe in Windows task manager. </p> </li> <li> <p>Fast cutscenes/no audio/softlocking/black screen on power selector: don't use outdated 60fps mods, use the dynamic fps mod from Ultracam as specified above.</p> </li> <li> <p>Rainbow corruption all over the landscape: you have a Polaris (AMD RX 500/400) GPU. Use Linux or buy a functional card.</p> </li> <li> <p>Sky islands have a weird outline: this is an upscaling issue. There exist mods that work around this. Ultracam also includes resolution mods which will increase the native resolution of the game; those can be used instead of the Ryujinx upscaler.</p> </li> </ul>"},{"location":"faq/faq/#the-world-ends-with-you-final-remix-","title":"The World Ends With You -Final Remix-","text":"<ul> <li>Can\u2019t defeat Pig Samba enemy that is asleep: <code>Actions</code> &gt; <code>Simulate Wake-up Message</code></li> </ul>"},{"location":"faq/faq/#xenoblade-chronicles-definitive-edition","title":"Xenoblade Chronicles: Definitive Edition","text":"<ul> <li>Game looks blurry even with upscaling: this game has an antialiasing implementation that does not scale properly. You can either run Vulkan and use the <code>lib_nx.ini</code> graphics settings mod to disable the antialiasing and use emulator resolution scaling, or run OpenGL and use the <code>lib_nx.ini</code> graphics settings to increase the internal resolution of the game.</li> </ul>"},{"location":"faq/faq/#xenoblade-chronicles-2","title":"Xenoblade Chronicles 2","text":"<ul> <li> <p>Game looks blurry even with upscaling: this game has an antialiasing implementation that does not scale properly. You can either use the <code>lib_nx.ini</code> graphics settings mod to disable the antialiasing and use emulator resolution scaling, or use the <code>lib_nx.ini</code> graphics settings mod to increase the internal resolution of the game.</p> </li> <li> <p>Mods not working: if you have the Torna DLC in digital format, you need to create a folder with the game ID that ends in 9001 add the mods in the folder. It should be right below the one that opens when clicking on <code>Open Mods Directory</code>.</p> </li> <li> <p>Softlocking on save menu: save very frequently, use the Blade awakening menu instead of the save menu (opening core crystals saves the game). This issue also exists on console, but it\u2019s made more frequent by emulation.</p> </li> </ul>"},{"location":"faq/faq/#xenoblade-chronicles-3","title":"Xenoblade Chronicles 3","text":"<p>Play this game on Vulkan, otherwise you will not watch the cutscenes.</p> <ul> <li> <p>Crashing when opening the menu or scrolling through character menus: bind a ZL shortcut for the save menu and save from there instead of opening the menu normally and quicksaving, and always save before trying to open the menu normally or before trying to do character customization.</p> </li> <li> <p>There are 2 different crashes going on here. However, the crash when scrolling through character menus seems to be fixed as of version 1.3.0 of the game.</p> </li> <li> <p>Game looks blurry even with upscaling: this game has an antialiasing implementation that does not scale properly. You can use graphics settings mods to enable emulator scaling or to increase the internal resolution of the game. For the latter, keep emulator scaling on native.</p> </li> </ul>"},{"location":"setup/","title":"Index","text":"<p>This article assumes you have already hacked your Nintendo Switch and dumped your Nintendo Switch keys (prod.keys) and firmware file(s).</p> <p>This guide also illustrates how to use an untrimmed game cartridge dump (XCI file) to install firmware directly to Ryujinx. If you would prefer to dump the firmware standalone, you may follow this firmware dumping guide.</p> <p>If you haven't already downloaded Ryujinx, get the latest version from the releases page.  </p>"},{"location":"setup/#preface","title":"Preface","text":"<p>Ryujinx comes pre-optimized by default. If a particular menu option is not mentioned in this guide, it should be ignored and not changed unless directly instructed by Ryujinx staff.</p> <p>When requesting support on the Ryujinx official Discord server, you will usually be asked for your log file. With this in mind, Logging should be left at default settings (enabled) for everything except debug logs. Do not enable debug logs unless specifically instructed by Ryujinx staff.</p>"},{"location":"setup/#system-requirements","title":"System Requirements","text":"<p>In order to use Ryujinx your computer will need:</p> <ul> <li>At least 8GB RAM</li> <li>A GPU supporting OpenGL 4.5/Vulkan 1.2 or higher</li> <li>Your prod.keys and either your dumped firmware or game cartridge untrimmed XCI</li> <li>Your dumped Nintendo Switch games or homebrew</li> <li>OS: Windows 10.0.17134 or higher / macOS 12 / Any modern linux distribution (see dependencies)</li> </ul> <p>Recommended Baseline (Native Resolution and Framerate):</p> <ul> <li>CPU: Ryzen 5 3600</li> <li>RAM: 16GB DDR4</li> <li>GPU: NVIDIA GTX 1060 6GB</li> </ul>"},{"location":"setup/#dependencies","title":"Dependencies","text":""},{"location":"setup/#windows","title":"Windows","text":"<ul> <li>Windows 10 RS4 (Redstone 4, version 1803) or newer is required.</li> <li>Graphics drivers must be up to date.</li> </ul>"},{"location":"setup/#linux","title":"Linux","text":"<p>Run these commands in your terminal:</p> <ul> <li>Archlinux-based distros: <pre><code>sudo pacman -S sdl2 openal\n</code></pre></li> <li>Ubuntu-based distros: <pre><code>sudo apt-get install libsdl2-2.0 libsdl2-dev libalut-dev\n</code></pre></li> <li>Fedora: <pre><code>sudo dnf install SDL2-devel openal-soft\n</code></pre></li> </ul>"},{"location":"setup/#macos","title":"macOS","text":"<ul> <li>macOS 12 Monterey or later is recommended.</li> </ul>"},{"location":"setup/#initial-setup","title":"Initial Setup","text":""},{"location":"setup/#placement-of-prodkeys","title":"Placement of prod.keys","text":"<p>By default Ryujinx will use <code>%appdata%/Ryujinx</code> (or the equivalent application data folder on Linux/macOS) to store all of it's permanent files. This includes firmware, save files, shader caches and other configuration. If you wish Ryujinx to be fully self-contained you may use portable mode!</p> <ol> <li> <p>Now that you've downloaded the Ryujinx archive, open it and     extract the contents of the publish folder onto your drive in     the location of your choice. We recommend against using your desktop      or the root of any drive as these can sometimes be protected.</p> </li> <li> <p>Navigate to where you extracted the Ryujinx files, and     double-click on <code>Ryujinx.exe</code>. This will launch the emulator and you     will be met with the following message (don't worry; this is     normal!) </p> </li> <li> <p>Click OK on the warning box.     Now that Ryujinx has been launched, the proper folders have been     created for you in your <code>%appdata%</code> folder.</p> </li> <li> <p>Click File at the top left of the Ryujinx window, and then click     Open Ryujinx Folder. </p> </li> <li> <p>Navigate down into the system subfolder and paste your prod.keys file     here. The file/folder structure should look like this (JohnDoe     substituted for your username): </p> </li> <li> <p>Close and reopen Ryujinx so that the prod.keys file is validated. You're done installing keys!</p> </li> </ol>"},{"location":"setup/#installation-of-firmware","title":"Installation of Firmware","text":"<p>Now that your keys are installed, it's time to install a firmware. Make sure you have an untrimmed XCI file of a recent game cartridge you dumped, or have compiled your dumped firmware into a ZIP file.</p> <ol> <li> <p>Open Ryujinx. There should be no warning about KEYS.md anymore; if     you still get the warning, go back through the prod.keys steps and     ensure you have placed the file correctly.</p> </li> <li> <p>Now that Ryujinx is open, click Tools &gt; Firmware &gt; Install from XCI/ZIP.      This brings up the \"Choose the firmware file to open\" window. </p> </li> <li> <p>Using the Ryujinx window, navigate to the location of your dumped     XCI file and click Open. You will be asked to confirm whether you     want to install the firmware. Make sure your prod.keys are at least     as new as the firmware you are installing! (Your firmware version number may vary) </p> </li> <li> <p>Click Yes. You will see a message that the firmware is     installing and was successfully installed. </p> </li> <li> <p>Click OK. If all went well, you will now see your firmware version     listed as the \"System Version\" in the bottom right hand corner of     the main Ryujinx window. </p> </li> </ol>"},{"location":"setup/#adding-your-games-to-ryujinx","title":"Adding Your Games to Ryujinx","text":"<p>You have keys and firmware ready to go. Time to add your games!</p> <p>With Ryujinx open, click on Options &gt; Settings. This takes you straight to the General tab. </p> <p>There are two different methods in which you can add a Game Directory in this window.</p>"},{"location":"setup/#1st-method","title":"1<sup>st</sup> Method","text":"<p>Type the absolute path of the folder containing your games into the path field and click Add. </p>"},{"location":"setup/#2nd-method","title":"2<sup>nd</sup> Method","text":"<p>Without typing anything into the path field, click Add. </p> <p>This brings up the navigation window. Navigate to the folder containing your games (e.g. <code>D:\\Switch Games</code>) and click Add. </p> <ol> <li> <p>Whichever method you chose, click Save to save the game directory setting.</p> </li> <li> <p>Your games will now show up in the main Ryujinx window. </p> </li> </ol>"},{"location":"setup/#managing-game-updates","title":"Managing Game Updates","text":"<p>Manage game update versions from within Ryujinx</p> <p>Now that your games are added, you may wish to update your game for various reasons e.g. bugfixes, new content, etc. Ryujinx has built-in functionality to manage which version of the game you want to play.</p> <ol> <li> <p>In the main Ryujinx game list right-click the game you want to     apply an update to. Then click Manage Title Updates.  </p> <p></p> <p>After clicking Manage Title Updates, you will see the Ryujinx -- Title Update Manager menu.</p> </li> <li> <p>In the Ryujinx -- Title Update Manager menu, click Add. </p> </li> <li> <p>Clicking Add will bring up the navigation menu. Navigate to the location      of your game's update files and select update you want to add to Ryujinx,      and click Add. </p> <p>This will bring you back to the Ryujinx -- Title Update Manager window. You may repeat this for any other game version update files you wish to add to Ryujinx.</p> </li> <li> <p>In the Ryujinx -- Title Update Manager window, select the version     of the update you wish to be applied to the game and click Save. </p> </li> <li> <p>Verify that the proper version number is shown in the main Ryujinx     games list window. </p> <p>Your game update has now been applied, and you may repeat the process for any other games you wish to apply updates to.</p> </li> </ol>"},{"location":"setup/#managing-dlc","title":"Managing DLC","text":"<p>Manage Downloadable Content for your games</p> <p>Some games have downloadable content available that you may wish to add to your game. Ryujinx has built-in functionality to add &amp; manage your DLC.</p> <ol> <li> <p>With Ryujinx open, right-click on the game you want to add or     manage DLC for and click Manage DLC to bring up the Ryujinx - DLC     Manager window. </p> </li> <li> <p>Within the Ryujinx -- DLC Manager window, click Add to open the     DLC navigation screen. </p> </li> <li> <p>Navigate to the location of the DLC file(s) you wish to apply, then     double-click the file to automatically add it. Or you may select the     file or files, and click Add. Note: you may add more than one DLC file at a time! </p> </li> <li> <p>You will now see your DLC in the Ryujinx - DLC Manager window.     Click Save to save your configuration. </p> <p>Note: always drill down to see the proper status of the DLC .nca file you are managing. Checking and unchecking the .nca file is the way to enable and disable the DLC. The parent container (.nsp file) shows unchecked by default, even if the DLC is enabled. </p> </li> </ol> <p>Repeat this process, if you wish, for any other games you would like to manage DLC for.</p>"},{"location":"setup/#managing-mods","title":"Managing Mods","text":"<p>Quick Start Guide for managing mods</p> <p>Various game mods are available from enthusiasts &amp; content creators online. Ryujinx supports the following types of mods:</p> <ol> <li>ExeFS Partition Replacement  </li> <li>ExeFS File Replacement</li> <li>ExeFS Patching</li> <li>RomFS Partition Replacement</li> <li>RomFS File Replacement</li> </ol> <p>For an in-depth explanation of the mods implementation &amp; advanced usage options in Ryujinx, check the description in the original PR here.</p> <p>To enable mods:</p> <ol> <li>With Ryujinx open, right-click on the game you wish to manage mods for and click Open Mods Directory. </li> </ol> <p>This will open the <code>AppData\\Roaming\\Ryujinx\\mods\\contents\\&lt;game ID&gt;\\</code> folder.</p> <ol> <li> <p>Create a subfolder under the game id folder with an appropriate name conveying the mod you will be using. For instance, you might name the folder \"Lana\" if you were using a mod to add a Lana skin to Mario Kart 8 Deluxe. </p> </li> <li> <p>Copy your mod's romfs folder or exefs folder into the new folder you created. </p> </li> </ol> <p>Mods can also be placed in the <code>AppData\\Roaming\\Ryujinx\\sdcard</code> folder if the mod has been packaged for real hardware (usually indicated with an \"atmosphere\" folder as the top directory). With Ryujinx open, right-clicking on the game you wish to manage SD mods for and clicking Open Atmosphere Mods Directory will open the <code>AppData\\Roaming\\Ryujinx\\sdcard\\atmosphere\\contents\\&lt;game ID&gt;</code> folder where the romfs/exefs folders are located.  </p> <p> </p>"},{"location":"setup/#managing-cheats","title":"Managing Cheats","text":"<p>Ryujinx now has native cheats/runtime mods support! It implements full support Atmosphere style cheats (except game pausing/resume):  Atmosphere Cheats</p>"},{"location":"setup/#installation-of-atmosphere-cheats","title":"Installation of Atmosphere Cheats","text":"<p>A good place to acquire Atmosphere cheats is:</p> <ul> <li>WerWolv's EdiZon Cheats (general switch cheats)</li> </ul> <p>Inside the cheat <code>zip</code>, <code>rar</code>, or other archive format, there is usually a file structure like this:</p> <pre><code>Cheat_Name\\cheats\\0123456789ABCDEF.txt\n</code></pre> <p>Where <code>0123456789ABCDEF</code> will vary according to the game and the cheat (this is the build id of the executable the cheat attaches itself to). A cheat can also contain several <code>txt</code> files.  </p> <p>Cheats are game-specific and version-specific, they will not work if transferred from one game to another or to an incompatible update of the game.</p> <p>To install the cheat: </p> <ul> <li>Open Ryujinx, right-click the game you wish to install the cheat and select to open its <code>Mod directory</code>;</li> <li>A directory like this will open: <code>Ryujinx\\mods\\contents\\XXXXXXXXXXXXXXXX\\</code>, <code>XXXXXXXXXXXXXXXX</code> will be the id of the chosen game;</li> <li>Extract the cheat archive to the mod directory, keeping the cheat name: <code>Ryujinx\\mods\\contents\\XXXXXXXXXXXXXXXX\\Cheat_Name\\cheats\\&lt;all the txt files&gt;</code>.</li> </ul>"},{"location":"setup/#activatingdeactivating-cheats","title":"Activating/Deactivating cheats","text":"<p>Currently, all cheats are automatically enabled and cannot be disabled, so mixing, for instance, 60, 90 and 120 fps cheats may cause a conflict. </p> <p>One alternative is to create a directory <code>disabled_cheats</code> in the mod directory and move all unused cheats there. Another one is to prepend something to the file name, for instance <code>off_0123456789ABCDEF.txt</code> as a valid cheat must not have anything but <code>0123456789ABCDEF.txt</code> in its name.</p> <p>The .txt files can also contain several cheats that may conflict. To switch off individual cheats inside a .txt file first backup the .txt file to something like <code>bak_0123456789ABCDEF.txt</code> (this will also prevent the backup to be loaded as a cheat). Next, in the .txt file, there will be sections, each with a name within <code>[ ]</code> brackets and filled with sequences of letters and numbers (the code of the cheat), for instance:</p> <pre><code>[New Super Mario Bros. U Deluxe]\n\n[Start with 99 Lives]\n58000000 00CC9860\n78000000 0002A1C0\n61000000 00000000 00000063\n\n[Time = 999]\n58000000 00C88A70\n78001000 00000090\n64000000 00000000 003E6F00\n\n[Start as Penguin]\n58000000 00CC9860\n78000000 0002A1C4\n61000000 00000000 00000005\n</code></pre> <p>To disable the time cheat, just remove its section and the code:</p> <pre><code>[New Super Mario Bros. U Deluxe]\n\n[Start with 99 Lives]\n58000000 00CC9860\n78000000 0002A1C0\n61000000 00000000 00000063\n\n[Start as Penguin]\n58000000 00CC9860\n78000000 0002A1C4\n61000000 00000000 00000005\n</code></pre>"},{"location":"setup/#managing-user-profiles","title":"Managing User Profiles","text":"<p>Ryujinx offers the ability to use multiple, customizable user profiles. WARNING: Save data is specific to each user profile so if you delete a profile, the save data under that profile is also deleted.</p>"},{"location":"setup/#edit-a-user-profile","title":"Edit a user profile","text":"<ol> <li>With Ryujinx open, but no game running, click on Options &gt; Manage User Profiles </li> </ol> <p>Now in the Manage User Profiles window, you will see the default RyuPlayer profile. This is the default profile that comes with Ryujinx and cannot be deleted as it contains all of the original save data for your games. You may, however, rename it and change the picture to something else, if you like. </p> <ol> <li> <p>To rename a profile, simply select it and type in the new text. </p> </li> <li> <p>To change the profile image, select the profile in the list and click Change Profile Image. </p> </li> </ol> <p>You will then be prompted to select from either a custom image, or from one of the many avatars provided in the firmware. </p> <p>If you choose to import an image: supported formats are <code>png</code>, <code>bmp</code>, and <code>jpg</code>. You can use the image you want, but it will be resized to 256x256 pixels, so using a square image is recommended.</p> <p>If you choose to use a built-in firmware avatar, click on Select Firmware Avatar </p> <p>In the Manage Accounts - Avatar window, select the avatar you want, and choose a background color. When finished, click Choose to make it the profile's image. </p> <p></p>"},{"location":"setup/#add-a-new-profile","title":"Add a new profile","text":"<ol> <li> <p>With Ryujinx open, but no game running, click on Options &gt; Manage User Profiles </p> </li> <li> <p>Click on the Add New Profile button at the bottom left corner of the window. </p> </li> <li> <p>A window will pop up asking you to name the new Profile. Enter the desired name of the new profile, and click OK. </p> </li> <li> <p>You will now be prompted to choose the profile image. Follow step 3 from the user profile editing instructions above. </p> </li> </ol> <p>That's it!</p>"},{"location":"setup/#input-configuration","title":"Input Configuration","text":"<p>Setting up your controls: this part requires close attention, so read carefully!</p> <ol> <li> <p>Plug in the controller(s) that you will be using.</p> </li> <li> <p>Open Ryujinx and navigate to Options &gt; Settings </p> </li> <li> <p>You will now see the Ryujinx - Settings window. Click on the     Input tab. </p> <p>Before proceeding to configure anything, the options on the Input page need some explanation:</p> <p>Direct Keyboard Access: Checking this box emulates a real, physical keyboard being directly connected to a Nintendo Switch via USB. Do not check this box unless you have a specific reason</p> <p>Enable Docked Mode: Checking this box emulates the Nintendo Switch being docked. Docked Mode enables higher resolution, higher FPS, and better graphical fidelity on games that support these features. If you check this box, you will need to click configure under Player 1 (top left menu item). If you leave this box unchecked, you will need to click configure under Handheld (bottom right menu item)</p> </li> <li> <p>Click Configure under Player 1 if you have enabled Docked     Mode, or click configure Handheld if you have not enabled Docked     Mode. </p> </li> <li> <p>You should now be in the Ryujinx -- Controller Settings screen.     Click on the Input Device dropdown and choose the Xinput     controller. If you have connected multiple controllers, choose the     one you want to be configured to be P1 in game. If you do not see any Xinput controllers in the list, you will need to use an Xinput wrapper/translator such as x360ce. </p> </li> <li> <p>After selecting your Xinput controller you should now see a full     mapping UI. If you want to map the buttons in a standard     Xinput-compatible fashion, there is no need to individually map the     buttons. Simply click on the empty Profile dropdown, select     Default, and click Load. This populates the buttons with preset     mappings for your Xinput-compatible (or Xinput wrapped/translated)     controller. Otherwise, click on \"Unbound\" for each button you want     to map, then press the actual button on your controller that you     want for the Nintendo Switch controller button you've     chosen. </p> <p>You may continue tweaking the settings to your liking, or binding each button from scratch if you want a fully custom button layout. NOTE: while the default Deadzones are 0.10, we recommend increasing your Deadzones to at least 0.20 in order to avoid unwanted joystick drift.</p> </li> </ol> <p>If you are in Docked Mode and have additional controllers to configure, configure them now under Player 2, Player 3, and so on.</p> <ol> <li>Click Save to save your configuration.</li> </ol> <p>Alternately, you may skip the input UI and edit your config.json file found in <code>%appdata%\\ryujinx\\</code></p>"},{"location":"setup/#motion-controls","title":"Motion Controls","text":""},{"location":"setup/#motion-controls_1","title":"Motion Controls","text":"<p>Ryujinx offers the ability to use motion controls with motion-enabled controllers such as a Switch Pro Controller, Joycons, Playstation DS4, smartphones with motion support, Steam controller, and others.</p> <p>To use motion controls in Ryujinx:</p> <ol> <li> <p>Launch &amp; configure your favorite cemuhook server application (Betterjoy, DS4Windows, Steam Gyro, etc.) with your bluetooth or wired motion-enabled controller. Leave the application running.</p> </li> <li> <p>In Ryujinx, navigate to Options &gt; Settings &gt; Input tab and select which controller you are configuring. Remember: if you are in docked mode, configure Player 1. If you are in Handheld mode, configure the Handheld controller. </p> </li> <li> <p>Select your motion controller from the dropdown. It will be listed as \"Xinput controller\". </p> </li> <li> <p>Configuration options:</p> </li> </ol> <ul> <li> <p>If you have already configured your controller's input buttons to your liking and only need to configure motion controls, check the \"Enable Motion Controls\" box and fill in the following information:  </p> <p>Controller Slot: the controller slot # your motion controller is configured as in your cemuhook server application. Default is \"0\" Gyro Sensitivity: 100% (you may adjust this to suit) Server Host: the IP address of the computer being used to host the cemuhook server. 127.0.0.1 is localhost/the same computer running Ryujinx. Server Port: 26760  </p> <p></p> </li> <li> <p>Alternately, you can simply click on the empty Profile dropdown, select Default, and click Load. This populates the buttons with preset mappings and also fills in the motion control settings with recommended defaults. You may continue tweaking the settings to your liking, or binding each button from scratch if you want a fully custom button layout.</p> <p>NOTE: while the default Deadzones are 0.10, we recommend increasing your Deadzones to at least 0.20 in order to avoid unwanted joystick drift. Make sure to check the \"Enable Motion Controls\" box!  </p> <p></p> </li> <li> <p>Paired Joycons extra options:</p> <p>If you set your controller type to Joycon Pair, an option called \"Mirror Input\" becomes available. This is useful for games in which both Joycons are connected to a Joycon grip and are moving together. If you enable this checkbox, the first Joycon's motion will be used for both Joycons.  </p> <p></p> </li> </ul> <ol> <li>Click Save to save your configuration.</li> </ol> <p>Repeat steps 2 through 5 for any other motion controllers you wish to configure. If you have more than one, make sure to choose the respective slot # for each controller!</p>"},{"location":"setup/#amiibo-emulation","title":"Amiibo Emulation","text":"<p>All Amiibo are able to be virtually scanned within the emulator, as long as you are actively connected to the internet. No files or dumps are required!</p> <p>To scan an Amiibo:</p> <ol> <li> <p>While playing a game that supports Amiibo, either navigate to the area where Amiibo scanning is expected, or press/hold the correct button to enable the Amiibo scan prompt. This site has a basic list of supported games and what benefits are provided by each: https://amiibo.life/games </p> </li> <li> <p>Click the \"Actions\" menu header, then click \"Scan an Amiibo\" </p> </li> <li> <p>Choose the Amiibo you want from the Amiibo Series and Character dropdowns. Note: only the Amiibo that have content for the game you are currently playing are shown in this window. All the same, if you'd like to see all Amiibo you may check the box that says \"Show All Amiibo\". </p> </li> </ol> <p>Addendum: In The Legend of Zelda: Breath of the Wild, you may continually scan Amiibo as many times as you wish by checking the box labeled \"Hack: Use Random Tag Uuid\" box.</p>"},{"location":"setup/#profiled-persistent-translation-cache","title":"Profiled Persistent Translation Cache","text":"<p>Speed up game loading times with PPTC</p> <p>In a nutshell, this feature caches translated functions so that they do not need to be translated every time the game loads. This results in a significant reduction of load times --the amount of time between launching a game and arriving at the title screen-- for nearly every game.</p> <p>NOTE: You must launch the game at least twice and let it load to the title screen or beyond before performance improvements are unlocked on the third launch! These improvements are permanent and do not require any extra launches going forward.</p> <p>PPTC (Profiled Persistent Translation Cache) is now enabled by default. To disable it:  </p> <ol> <li> <p>With Ryujinx open, click on Options &gt; Settings </p> </li> <li> <p>Then navigate to the System tab and uncheck the box marked     Enable Profiled Persistent Translation Cache </p> </li> </ol> <p>From time to time you may wish to examine or purge your PPTC cache files if you are experiencing PPTC-related issues.</p> <p>To open the PPTC cache file location:  </p> <ol> <li> <p>With Ryujinx open, right-click the game in the game list whose PPTC cache files you wish to view. This will bring up a pop-up menu.</p> </li> <li> <p>Navigate to Cache Management &gt; Open the PPTC directory </p> </li> </ol> <p>To purge the PPTC cache files:  </p> <ol> <li> <p>With Ryujinx open, right-click the game in the game list whose PPTC cache files you wish to purge. This will bring up a pop-up menu.</p> </li> <li> <p>Navigate to Cache Management &gt; Purge the PPTC cache </p> </li> </ol>"},{"location":"setup/#graphics-enhancements","title":"Graphics Enhancements","text":"<p>Ryujinx offers a few graphics enhancement options.</p> <ol> <li> <p>Resolution Scaling, which offers a much sharper image with little to no impact to performance. Resolution scaling can increase image quality much more noticeably than Anisotropic Filtering. Ryujinx's resolution scaling implementation allows native, 2x, 3x, 4x, or even custom ratios for upscaling.</p> </li> <li> <p>Anisotropic Filtering, which can visibly improve graphic quality. Wikipedia says: In layman's terms, anisotropic filtering retains the \"sharpness\" of a texture normally lost by MIP map texture's attempts to avoid aliasing. Anisotropic filtering can therefore be said to maintain crisp texture detail at all viewing orientations while providing fast anti-aliased texture filtering.</p> </li> <li> <p>Shader Cache, which stores onto disk the shaders that have already been compiled, negating the need to compile them again. This feature is highly sought after as it significantly reduces stuttering and FPS drops on subsequent plays of a particular game making for a smoother, more enjoyable gameplay experience. Note: Shader Cache is enabled by default.</p> </li> <li> <p>Aspect Ratio Options, which allow you to adjust the width-to-height ratio to your liking. Note: these options may give your game a stretched or squeezed appearance unless you are using mods that change the expected aspect ratio of the game.</p> </li> </ol>"},{"location":"setup/#enable-resolution-scaling","title":"Enable Resolution Scaling","text":"<p>Note: Enabling this feature may cause graphical glitches on some games. These settings may be changed in-game on the fly! On a standard 1080p display, 2x resolution scaling is recommended.</p> <ol> <li>With Ryujinx open, click Options &gt; Settings </li> <li> <p>Navigate to the Graphics tab and click the dropdown next to Resolution Scale. Select your desired level of resolution scaling. </p> <p>Click Save to save the enhancement setting.</p> </li> </ol>"},{"location":"setup/#enable-anisotropic-filtering","title":"Enable Anisotropic Filtering","text":"<p>Note: enabling this feature may cause graphical glitches on some games.</p> <ol> <li> <p>With Ryujinx open, click on Options &gt; Settings </p> </li> <li> <p>Navigate to the Graphics tab and click the dropdown next to     Anisotropic Filtering. Set it to your desired level. </p> <p>Click Save to save the enhancement setting.</p> </li> </ol>"},{"location":"setup/#manage-shader-cache","title":"Manage shader Cache","text":"<p>Shader Cache is enabled by default. There are no good reasons to disable it other than for testing purposes. </p> <p>Disabling this setting is strongly discouraged. However, if you absolutely must disable it:  </p> <ol> <li> <p>With Ryujinx open, navigate to Options &gt; Settings.</p> </li> <li> <p>Navigate to the Graphics tab and disable shader cache by unchecking the box marked \"Enable Shader Cache\"</p> <p>In some rare cases, a shader cache might become corrupted and crash when compiling shaders on boot. To solve this you'll have to purge the shader cache for that particular game. Right click on a game in the game list and navigate to Cache Management &gt; Purge Shader Cache. </p> </li> </ol> <p>To view the shader cache directory for a particular game:  </p> <ol> <li>Right click on a game in the game list and navigate to Cache Management &gt; Open Shader Cache Directory. </li> </ol>"},{"location":"setup/#adjust-aspect-ratio","title":"Adjust aspect ratio","text":""},{"location":"setup/#method-1","title":"Method 1","text":"<p>With Ryujinx open, navigate to Options &gt; Settings and click on the Graphics tab. Click on the Aspect Ratio dropdown and adjust the ratio to your liking. </p>"},{"location":"setup/#method-2","title":"Method 2","text":"<p>With your game running, click on the aspect ratio button in the status toolbar at the bottom of the Ryujinx window. </p>"},{"location":"setup/#method-3","title":"Method 3","text":"<ol> <li>Use Option 1 and select \"Stretch to Fit Window\" or Option 2 and select \"Stretched\".</li> <li>Simply click and drag your window borders to the size you want!</li> </ol>"},{"location":"setup/#portable-mode","title":"Portable Mode","text":"<p>If you wish, you may use a custom folder location for all Ryujinx data (as opposed to keeping it in its default location: <code>%appdata%</code>). This is done via the command-line or, more conveniently, a custom shortcut. In the future, the ability to configure custom data folders may be added to the GUI.</p> <p>NOTE: You must manually create the custom folder first before using portable mode! After enabling portable mode, you will need to copy your prod.keys file and any desired game data/save data from its original location to the new data folder.</p>"},{"location":"setup/#enable-portable-mode","title":"Enable Portable Mode","text":""},{"location":"setup/#method-1-create-a-portable-subfolder","title":"Method 1: Create a \"portable\" subfolder","text":"<p>Recommended method</p> <p>Create a subfolder in the Ryujinx program base directory called <code>portable</code>. This automatically enables portable mode and utilizes this <code>portable</code> folder for system folder contents (keys, firmware, PPTC/shader caches, etc.). </p>"},{"location":"setup/#method-2-command-line","title":"Method 2: Command-line","text":"<p>Open a command prompt, navigate to the location of the Ryujinx executable and type the following command: <code>ryujinx.exe -r D:\\[folderpath]</code>. For example, if your custom folder was <code>D:\\ryujinxdata</code>, your command would be the following: <pre><code>ryujinx.exe -r D:\\ryujinxdata\n</code></pre></p> <p></p> <p>The command prompt window will become the console window when Ryujinx launches.</p>"},{"location":"setup/#method-3-custom-shortcut","title":"Method 3: Custom Shortcut","text":"<ol> <li> <p>Right-click on your Ryujinx executable and click Send To -&gt; Desktop Shortcut</p> <p></p> </li> <li> <p>Locate the new shortcut on your desktop and right-click on it, then click Properties</p> <p></p> </li> <li> <p>In the Properties window, click into the Target field and add a space onto the end of the existing command. Then add <code>-r [folderpath]</code> where <code>[folderpath]</code> is your own custom data folder full path, and click OK.     For example, if your custom data folder was <code>D:\\ryujinxdata</code>, the addition you would paste into the target field would be <code>-r D:\\ryujinxdata</code>.</p> <p></p> <p>On MacOS, the command would be <code>/Applications/Ryujinx.app/Contents/MacOS/Ryujinx -r /path/to/custom/ryujinx/folder</code>.  </p> <p>You can now use this shortcut any time you want to launch Ryujinx in portable mode!</p> </li> </ol>"},{"location":"setup/#launch-in-fullscreen","title":"Launch in Fullscreen","text":"<p>Ryujinx can automatically launch games in fullscreen mode. You can enable this functionality in one of two ways:</p>"},{"location":"setup/#method-1_1","title":"Method 1","text":"<p>In Ryujinx, click on Options, then check the box marked \"Start Games in Fullscreen Mode\". </p>"},{"location":"setup/#method-2_1","title":"Method 2","text":"<p>If you launch Ryujinx from the commandline, add a --fullscreen option. Like so: </p>"},{"location":"setup/keys/","title":"Keys","text":"<p>Keys are required for decrypting most of the file formats used by the Nintendo Switch.</p> <p>Keysets are stored as text files. These 2 filenames are automatically read: * <code>prod.keys</code> - Contains common keys used by all Nintendo Switch devices. * <code>title.keys</code> - Contains game-specific keys.</p> <p>Ryujinx will first look for keys in <code>C:\\Users\\yourname\\AppData\\Roaming\\Ryujinx\\system</code>, <code>\\portable\\system</code> on a portable install or <code>~/.var/app/org.ryujinx.Ryujinx/config/Ryujinx/system/</code>on the flatpak version. To access this directory, go to <code>File</code> &gt; <code>Open Ryujinx folder</code>, then click on <code>system</code>. If Ryujinx doesn't find any keys in those folders, it will look in <code>$HOME\\.switch</code>.</p> <p>To dump your <code>prod.keys</code> and <code>title.keys</code> please follow these steps. 1.  First off learn how to boot into RCM mode and inject payloads if you haven't already. 2.  Make sure you have an SD card with the latest release of Atmosphere inserted into your Nintendo Switch. 3.  Download the latest release of Picklock_RCM/Lockpick_RCM. 4.  Boot into RCM mode. 5.  Inject the <code>Picklock_RCM</code>/<code>Lockpick_RCM.bin</code> that you have downloaded at <code>Step 3.</code> using your preferred payload injector. We recommend TegraRCMGUI as it is easy to use and has a decent feature set. 6.  Using the <code>Vol+/-</code> buttons to navigate and the <code>Power</code> button to select, select <code>Dump from SysNAND | Key generation: X</code> (\"X\" depends on your Nintendo Switch's firmware version). 7.  The dumping process may take a while depending on how many titles you have installed. 8.  After its completion, press any button to return to the main menu of Picklock_RCM/Lockpick_RCM. 9.  Navigate to and select <code>Power off</code> if you have an SD card reader. Or you could Navigate and select <code>Reboot (RCM)</code> if you want to mount your SD card using <code>TegraRCMGUI &gt; Tools &gt; Memloader V3 &gt; MMC - SD Card</code>. 10. You can find your keys in <code>sd:/switch/prod.keys</code> and <code>sd:/switch/title.keys</code> respectively. 11. Copy these files and paste them in your Ryujinx <code>system</code> folder. And you're done!</p>"},{"location":"setup/keys/#title-keys","title":"Title keys","text":"<p>These are only used for games that are not dumped from cartridges but from games downloaded from the Nintendo eShop. These are also only used if the eShop dump does not have a <code>ticket</code>. If the game does have a ticket, Ryujinx will read the key directly from that ticket.</p> <p>Title keys are stored in the format <code>rights_id = key</code>.</p> <p>For example:</p> <pre><code>01000000000100000000000000000003 = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n01000000000108000000000000000003 = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n01000000000108000000000000000004 = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n</code></pre>"},{"location":"setup/keys/#prod-keys","title":"Prod keys","text":"<p>These are typically used to decrypt system files and encrypted game files. These keys get changed in about every major system update, so make sure to keep your keys up-to-date if you want to play newer games!</p>"},{"location":"setup/firmware-dumping/","title":"Firmware Dumping","text":"<p>Thanks to Candy for providing the guide details &amp; images. Loosely based off of NH Switch Guide.</p> <p>What you will need: - The latest release of TegraExplorer (the <code>.bin</code> file)</p> <ol> <li> <p>Make sure your sysMMC is up to date. If your sysMMC is not up to date, update it through System Settings.</p> </li> <li> <p>Boot your Switch into RCM.</p> </li> <li> <p>Using a Payload Injector, such as TegraRcmGUI or fusee-interfacee-tk, inject the TegraExplorer.bin Payload (like you would with Hekate).</p> </li> </ol> <p></p> <ol> <li>Using the joystick and the A buttons, select <code>FirmwareDump.te</code>.</li> </ol> <p></p> <ol> <li>Select <code>Dump sysmmc</code>.</li> </ol> <p></p> <ol> <li>Wait about 1-2 minutes for the tool to dump your firmware.</li> </ol> <p></p> <ol> <li> <p>When the tool finishes, press any button.</p> </li> <li> <p>Select <code>Power off</code>.</p> </li> </ol> <p></p> <ol> <li> <p>Remove the SD card from your Switch, and insert it into your PC.</p> </li> <li> <p>A folder containing your firmware should now exist at <code>/tegraexplorer/Firmware/&lt;version-number&gt;</code></p> </li> </ol> <p></p>"},{"location":"setup/multiplayer-ldn/","title":"Multiplayer","text":""},{"location":"setup/multiplayer-ldn/#ryujinx-offers-multiplayer-support-over-the-internet-via-ldnlocal-wireless-emulation-in-a-special-preview-build-furthermore-all-versions-of-ryujinx-now-also-support-ldn-connectivity-with-cfw-nintendo-switch-consoles-via-ldn_mitm-and-lan-mode-connectivity-with-switch-consoles-on-games-with-lan-functionality","title":"Ryujinx offers multiplayer support over the internet via LDN/Local Wireless emulation in a special preview build. Furthermore, all versions of Ryujinx now also support LDN connectivity with CFW Nintendo Switch consoles via ldn_mitm, and LAN Mode connectivity with Switch consoles on games with LAN functionality!","text":""},{"location":"setup/multiplayer-ldn/#download-ldn-313-here","title":"Download LDN 3.1.3 here!","text":""},{"location":"setup/multiplayer-ldn/#windows-httpswwwpatreoncomfileh74910544i13368552","title":"Windows: https://www.patreon.com/file?h=74910544&amp;i=13368552","text":""},{"location":"setup/multiplayer-ldn/#windows-avalonia-ui-httpswwwpatreoncomfileh74910544i13368547","title":"Windows (Avalonia UI): https://www.patreon.com/file?h=74910544&amp;i=13368547","text":""},{"location":"setup/multiplayer-ldn/#linux-httpswwwpatreoncomfileh74910544i13368529","title":"Linux: https://www.patreon.com/file?h=74910544&amp;i=13368529","text":""},{"location":"setup/multiplayer-ldn/#linux-avalonia-ui-httpswwwpatreoncomfileh74910544i13368553","title":"Linux (Avalonia UI): https://www.patreon.com/file?h=74910544&amp;i=13368553","text":""},{"location":"setup/multiplayer-ldn/#macos-301-avalonia-ui-httpsgithubcomryujinxrelease-channel-macosreleasesdownload110-macos1ryujinx-110-macos1-macos_universalapptargz","title":"macOS (3.0.1, Avalonia UI): https://github.com/Ryujinx/release-channel-macos/releases/download/1.1.0-macos1/Ryujinx-1.1.0-macos1-macos_universal.app.tar.gz","text":""},{"location":"setup/multiplayer-ldn/#table-of-contents","title":"Table of Contents","text":"<p>LDN/Local Wireless</p> <p>LDN Games &amp; How to Play</p> <p>LAN Mode </p> <p>LAN Mode Game List &amp; Cheat Sheet </p>"},{"location":"setup/multiplayer-ldn/#ldn","title":"LDN","text":"<p>This feature emulates the \"Local Play\" or \"Local Wireless\" multiplayer mode in a particular game, but connects you with other Ryujinx players anywhere in the world with internet access. </p> <p>Note: this feature does not work with \"Online Mode\", which uses the Nintendo Switch Online service. </p>"},{"location":"setup/multiplayer-ldn/#requirements","title":"Requirements:","text":"<ul> <li>An active high-speed internet connection.</li> <li>The Ryujinx application must be enabled for inbound traffic in your firewall if you are the game host. Windows Firewall, if enabled, will pop-up prompting you to allow access. Make sure to allow it!</li> <li>UPNP enabled in your router/firewall for P2P mode (most routers already have this enabled). Otherwise the game can still work (albeit with higher latency) using the proxy host.</li> <li>The same game version as those you are playing with e.g. Animal Crossing: New Horizons 2.0.5; mixing game versions will not work!</li> </ul>"},{"location":"setup/multiplayer-ldn/#configuration-options","title":"Configuration Options:","text":"<p>Multiplayer support via P2P network hosting is already enabled by default in this preview build. In most setups, it will simply work without any configuration.</p> <p>Specific Options:</p> <p>We recommend creating a user profile and choosing your username in Options &gt; Manage User Profiles before going online, as the default profile is known to cause connection issues in some games.</p> <p></p> <p>You will have to transfer your saves if you had any on the default profile. To access them, switch to the old profile then right click your game and click on <code>Open User Save Directory</code>.</p> <p>Mode: Set to Ryujinx Ldn by default. There are 3 modes: - Disabled - Multiplayer functionality is disabled. If you're planning on using this, that's a sign you should just use our latest regular build instead. - Ryujinx LDN - This enables standard connectivity with Ryujinx users over the internet ONLY. - ldn_mitm - Enables connectivity with a CFW (hacked) Nintendo Switch AND other Ryujinx users on the same network.</p> <p>Disable P2P Network Hosting: Unchecked by default. If you are experiencing connectivity issues and cannot get P2P to work, you may check the box labeled \"Disable P2P Network Hosting (may increase latency)\" to instead use the Ryujinx proxy host server.</p> <p>Network Passphrase: Empty by default. When empty, you will be able to connect to anyone else playing the same game version as yourself. To play with friends, either create a passphrase yourself or click the \"Generate Random\" button and share it with them, then have them enter the same passphrase. This will prevent unwanted parties from joining your game, as well as limit the number of potential rooms to join for popular games like Mario Kart 8. We want to make sure you get to the right Grand Prix!</p> <p></p>"},{"location":"setup/multiplayer-ldn/#how-to-play-ldn","title":"How to play LDN","text":"<p>While LDN is available on a vast amount of games, here are some of the most popular ones and how to access Ryujinx LDN on them.</p> <p>Before playing LDN multiplayer, go to Options &gt; Settings &gt; System and ensure \"Enable Guest Internet Access\" is OFF and \"Enable Vsync\" is ON, then head to Multiplayer settings and ensure the mode is set to \"Ryujinx Ldn\" if you want to play online, or \"ldn_mitm\" if you want to play with others in the same local network. Once the emulator enters local wireless, a Windows firewall warning will appear. Make sure to allow it to connect.</p> <p>If you're looking for people to play with, we have dedicated LDN channels in our Discord server.</p>"},{"location":"setup/multiplayer-ldn/#animal-crossing-new-horizons","title":"Animal Crossing: New Horizons","text":"<p>Head to Dodo Airlines, talk to Orville, choose either \"I wanna fly!\" or \"I want visitors.\", and then select \"Via local play.\"</p> <p></p>"},{"location":"setup/multiplayer-ldn/#fast-rmx","title":"Fast RMX","text":"<p>On the main menu, select \"Multiplayer\" and then \"Local communication\".</p> <p></p>"},{"location":"setup/multiplayer-ldn/#mario-kart-8-deluxe","title":"Mario Kart 8 Deluxe","text":"<p>This game requires a built shader cache to play LDN. The game will disconnect if any given player cannot maintain 60fps, and shader compilation stuttering will cause connection errors. If you are experiencing issues, run through every course in single-player first. On fast CPUs, shader compilation may not be a problem when running Vulkan.</p> <p>On the main menu, select \"Wireless Play\" and then \"1p\". \"2p\" is only for playing LDN with splitscreen, for when you have someone else with you, either in person or on Parsec.</p> <p></p>"},{"location":"setup/multiplayer-ldn/#mario-party-superstars","title":"Mario Party Superstars","text":"<p>This game requires version 1.0.0 of the game to work on LDN. It's also prone to disconnecting if no shader cache has been built, though less so than Mario Kart 8.</p> <p>On the main menu, select \"Local Play\". </p> <p></p>"},{"location":"setup/multiplayer-ldn/#mario-strikers-battle-league","title":"Mario Strikers: Battle League","text":"<p>This game requires a mod to bypass the intro crash. Right click the game &gt; Open mods directory, and extract on the folder.</p> <p>On the main menu, select \"Quick battle\", then select \"Local wireless\".</p> <p></p>"},{"location":"setup/multiplayer-ldn/#monster-hunter-generations-ultimate","title":"Monster Hunter Generations Ultimate","text":"<p>Press <code>Y</code>, make sure \"Hunter Search\" is on. </p> <p></p>"},{"location":"setup/multiplayer-ldn/#monster-hunter-rise","title":"Monster Hunter Rise","text":"<p>Speak to Senri the Mailman and select \"Play Locally\". </p> <p> </p>"},{"location":"setup/multiplayer-ldn/#pokken-tournament-dx","title":"Pokk\u00e9n Tournament DX","text":"<p>Use Vulkan for this game.</p> <p>On the main menu, select \"Wireless Battle\".</p> <p></p>"},{"location":"setup/multiplayer-ldn/#pokemon-brilliant-diamond-and-shining-pearl","title":"Pok\u00e9mon Brilliant Diamond and Shining Pearl","text":"<p>In a Pok\u00e9mon Center, head upstairs and talk to the lady in the middle if you want to trade, or talk to the lady in the right if you want to battle. For the latter, select \"Local communication\".</p> <p> </p>"},{"location":"setup/multiplayer-ldn/#pokemon-scarlet-and-violet","title":"Pok\u00e9mon Scarlet and Violet","text":"<p>Press <code>X</code> to bring up the menu, select \"Pok\u00e9 Portal\" (available after the first Pok\u00e9mon Center) and choose the preferred option. </p> <p>  \"Surprise Trade\", \"Battle Stadium\" and \"Mystery Gift\" will not work due to requiring Nintendo Switch Online connections. This also applies to Pok\u00e9 Portal News.</p>"},{"location":"setup/multiplayer-ldn/#pokemon-sword-and-shield","title":"Pok\u00e9mon Sword and Shield","text":"<p>Press <code>Y</code> to bring up the comms menu and pick an option.</p> <p></p>"},{"location":"setup/multiplayer-ldn/#pokemon-legends-arceus","title":"Pok\u00e9mon Legends: Arceus","text":"<p>In the village, next to the Galaxy building, talk to Simona, select \"I want to trade Pok\u00e9mon\", and then \"Someone nearby\".</p> <p></p>"},{"location":"setup/multiplayer-ldn/#splatoon-2","title":"Splatoon 2","text":"<p>On the main plaza, go into the building on the right.</p> <p> </p>"},{"location":"setup/multiplayer-ldn/#splatoon-3","title":"Splatoon 3","text":"<p>Press <code>X</code> to bring up the menu, go to The Shoal and talk to the receptionist.</p> <p> </p>"},{"location":"setup/multiplayer-ldn/#super-mario-3d-world","title":"Super Mario 3D World","text":"<p>Press <code>R</code> on the overworld map and select \"Local Wireless Play\".</p> <p> </p>"},{"location":"setup/multiplayer-ldn/#super-smash-bros-ultimate","title":"Super Smash Bros. Ultimate","text":"<p>On the main menu, press <code>ZR</code> (or press <code>right</code> twice) and select \"Local Wireless\".</p> <p></p>"},{"location":"setup/multiplayer-ldn/#lan-mode","title":"LAN Mode","text":"<p><code>Enable Guest Internet Access</code> allows you to connect with a Switch console on the same network as your PC running Ryujinx, as long as the game supports LAN as well. This feature is available on mainline Ryujinx too. See below for a list of games with a LAN mode.</p> <p></p>"},{"location":"setup/multiplayer-ldn/#lan-mode-games","title":"LAN Mode Games","text":"<p>ARMS Bayonetta 2 Duke Nukem 3D: 20<sup>th</sup> Anniversary World Tour Mario &amp; Sonic at the Olympic Games Tokyo 2020 Mario Kart 8 Deluxe Mario Tennis Aces Pokk\u00e9n Tournament DX Pok\u00e9mon Sword and Pok\u00e9mon Shield Saints Row: the Third - The Full Package Saints Row IV Splatoon 2 Splatoon 3 Titan Quest</p>"},{"location":"setup/multiplayer-ldn/#arms-lan-mode","title":"ARMS LAN Mode","text":"<p>Hold <code>Left Analog stick button</code> and press <code>L</code> + <code>R</code> on the main menu screen. The \"Local\" option will change to \"LAN Play\".  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#bayonetta-2-lan-mode","title":"Bayonetta 2 LAN Mode","text":"<p>Enter tag climax and highlight local play. Hold <code>Left Analog stick button</code> and press <code>L</code> + <code>R</code>.  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#duke-nukem-3d-20th-anniversary-world-tour-lan-mode","title":"Duke Nukem 3D: 20<sup>th</sup> Anniversary World Tour LAN Mode","text":"<p>On the main menu, choose \"Multiplayer\" then select \"LAN Play\".</p> <p></p>"},{"location":"setup/multiplayer-ldn/#mario-and-sonic-at-the-olympic-games-tokyo-2020-lan-mode","title":"Mario and Sonic at the Olympic Games Tokyo 2020 LAN Mode","text":"<p>Press <code>L</code> + <code>R</code> + <code>Left Analog Stick Button</code> on the main menu screen. The \"Local Play\" option will change to \"LAN Play\".  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#mario-kart-8-deluxe-lan-mode","title":"Mario Kart 8 Deluxe LAN Mode","text":"<p>Press <code>L</code> + <code>R</code> + <code>Left Analog Stick Button</code> on the main menu screen. The \"Wireless Play\" option will change to \"LAN Play\".  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#mario-tennis-aces-lan-mode","title":"Mario Tennis Aces LAN Mode","text":"<p>Select Free Play from the Main Menu. Hold <code>Left Analog stick button</code> and press <code>L</code> + <code>R</code>. The \"Local Play\" option will change to \"LAN Play\".  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#pokken-tournament-dx-lan-mode","title":"Pokk\u00e9n Tournament DX LAN Mode","text":"<p>You must use game version 1.3.3. From the main screen select a game. Press <code>B</code> + <code>X</code> + <code>Dpad-Down</code> and press <code>L</code> + <code>R</code>. A new screen asking if you want to enter Event Mode will appear.  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#pokemon-sword-and-pokemon-shield-lan-mode","title":"Pok\u00e9mon Sword and Pok\u00e9mon Shield LAN Mode","text":"<p>Note: LAN Mode in these games became inconsistent due to a game update. If you're unable to connect, there is probably no solution other than resorting to ldn_mitm.</p> <p>Press <code>L</code> + <code>R</code> + <code>Left Analog stick button</code> in the options menu. The following screen/prompt will pop up. You must have gotten far enough in the game to unlock multiplayer in order to use LAN Mode!  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#saints-row-the-third-the-full-package-lan-mode","title":"SAINTS ROW THE THIRD THE FULL PACKAGE LAN Mode","text":"<p>At the main menu, select \"CO-OP CAMPAIGN\" and then Select \"LAN GAME\".  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#saints-row-iv-lan-mode","title":"Saints Row IV LAN Mode","text":"<p>On the main menu, select \"Co-op Campaign\" then \"LAN Play\".</p> <p></p>"},{"location":"setup/multiplayer-ldn/#splatoon-2-lan-mode","title":"Splatoon 2 LAN Mode","text":"<p>Hold <code>L</code> + <code>R</code> + <code>Left Analog Stick Button</code> at the local play option for 4-5 seconds until LAN mode is activated. You will see the following prompt:  </p> <p></p>"},{"location":"setup/multiplayer-ldn/#splatoon-3-lan-mode","title":"Splatoon 3 LAN Mode","text":"<p>Press <code>X</code> to bring up the menu, go to The Shoal, enable Guest Internet Access (enabling it before booting the game will cause it to get stuck trying to connect to online). Hold <code>ZL</code> + <code>ZR</code> + <code>Left Stick Button</code> for 5 seconds at The Shoal and you'll see the prompt in the image below. LAN mode will be enabled afterwards.</p> <p></p>"},{"location":"setup/multiplayer-ldn/#titan-quest-lan-mode","title":"Titan Quest LAN Mode","text":"<p>Select \"Multiplayer - Local\" in the main menu.</p> <p></p>"}]}